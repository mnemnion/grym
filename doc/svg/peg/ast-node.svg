<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="4348pt" height="2659pt"
 viewBox="0.00 0.00 4348.00 2658.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2654.8044)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2654.8044 4344,-2654.8044 4344,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1655" cy="-2632.8044" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="1655" y="-2628.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 336</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1655" cy="-2560.8044" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1655" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;336</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1655,-2614.6358C1655,-2606.9354 1655,-2597.7788 1655,-2589.2211"/>
<polygon fill="#000000" stroke="#000000" points="1658.5001,-2589.2177 1655,-2579.2177 1651.5001,-2589.2177 1658.5001,-2589.2177"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="199" cy="-2488.8044" rx="27" ry="18"/>
<text text-anchor="middle" x="199" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1589.1559,-2559.8889C1350.9502,-2556.3177 534.505,-2541.7558 276,-2506.8044 262.1519,-2504.9321 247.1428,-2501.703 234.0852,-2498.492"/>
<polygon fill="#000000" stroke="#000000" points="234.6456,-2495.0231 224.0912,-2495.947 232.9182,-2501.8066 234.6456,-2495.0231"/>
</g>
<!-- block_3 -->
<g id="node4" class="node">
<title>block_3</title>
<ellipse fill="none" stroke="#000000" cx="331" cy="-2488.8044" rx="45.9804" ry="18"/>
<text text-anchor="middle" x="331" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 1&#45;1</text>
</g>
<!-- section_1&#45;&gt;block_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;block_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1589.3337,-2559.6045C1366.2806,-2555.2714 638.727,-2538.9636 407,-2506.8044 397.7286,-2505.5177 387.9311,-2503.6161 378.5655,-2501.5248"/>
<polygon fill="#000000" stroke="#000000" points="379.1516,-2498.0676 368.6176,-2499.2012 377.5593,-2504.8841 379.1516,-2498.0676"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="489" cy="-2488.8044" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="489" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;28</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1590.6499,-2556.8308C1392.0917,-2544.57 789.2058,-2507.342 569.8797,-2493.7987"/>
<polygon fill="#000000" stroke="#000000" points="569.9254,-2490.295 559.7287,-2493.1719 569.494,-2497.2817 569.9254,-2490.295"/>
</g>
<!-- codeblock_5 -->
<g id="node6" class="node">
<title>codeblock_5</title>
<ellipse fill="none" stroke="#000000" cx="910" cy="-2488.8044" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="910" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 32&#45;190</text>
</g>
<!-- section_1&#45;&gt;codeblock_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;codeblock_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1592.7631,-2554.7896C1459.6948,-2541.9293 1147.3141,-2511.7395 995.6385,-2497.0809"/>
<polygon fill="#000000" stroke="#000000" points="995.7323,-2493.5737 985.442,-2496.0955 995.0589,-2500.5413 995.7323,-2493.5737"/>
</g>
<!-- block_6 -->
<g id="node7" class="node">
<title>block_6</title>
<ellipse fill="none" stroke="#000000" cx="1250" cy="-2488.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1250" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 192&#45;193</text>
</g>
<!-- section_1&#45;&gt;block_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;block_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1599.5357,-2550.9441C1525.415,-2537.7671 1394.2719,-2514.4528 1315.4139,-2500.4336"/>
<polygon fill="#000000" stroke="#000000" points="1315.5766,-2496.9077 1305.1183,-2498.6032 1314.3513,-2503.7996 1315.5766,-2496.9077"/>
</g>
<!-- codeblock_7 -->
<g id="node8" class="node">
<title>codeblock_7</title>
<ellipse fill="none" stroke="#000000" cx="1570" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1570" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 194&#45;252</text>
</g>
<!-- section_1&#45;&gt;codeblock_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;codeblock_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1634.4239,-2543.3752C1623.6454,-2534.2452 1610.2761,-2522.9207 1598.515,-2512.9583"/>
<polygon fill="#000000" stroke="#000000" points="1600.574,-2510.1155 1590.6813,-2506.3227 1596.0495,-2515.4568 1600.574,-2510.1155"/>
</g>
<!-- block_8 -->
<g id="node9" class="node">
<title>block_8</title>
<ellipse fill="none" stroke="#000000" cx="1886" cy="-2488.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1886" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 254&#45;256</text>
</g>
<!-- section_1&#45;&gt;block_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;block_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1698.4493,-2547.2618C1736.4819,-2535.4075 1791.8686,-2518.1441 1832.5961,-2505.4498"/>
<polygon fill="#000000" stroke="#000000" points="1833.8479,-2508.7258 1842.3534,-2502.4086 1831.7649,-2502.0429 1833.8479,-2508.7258"/>
</g>
<!-- codeblock_9 -->
<g id="node10" class="node">
<title>codeblock_9</title>
<ellipse fill="none" stroke="#000000" cx="2280" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2280" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 257&#45;273</text>
</g>
<!-- section_1&#45;&gt;codeblock_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;codeblock_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1715.7803,-2553.8025C1827.3327,-2540.9517 2065.0527,-2513.5664 2193.443,-2498.7758"/>
<polygon fill="#000000" stroke="#000000" points="2194.095,-2502.2239 2203.6287,-2497.6024 2193.2938,-2495.2699 2194.095,-2502.2239"/>
</g>
<!-- block_10 -->
<g id="node11" class="node">
<title>block_10</title>
<ellipse fill="none" stroke="#000000" cx="2690" cy="-2488.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2690" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 275&#45;277</text>
</g>
<!-- section_1&#45;&gt;block_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;block_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1718.9628,-2556.3548C1901.14,-2543.6817 2422.0697,-2507.4431 2616.0401,-2493.9495"/>
<polygon fill="#000000" stroke="#000000" points="2616.4012,-2497.4329 2626.1342,-2493.2473 2615.9153,-2490.4498 2616.4012,-2497.4329"/>
</g>
<!-- codeblock_11 -->
<g id="node12" class="node">
<title>codeblock_11</title>
<ellipse fill="none" stroke="#000000" cx="3122" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3122" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 278&#45;302</text>
</g>
<!-- section_1&#45;&gt;codeblock_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;codeblock_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1719.7493,-2557.6945C1890.6086,-2549.4795 2367.7972,-2526.4796 2765,-2506.8044 2853.7624,-2502.4076 2954.9334,-2497.2972 3026.8537,-2493.6475"/>
<polygon fill="#000000" stroke="#000000" points="3027.438,-2497.1225 3037.2477,-2493.1199 3027.0831,-2490.1315 3027.438,-2497.1225"/>
</g>
<!-- block_12 -->
<g id="node13" class="node">
<title>block_12</title>
<ellipse fill="none" stroke="#000000" cx="3570" cy="-2488.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="3570" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 304&#45;308</text>
</g>
<!-- section_1&#45;&gt;block_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;block_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1720.531,-2558.929C1935.3084,-2552.6993 2637.4881,-2531.6734 3218,-2506.8044 3313.7071,-2502.7044 3423.9949,-2496.8875 3495.2394,-2492.9869"/>
<polygon fill="#000000" stroke="#000000" points="3495.6681,-2496.4687 3505.4612,-2492.4257 3495.2843,-2489.4793 3495.6681,-2496.4687"/>
</g>
<!-- codeblock_13 -->
<g id="node14" class="node">
<title>codeblock_13</title>
<ellipse fill="none" stroke="#000000" cx="3985" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3985" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 309&#45;336</text>
</g>
<!-- section_1&#45;&gt;codeblock_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;codeblock_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1720.7262,-2559.6359C1971.099,-2555.0541 2889.1443,-2537.0627 3645,-2506.8044 3728.1452,-2503.476 3822.6591,-2498.3652 3890.8966,-2494.4387"/>
<polygon fill="#000000" stroke="#000000" points="3891.4112,-2497.9149 3901.1926,-2493.8438 3891.0074,-2490.9266 3891.4112,-2497.9149"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="54,-1235.4022 0,-1235.4022 0,-1199.4022 54,-1199.4022 54,-1235.4022"/>
</g>
<!-- header_2&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>header_2&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M171.9403,-2486.628C139.9293,-2482.4523 87.8557,-2470.2772 63,-2434.8044 -7.2349,-2334.569 20.1276,-1419.8155 25.9991,-1245.8875"/>
<polygon fill="#000000" stroke="#000000" points="29.5024,-1245.8484 26.3461,-1235.7346 22.5065,-1245.6092 29.5024,-1245.8484"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="126,-1235.4022 72,-1235.4022 72,-1199.4022 126,-1199.4022 126,-1235.4022"/>
</g>
<!-- block_3&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>block_3&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M290.2031,-2480.2603C235.6698,-2468.4385 144.7012,-2447.1568 135,-2434.8044 59.4031,-2338.5486 91.1028,-1420.5761 97.8522,-1245.9965"/>
<polygon fill="#000000" stroke="#000000" points="101.3572,-1245.9345 98.2507,-1235.8054 94.3625,-1245.661 101.3572,-1245.9345"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="531.5,-1415.503 144.5,-1415.503 144.5,-1019.3014 531.5,-1019.3014 531.5,-1415.503"/>
<text text-anchor="middle" x="338" y="-1400.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="338" y="-1385.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="338" y="-1369.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="338" y="-1338.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="338" y="-1306.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="338" y="-1291.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="338" y="-1276.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="338" y="-1260.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="338" y="-1245.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="338" y="-1229.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="338" y="-1214.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="338" y="-1199.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="338" y="-1183.7021" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="338" y="-1168.3021" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="338" y="-1088.9021" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="338" y="-1073.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="338" y="-1058.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="338" y="-1042.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="338" y="-1027.302" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>codeblock_4&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M486.8072,-2470.3414C473.3687,-2357.1906 401.4439,-1751.5922 362.7246,-1425.5807"/>
<polygon fill="#000000" stroke="#000000" points="366.1871,-1425.0564 361.532,-1415.539 359.2359,-1425.882 366.1871,-1425.0564"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="1076.5,-2434.7067 549.5,-2434.7067 549.5,-.0978 1076.5,-.0978 1076.5,-2434.7067"/>
<text text-anchor="middle" x="813" y="-2419.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="813" y="-2404.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="813" y="-2388.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="813" y="-2373.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-2342.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="813" y="-2326.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="813" y="-2311.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="813" y="-2295.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="813" y="-2280.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="813" y="-2265.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="813" y="-2233.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="813" y="-2218.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="813" y="-2202.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="813" y="-2187.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="813" y="-2172.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="813" y="-2156.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="813" y="-2141.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="813" y="-2125.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="813" y="-2110.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-2095.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="813" y="-2079.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="813" y="-2064.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="813" y="-2048.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="813" y="-2033.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="813" y="-2018.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-2002.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="813" y="-1987.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="813" y="-1971.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="813" y="-1956.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="813" y="-1941.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1925.6035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-1878.2035" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="813" y="-1862.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="813" y="-1847.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="813" y="-1832.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="813" y="-1816.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="813" y="-1801.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="813" y="-1785.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1770.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="813" y="-1755.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="813" y="-1739.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1724.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="813" y="-1708.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-1661.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="813" y="-1646.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="813" y="-1630.603" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-1599.203" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="813" y="-1583.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="813" y="-1568.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="813" y="-1553.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="813" y="-1537.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="813" y="-1522.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="813" y="-1506.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="813" y="-1491.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1476.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="813" y="-1460.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="813" y="-1445.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1429.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="813" y="-1414.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-1383.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="813" y="-1367.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="813" y="-1352.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="813" y="-1336.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-1305.4025" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="813" y="-1274.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="813" y="-1258.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="813" y="-1243.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="813" y="-1227.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="813" y="-1212.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="813" y="-1197.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="813" y="-1181.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1166.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="813" y="-1150.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="813" y="-1135.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1120.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="813" y="-1104.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="813" y="-1089.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="813" y="-1073.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1058.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="813" y="-1043.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="813" y="-1027.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-1012.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-996.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="813" y="-981.4018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-950.0018" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="813" y="-934.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="813" y="-919.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="813" y="-903.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="813" y="-888.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="813" y="-873.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="813" y="-857.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-842.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-826.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="813" y="-811.4015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-780.0015" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="813" y="-764.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="813" y="-749.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="813" y="-733.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="813" y="-718.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="813" y="-703.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="813" y="-687.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="813" y="-672.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="813" y="-656.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-625.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="813" y="-610.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="813" y="-594.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="813" y="-579.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="813" y="-563.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="813" y="-548.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="813" y="-533.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="813" y="-517.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-502.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-486.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="813" y="-471.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="813" y="-456.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="813" y="-440.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="813" y="-425.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-409.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-394.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-379.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="813" y="-363.6007" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="813" y="-332.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="813" y="-316.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="813" y="-301.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="813" y="-286.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="813" y="-270.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="813" y="-255.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="813" y="-239.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-224.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-209.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="813" y="-193.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="813" y="-162.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="813" y="-146.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="813" y="-131.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="813" y="-116.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="813" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="813" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="813" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="813" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="813" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="813" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="813" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_5&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>codeblock_5&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M908.5914,-2470.3414C908.075,-2463.5725 907.4241,-2455.0414 906.6514,-2444.9133"/>
<polygon fill="#000000" stroke="#000000" points="910.1243,-2444.4236 905.8736,-2434.7189 903.1446,-2444.9562 910.1243,-2444.4236"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="1251,-1235.4022 1095,-1235.4022 1095,-1199.4022 1251,-1199.4022 1251,-1235.4022"/>
<text text-anchor="middle" x="1173" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- block_6&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>block_6&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1248.8818,-2470.3414C1240.3177,-2328.9338 1185.1739,-1418.4138 1174.712,-1245.671"/>
<polygon fill="#000000" stroke="#000000" points="1178.1997,-1245.3599 1174.1015,-1235.5898 1171.2125,-1245.7831 1178.1997,-1245.3599"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="1726.5,-1661.6039 1269.5,-1661.6039 1269.5,-773.2005 1726.5,-773.2005 1726.5,-1661.6039"/>
<text text-anchor="middle" x="1498" y="-1646.303" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1498" y="-1630.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1498" y="-1615.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1498" y="-1600.1029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1498" y="-1584.7029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1569.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1498" y="-1553.9029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1498" y="-1522.5028" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1498" y="-1507.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1498" y="-1491.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1498" y="-1476.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1498" y="-1460.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1498" y="-1445.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1498" y="-1430.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1498" y="-1414.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1399.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1498" y="-1383.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1498" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1498" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1498" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1498" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1498" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1498" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1498" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1498" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1498" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1498" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1498" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1498" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1498" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1498" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1498" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1498" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1498" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1498" y="-1029.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1498" y="-1013.7018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1498" y="-982.3018" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1498" y="-966.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1498" y="-951.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1498" y="-936.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1498" y="-920.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1498" y="-905.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1498" y="-889.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-874.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1498" y="-859.1015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1498" y="-843.7015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1498" y="-828.3015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1498" y="-812.9015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1498" y="-781.5014" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_7&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>codeblock_7&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1568.9544,-2470.3414C1563.9505,-2381.98 1541.9399,-1993.3089 1523.7436,-1671.9918"/>
<polygon fill="#000000" stroke="#000000" points="1527.2121,-1671.3348 1523.1522,-1661.5487 1520.2233,-1671.7307 1527.2121,-1671.3348"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="2173.5,-1236.7028 1744.5,-1236.7028 1744.5,-1198.1016 2173.5,-1198.1016 2173.5,-1236.7028"/>
<text text-anchor="middle" x="1959" y="-1221.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1959" y="-1206.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- block_8&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>block_8&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1887.0601,-2470.3414C1895.1576,-2329.312 1947.1793,-1423.2779 1957.2964,-1247.0726"/>
<polygon fill="#000000" stroke="#000000" points="1960.7969,-1247.1626 1957.876,-1236.9784 1953.8084,-1246.7613 1960.7969,-1247.1626"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="2670,-1337.7027 2192,-1337.7027 2192,-1097.1018 2670,-1097.1018 2670,-1337.7027"/>
<text text-anchor="middle" x="2431" y="-1322.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="2431" y="-1307.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="2431" y="-1291.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="2431" y="-1276.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2431" y="-1261.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="2431" y="-1245.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2431" y="-1214.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="2431" y="-1198.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2431" y="-1167.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="2431" y="-1152.0021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="2431" y="-1136.6021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="2431" y="-1105.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_9&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>codeblock_9&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2282.1928,-2470.3414C2296.7853,-2347.4744 2380.3397,-1643.9561 2415.4572,-1348.2707"/>
<polygon fill="#000000" stroke="#000000" points="2418.9819,-1348.269 2416.6858,-1337.926 2412.0308,-1347.4434 2418.9819,-1348.269"/>
</g>
<!-- leaf_22 -->
<g id="node23" class="node">
<title>leaf_22</title>
<polygon fill="none" stroke="#c0c0c0" points="3026,-1236.7028 2688,-1236.7028 2688,-1198.1016 3026,-1198.1016 3026,-1236.7028"/>
<text text-anchor="middle" x="2857" y="-1221.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="2857" y="-1206.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- block_10&#45;&gt;leaf_22 -->
<g id="edge22" class="edge">
<title>block_10&#45;&gt;leaf_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2692.4251,-2470.3414C2710.9495,-2329.312 2829.958,-1423.2779 2853.1028,-1247.0726"/>
<polygon fill="#000000" stroke="#000000" points="2856.5964,-1247.3491 2854.4287,-1236.9784 2849.656,-1246.4374 2856.5964,-1247.3491"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="3578,-1398.603 3044,-1398.603 3044,-1036.2014 3578,-1036.2014 3578,-1398.603"/>
<text text-anchor="middle" x="3311" y="-1383.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="3311" y="-1367.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="3311" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="3311" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="3311" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="3311" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="3311" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="3311" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="3311" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="3311" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="3311" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="3311" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="3311" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="3311" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="3311" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="3311" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="3311" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="3311" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="3311" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="3311" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="3311" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="3311" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="3311" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_11&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_11&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3124.7446,-2470.3414C3141.8627,-2355.1883 3234.7992,-1730.0045 3282.5864,-1408.5402"/>
<polygon fill="#000000" stroke="#000000" points="3286.0485,-1409.0536 3284.057,-1398.6476 3279.1246,-1408.0243 3286.0485,-1409.0536"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="3955.5,-1252.6026 3596.5,-1252.6026 3596.5,-1182.2018 3955.5,-1182.2018 3955.5,-1252.6026"/>
<text text-anchor="middle" x="3776" y="-1237.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="3776" y="-1221.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="3776" y="-1206.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- block_12&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>block_12&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3576.5197,-2470.501C3580.0204,-2460.1336 3584.1827,-2446.8637 3587,-2434.8044 3692.4627,-1983.3799 3754.8232,-1423.7043 3771.4695,-1262.663"/>
<polygon fill="#000000" stroke="#000000" points="3774.9591,-1262.9428 3772.4998,-1252.6373 3767.9957,-1262.2271 3774.9591,-1262.9428"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="4340,-1422.0032 3974,-1422.0032 3974,-1012.8013 4340,-1012.8013 4340,-1422.0032"/>
<text text-anchor="middle" x="4157" y="-1407.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="4157" y="-1391.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="4157" y="-1376.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="4157" y="-1344.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="4157" y="-1329.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="4157" y="-1314.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="4157" y="-1282.6024" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="4157" y="-1267.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="4157" y="-1251.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="4157" y="-1236.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="4157" y="-1221.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="4157" y="-1205.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="4157" y="-1190.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="4157" y="-1174.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="4157" y="-1159.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="4157" y="-1144.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="4157" y="-1128.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="4157" y="-1113.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="4157" y="-1097.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="4157" y="-1082.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="4157" y="-1067.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="4157" y="-1051.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="4157" y="-1036.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="4157" y="-1020.8019" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_13&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>codeblock_13&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3987.4977,-2470.3414C4002.703,-2357.9462 4083.6416,-1759.6584 4127.9483,-1432.149"/>
<polygon fill="#000000" stroke="#000000" points="4131.4411,-1432.4369 4129.3134,-1422.0579 4124.5043,-1431.4984 4131.4411,-1432.4369"/>
</g>
</g>
</svg>