<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="3242pt" height="2781pt"
 viewBox="0.00 0.00 3241.54 2781.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2777.0045)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2777.0045 3237.5351,-2777.0045 3237.5351,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1561.5351" cy="-2755.0045" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="1561.5351" y="-2750.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 336</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1561.5351" cy="-2683.0045" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1561.5351" y="-2678.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;336</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1561.5351,-2736.8359C1561.5351,-2729.1355 1561.5351,-2719.9789 1561.5351,-2711.4212"/>
<polygon fill="#000000" stroke="#000000" points="1565.0352,-2711.4178 1561.5351,-2701.4178 1558.0352,-2711.4178 1565.0352,-2711.4178"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="848.5351" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="848.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1496.2032,-2680.972C1349.6222,-2675.898 998.4752,-2660.7374 884.5351,-2629.0045 882.4021,-2628.4105 880.2455,-2627.6877 878.1039,-2626.8771"/>
<polygon fill="#000000" stroke="#000000" points="879.4965,-2623.6662 868.9302,-2622.8888 876.7055,-2630.0857 879.4965,-2623.6662"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="925.5351" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="925.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1496.8037,-2679.7693C1364.106,-2672.7057 1065.4102,-2654.4727 966.5351,-2629.0045 964.0979,-2628.3767 961.6214,-2627.6199 959.1545,-2626.7766"/>
<polygon fill="#000000" stroke="#000000" points="960.3814,-2623.4986 949.7912,-2623.1862 957.8751,-2630.0346 960.3814,-2623.4986"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="1048.5351" cy="-2611.0045" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="1048.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;28</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1499.5349,-2677.0363C1415.5623,-2668.5432 1261.152,-2651.4746 1130.5351,-2629.0045 1124.4079,-2627.9505 1118.046,-2626.7479 1111.6976,-2625.4756"/>
<polygon fill="#000000" stroke="#000000" points="1112.269,-2622.0199 1101.7685,-2623.4302 1110.8566,-2628.876 1112.269,-2622.0199"/>
</g>
<!-- codeblock_5 -->
<g id="node6" class="node">
<title>codeblock_5</title>
<ellipse fill="none" stroke="#000000" cx="1221.5351" cy="-2611.0045" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="1221.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 32&#45;190</text>
</g>
<!-- section_1&#45;&gt;codeblock_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;codeblock_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1509.5263,-2671.9909C1451.0793,-2659.6139 1355.9153,-2639.4615 1291.107,-2625.7374"/>
<polygon fill="#000000" stroke="#000000" points="1291.4847,-2622.2398 1280.9766,-2623.5921 1290.0345,-2629.088 1291.4847,-2622.2398"/>
</g>
<!-- prose_6 -->
<g id="node7" class="node">
<title>prose_6</title>
<ellipse fill="none" stroke="#000000" cx="1354.5351" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1354.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;prose_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1517.0441,-2669.6178C1483.623,-2659.2792 1436.8647,-2644.2118 1396.5351,-2629.0045 1394.2804,-2628.1543 1391.9694,-2627.2525 1389.6473,-2626.3232"/>
<polygon fill="#000000" stroke="#000000" points="1390.7334,-2622.9853 1380.1542,-2622.4107 1388.066,-2629.4571 1390.7334,-2622.9853"/>
</g>
<!-- codeblock_7 -->
<g id="node8" class="node">
<title>codeblock_7</title>
<ellipse fill="none" stroke="#000000" cx="1492.5351" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1492.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 194&#45;252</text>
</g>
<!-- section_1&#45;&gt;codeblock_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;codeblock_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1544.8321,-2665.5753C1536.3979,-2656.7744 1526.0094,-2645.9342 1516.7198,-2636.2407"/>
<polygon fill="#000000" stroke="#000000" points="1519.0097,-2633.5716 1509.5636,-2628.7734 1513.9557,-2638.415 1519.0097,-2633.5716"/>
</g>
<!-- prose_8 -->
<g id="node9" class="node">
<title>prose_8</title>
<ellipse fill="none" stroke="#000000" cx="1630.5351" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1630.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;prose_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1578.2381,-2665.5753C1587.1373,-2656.2892 1598.212,-2644.733 1607.876,-2634.6488"/>
<polygon fill="#000000" stroke="#000000" points="1610.5397,-2636.9278 1614.9318,-2627.2862 1605.4858,-2632.0844 1610.5397,-2636.9278"/>
</g>
<!-- codeblock_9 -->
<g id="node10" class="node">
<title>codeblock_9</title>
<ellipse fill="none" stroke="#000000" cx="1841.5351" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1841.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 257&#45;273</text>
</g>
<!-- section_1&#45;&gt;codeblock_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;codeblock_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1609.6688,-2670.6273C1655.8438,-2658.7537 1725.8897,-2640.7419 1776.9085,-2627.6228"/>
<polygon fill="#000000" stroke="#000000" points="1778.0326,-2630.9477 1786.8459,-2625.0675 1776.2893,-2624.1682 1778.0326,-2630.9477"/>
</g>
<!-- prose_10 -->
<g id="node11" class="node">
<title>prose_10</title>
<ellipse fill="none" stroke="#000000" cx="2088.5351" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2088.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;prose_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1620.4547,-2674.9548C1728.0423,-2660.2559 1953.7856,-2629.4143 2046.9556,-2616.6852"/>
<polygon fill="#000000" stroke="#000000" points="2047.6885,-2620.1177 2057.1227,-2615.2962 2046.7409,-2613.1821 2047.6885,-2620.1177"/>
</g>
<!-- codeblock_11 -->
<g id="node12" class="node">
<title>codeblock_11</title>
<ellipse fill="none" stroke="#000000" cx="2368.5351" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2368.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 278&#45;302</text>
</g>
<!-- section_1&#45;&gt;codeblock_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;codeblock_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1624.1875,-2677.4147C1766.1978,-2664.7447 2113.0292,-2633.8006 2278.2121,-2619.0631"/>
<polygon fill="#000000" stroke="#000000" points="2278.6957,-2622.5339 2288.3451,-2618.159 2278.0736,-2615.5616 2278.6957,-2622.5339"/>
</g>
<!-- prose_12 -->
<g id="node13" class="node">
<title>prose_12</title>
<ellipse fill="none" stroke="#000000" cx="2664.5351" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2664.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;prose_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1626.1821,-2679.8064C1774.4766,-2672.324 2150.5272,-2652.5185 2464.5351,-2629.0045 2519.2231,-2624.9093 2582.2188,-2619.0504 2622.6629,-2615.1416"/>
<polygon fill="#000000" stroke="#000000" points="2623.077,-2618.618 2632.6918,-2614.1676 2622.4003,-2611.6508 2623.077,-2618.618"/>
</g>
<!-- codeblock_13 -->
<g id="node14" class="node">
<title>codeblock_13</title>
<ellipse fill="none" stroke="#000000" cx="2926.5351" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2926.5351" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 309&#45;336</text>
</g>
<!-- section_1&#45;&gt;codeblock_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;codeblock_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1626.7159,-2680.7069C1801.5206,-2674.3763 2295.2968,-2655.3856 2705.5351,-2629.0045 2748.5638,-2626.2375 2796.2464,-2622.446 2836.2734,-2619.0562"/>
<polygon fill="#000000" stroke="#000000" points="2836.6105,-2622.5402 2846.2773,-2618.2039 2836.0163,-2615.5655 2836.6105,-2622.5402"/>
</g>
<!-- raw_14 -->
<g id="node15" class="node">
<title>raw_14</title>
<ellipse fill="none" stroke="#000000" cx="59.5351" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="59.5351" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_14 -->
<g id="edge14" class="edge">
<title>prose_3&#45;&gt;raw_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M901.7627,-2598.8165C896.2388,-2596.4822 890.2881,-2594.3494 884.5351,-2593.0045 799.0811,-2573.0283 157.0898,-2619.5542 95.5351,-2557.0045 -75.5319,-2383.1725 32.4705,-1534.0879 55.5032,-1367.8617"/>
<polygon fill="#000000" stroke="#000000" points="58.9755,-1368.3029 56.8936,-1357.9146 52.0429,-1367.3338 58.9755,-1368.3029"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="492.0351,-1537.7031 105.0351,-1537.7031 105.0351,-1141.5015 492.0351,-1141.5015 492.0351,-1537.7031"/>
<text text-anchor="middle" x="298.5351" y="-1522.7026" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="298.5351" y="-1507.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1491.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1460.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1429.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1413.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1398.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="298.5351" y="-1382.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="298.5351" y="-1367.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="298.5351" y="-1352.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="298.5351" y="-1336.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="298.5351" y="-1321.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="298.5351" y="-1305.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="298.5351" y="-1290.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="298.5351" y="-1211.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="298.5351" y="-1195.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="298.5351" y="-1180.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="298.5351" y="-1164.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="298.5351" y="-1149.502" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>codeblock_4&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M996.242,-2598.3904C986.4162,-2596.3436 976.1957,-2594.4309 966.5351,-2593.0045 915.16,-2585.4189 538.8245,-2592.0881 500.5351,-2557.0045 222.6975,-2302.4293 231.2894,-1822.9876 263.8748,-1547.8503"/>
<polygon fill="#000000" stroke="#000000" points="267.3709,-1548.0914 265.0933,-1537.7443 260.4213,-1547.2534 267.3709,-1548.0914"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="1037.0351,-2556.9067 510.0351,-2556.9067 510.0351,-122.2979 1037.0351,-122.2979 1037.0351,-2556.9067"/>
<text text-anchor="middle" x="773.5351" y="-2541.8045" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="773.5351" y="-2526.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="773.5351" y="-2511.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="773.5351" y="-2495.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-2464.2044" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="773.5351" y="-2448.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="773.5351" y="-2433.4043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="773.5351" y="-2418.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="773.5351" y="-2402.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="773.5351" y="-2387.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="773.5351" y="-2355.8042" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="773.5351" y="-2340.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="773.5351" y="-2325.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="773.5351" y="-2309.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="773.5351" y="-2294.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="773.5351" y="-2278.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="773.5351" y="-2263.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="773.5351" y="-2248.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="773.5351" y="-2232.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-2217.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="773.5351" y="-2201.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="773.5351" y="-2186.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="773.5351" y="-2171.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="773.5351" y="-2155.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="773.5351" y="-2140.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-2124.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="773.5351" y="-2109.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="773.5351" y="-2094.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="773.5351" y="-2078.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="773.5351" y="-2063.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-2047.8036" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-2000.4036" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="773.5351" y="-1985.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="773.5351" y="-1969.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="773.5351" y="-1954.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="773.5351" y="-1938.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="773.5351" y="-1923.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="773.5351" y="-1908.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1892.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="773.5351" y="-1877.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="773.5351" y="-1861.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1846.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="773.5351" y="-1831.0032" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-1783.6032" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="773.5351" y="-1768.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="773.5351" y="-1752.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-1721.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="773.5351" y="-1706.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="773.5351" y="-1690.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="773.5351" y="-1675.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="773.5351" y="-1659.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="773.5351" y="-1644.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="773.5351" y="-1629.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="773.5351" y="-1613.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1598.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="773.5351" y="-1582.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="773.5351" y="-1567.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1552.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="773.5351" y="-1536.6027" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-1505.2027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="773.5351" y="-1489.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="773.5351" y="-1474.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="773.5351" y="-1459.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-1427.6026" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="773.5351" y="-1396.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="773.5351" y="-1380.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="773.5351" y="-1365.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="773.5351" y="-1350.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="773.5351" y="-1334.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="773.5351" y="-1319.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="773.5351" y="-1303.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1288.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="773.5351" y="-1273.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="773.5351" y="-1257.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1242.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="773.5351" y="-1226.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="773.5351" y="-1211.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="773.5351" y="-1196.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1180.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="773.5351" y="-1165.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="773.5351" y="-1149.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1134.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-1119.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="773.5351" y="-1103.6019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-1072.2019" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="773.5351" y="-1056.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="773.5351" y="-1041.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="773.5351" y="-1026.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="773.5351" y="-1010.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="773.5351" y="-995.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="773.5351" y="-979.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-964.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-949.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="773.5351" y="-933.6016" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-902.2016" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-886.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="773.5351" y="-871.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="773.5351" y="-856.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-840.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="773.5351" y="-825.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-809.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="773.5351" y="-794.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="773.5351" y="-779.0013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-747.6013" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="773.5351" y="-732.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="773.5351" y="-716.8012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="773.5351" y="-701.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="773.5351" y="-686.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="773.5351" y="-670.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="773.5351" y="-655.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="773.5351" y="-639.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-624.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-609.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="773.5351" y="-593.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="773.5351" y="-578.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="773.5351" y="-562.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="773.5351" y="-547.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-532.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-516.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-501.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="773.5351" y="-485.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="773.5351" y="-454.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-439.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="773.5351" y="-423.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="773.5351" y="-408.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="773.5351" y="-392.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="773.5351" y="-377.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="773.5351" y="-362.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-346.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-331.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="773.5351" y="-315.8005" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="773.5351" y="-284.4004" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-269.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="773.5351" y="-253.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="773.5351" y="-238.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-222.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="773.5351" y="-207.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="773.5351" y="-192.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="773.5351" y="-176.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="773.5351" y="-161.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="773.5351" y="-145.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="773.5351" y="-130.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_5&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>codeblock_5&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1160.1888,-2598.8998C1116.2461,-2589.0089 1062.1812,-2573.9332 1046.5351,-2557.0045 1045.7541,-2556.1595 1044.9751,-2555.3127 1044.1982,-2554.4642"/>
<polygon fill="#000000" stroke="#000000" points="1046.5608,-2551.8581 1037.2616,-2546.7813 1041.3652,-2556.5492 1046.5608,-2551.8581"/>
</g>
<!-- raw_18 -->
<g id="node19" class="node">
<title>raw_18</title>
<ellipse fill="none" stroke="#000000" cx="1082.5351" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="1082.5351" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_6&#45;&gt;raw_18 -->
<g id="edge18" class="edge">
<title>prose_6&#45;&gt;raw_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1329.5534,-2599.2282C1324.033,-2596.9289 1318.1534,-2594.7067 1312.5351,-2593.0045 1228.6084,-2567.5766 1175.5933,-2623.5976 1118.5351,-2557.0045 1038.8159,-2463.9636 1073.9401,-1541.4622 1081.3001,-1367.7345"/>
<polygon fill="#000000" stroke="#000000" points="1084.8027,-1367.7464 1081.7339,-1357.6058 1077.8091,-1367.4468 1084.8027,-1367.7464"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="1585.0351,-1783.804 1128.0351,-1783.804 1128.0351,-895.4006 1585.0351,-895.4006 1585.0351,-1783.804"/>
<text text-anchor="middle" x="1356.5351" y="-1768.5031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1356.5351" y="-1753.1031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1356.5351" y="-1737.7031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1356.5351" y="-1722.303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1356.5351" y="-1706.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1691.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1356.5351" y="-1676.1029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1356.5351" y="-1644.7029" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1356.5351" y="-1629.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1356.5351" y="-1613.9029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1356.5351" y="-1598.5028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1356.5351" y="-1583.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1356.5351" y="-1567.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1356.5351" y="-1552.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1356.5351" y="-1536.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1521.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1356.5351" y="-1506.1026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1356.5351" y="-1474.7026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1356.5351" y="-1459.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1356.5351" y="-1443.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1356.5351" y="-1428.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1356.5351" y="-1413.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1356.5351" y="-1397.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1356.5351" y="-1382.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1356.5351" y="-1366.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1356.5351" y="-1351.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1356.5351" y="-1336.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1356.5351" y="-1320.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1356.5351" y="-1305.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1289.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1356.5351" y="-1274.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1259.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1243.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1356.5351" y="-1228.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1356.5351" y="-1212.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-1197.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1356.5351" y="-1182.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1356.5351" y="-1166.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1356.5351" y="-1151.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1356.5351" y="-1135.9019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1356.5351" y="-1104.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1356.5351" y="-1089.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1356.5351" y="-1073.7018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1356.5351" y="-1058.3018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1356.5351" y="-1042.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1356.5351" y="-1027.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1356.5351" y="-1012.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-996.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1356.5351" y="-981.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1356.5351" y="-965.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1356.5351" y="-950.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1356.5351" y="-935.1015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1356.5351" y="-903.7015" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_7&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>codeblock_7&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1490.5601,-2592.5415C1481.1036,-2504.1365 1439.4916,-2115.1253 1405.111,-1793.7162"/>
<polygon fill="#000000" stroke="#000000" points="1408.5886,-1793.3198 1404.0448,-1783.7488 1401.6284,-1794.0644 1408.5886,-1793.3198"/>
</g>
<!-- raw_21 -->
<g id="node22" class="node">
<title>raw_21</title>
<ellipse fill="none" stroke="#000000" cx="1630.5351" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="1630.5351" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_8&#45;&gt;raw_21 -->
<g id="edge21" class="edge">
<title>prose_8&#45;&gt;raw_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1630.5351,-2592.5415C1630.5351,-2451.1339 1630.5351,-1540.6139 1630.5351,-1367.8711"/>
<polygon fill="#000000" stroke="#000000" points="1634.0352,-1367.7898 1630.5351,-1357.7899 1627.0352,-1367.7899 1634.0352,-1367.7898"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="2153.5351,-1459.9028 1675.5351,-1459.9028 1675.5351,-1219.3019 2153.5351,-1219.3019 2153.5351,-1459.9028"/>
<text text-anchor="middle" x="1914.5351" y="-1444.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="1914.5351" y="-1429.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="1914.5351" y="-1414.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="1914.5351" y="-1398.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1914.5351" y="-1383.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="1914.5351" y="-1367.8023" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1914.5351" y="-1336.4023" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="1914.5351" y="-1321.0023" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1914.5351" y="-1289.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="1914.5351" y="-1274.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="1914.5351" y="-1258.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="1914.5351" y="-1227.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_9&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_9&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1842.5952,-2592.5415C1849.6498,-2469.6745 1890.0437,-1766.1562 1907.021,-1470.4708"/>
<polygon fill="#000000" stroke="#000000" points="1910.5359,-1470.3103 1907.615,-1460.1261 1903.5474,-1469.909 1910.5359,-1470.3103"/>
</g>
<!-- raw_24 -->
<g id="node25" class="node">
<title>raw_24</title>
<ellipse fill="none" stroke="#000000" cx="2198.5351" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="2198.5351" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_10&#45;&gt;raw_24 -->
<g id="edge24" class="edge">
<title>prose_10&#45;&gt;raw_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2110.9408,-2597.7464C2130.538,-2585.6308 2156.7519,-2567.9792 2162.5351,-2557.0045 2275.8789,-2341.9128 2214.6384,-1530.8721 2201.0105,-1368.1389"/>
<polygon fill="#000000" stroke="#000000" points="2204.4802,-1367.6326 2200.1492,-1357.9634 2197.5052,-1368.223 2204.4802,-1367.6326"/>
</g>
<!-- leaf_26 -->
<g id="node27" class="node">
<title>leaf_26</title>
<polygon fill="none" stroke="#c0c0c0" points="2777.5351,-1520.8031 2243.5351,-1520.8031 2243.5351,-1158.4015 2777.5351,-1158.4015 2777.5351,-1520.8031"/>
<text text-anchor="middle" x="2510.5351" y="-1505.5027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="2510.5351" y="-1490.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="2510.5351" y="-1474.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="2510.5351" y="-1459.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2510.5351" y="-1443.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="2510.5351" y="-1428.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="2510.5351" y="-1413.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="2510.5351" y="-1397.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="2510.5351" y="-1382.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="2510.5351" y="-1366.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2510.5351" y="-1351.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="2510.5351" y="-1336.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2510.5351" y="-1320.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="2510.5351" y="-1305.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="2510.5351" y="-1289.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="2510.5351" y="-1274.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="2510.5351" y="-1259.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="2510.5351" y="-1243.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="2510.5351" y="-1228.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="2510.5351" y="-1212.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2510.5351" y="-1197.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="2510.5351" y="-1182.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2510.5351" y="-1166.702" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_11&#45;&gt;leaf_26 -->
<g id="edge26" class="edge">
<title>codeblock_11&#45;&gt;leaf_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2370.5972,-2592.5415C2383.452,-2477.4452 2453.2148,-1852.8213 2489.1342,-1531.2163"/>
<polygon fill="#000000" stroke="#000000" points="2492.6605,-1531.1745 2490.2922,-1520.8477 2485.7038,-1530.3974 2492.6605,-1531.1745"/>
</g>
<!-- raw_27 -->
<g id="node28" class="node">
<title>raw_27</title>
<ellipse fill="none" stroke="#000000" cx="2822.5351" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="2822.5351" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_12&#45;&gt;raw_27 -->
<g id="edge27" class="edge">
<title>prose_12&#45;&gt;raw_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2696.0573,-2606.5639C2724.9581,-2600.6573 2766.2477,-2587.1849 2786.5351,-2557.0045 2854.8157,-2455.4278 2829.0339,-1541.7592 2823.4824,-1368.0508"/>
<polygon fill="#000000" stroke="#000000" points="2826.976,-1367.7924 2823.1543,-1357.9109 2819.9797,-1368.0189 2826.976,-1367.7924"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="3233.5351,-1544.2033 2867.5351,-1544.2033 2867.5351,-1135.0014 3233.5351,-1135.0014 3233.5351,-1544.2033"/>
<text text-anchor="middle" x="3050.5351" y="-1529.2027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="3050.5351" y="-1513.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="3050.5351" y="-1498.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3050.5351" y="-1467.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="3050.5351" y="-1451.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="3050.5351" y="-1436.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3050.5351" y="-1404.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="3050.5351" y="-1389.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="3050.5351" y="-1374.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="3050.5351" y="-1358.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="3050.5351" y="-1343.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="3050.5351" y="-1327.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="3050.5351" y="-1312.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="3050.5351" y="-1297.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="3050.5351" y="-1281.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="3050.5351" y="-1266.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="3050.5351" y="-1250.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="3050.5351" y="-1235.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="3050.5351" y="-1220.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="3050.5351" y="-1204.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="3050.5351" y="-1189.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="3050.5351" y="-1173.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="3050.5351" y="-1158.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="3050.5351" y="-1143.002" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_13&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>codeblock_13&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2928.3358,-2592.5415C2939.2977,-2480.1463 2997.6488,-1881.8585 3029.5908,-1554.3491"/>
<polygon fill="#000000" stroke="#000000" points="3033.0877,-1554.5505 3030.575,-1544.258 3026.1208,-1553.871 3033.0877,-1554.5505"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="86.5351,-61.1 32.5351,-61.1 32.5351,-25.1 86.5351,-25.1 86.5351,-61.1"/>
</g>
<!-- raw_14&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>raw_14&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M59.5351,-1321.2745C59.5351,-1178.6007 59.5351,-246.5238 59.5351,-71.4285"/>
<polygon fill="#000000" stroke="#000000" points="63.0352,-71.2227 59.5351,-61.2227 56.0352,-71.2228 63.0352,-71.2227"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="1160.5351,-63.0021 1004.5351,-63.0021 1004.5351,-23.198 1160.5351,-23.198 1160.5351,-63.0021"/>
<text text-anchor="middle" x="1082.5351" y="-31.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- raw_18&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>raw_18&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1082.5351,-1321.2745C1082.5351,-1179.0617 1082.5351,-252.5378 1082.5351,-73.1491"/>
<polygon fill="#000000" stroke="#000000" points="1086.0352,-73.1036 1082.5351,-63.1036 1079.0352,-73.1036 1086.0352,-73.1036"/>
</g>
<!-- leaf_22 -->
<g id="node23" class="node">
<title>leaf_22</title>
<polygon fill="none" stroke="#c0c0c0" points="1845.0351,-70.4005 1416.0351,-70.4005 1416.0351,-15.7996 1845.0351,-15.7996 1845.0351,-70.4005"/>
<text text-anchor="middle" x="1630.5351" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1630.5351" y="-23.9" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- raw_21&#45;&gt;leaf_22 -->
<g id="edge22" class="edge">
<title>raw_21&#45;&gt;leaf_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1630.5351,-1321.2745C1630.5351,-1180.9693 1630.5351,-277.2536 1630.5351,-80.7677"/>
<polygon fill="#000000" stroke="#000000" points="1634.0352,-80.6497 1630.5351,-70.6498 1627.0352,-80.6498 1634.0352,-80.6497"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="2367.5351,-70.4005 2029.5351,-70.4005 2029.5351,-15.7996 2367.5351,-15.7996 2367.5351,-70.4005"/>
<text text-anchor="middle" x="2198.5351" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="2198.5351" y="-23.9" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- raw_24&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>raw_24&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2198.5351,-1321.2745C2198.5351,-1180.9693 2198.5351,-277.2536 2198.5351,-80.7677"/>
<polygon fill="#000000" stroke="#000000" points="2202.0352,-80.6497 2198.5351,-70.6498 2195.0352,-80.6498 2202.0352,-80.6497"/>
</g>
<!-- leaf_28 -->
<g id="node29" class="node">
<title>leaf_28</title>
<polygon fill="none" stroke="#c0c0c0" points="3002.0351,-86.3004 2643.0351,-86.3004 2643.0351,.1003 3002.0351,.1003 3002.0351,-86.3004"/>
<text text-anchor="middle" x="2822.5351" y="-55.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="2822.5351" y="-39.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="2822.5351" y="-24.2" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- raw_27&#45;&gt;leaf_28 -->
<g id="edge28" class="edge">
<title>raw_27&#45;&gt;leaf_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2822.5351,-1321.2745C2822.5351,-1184.4076 2822.5351,-321.0876 2822.5351,-96.4653"/>
<polygon fill="#000000" stroke="#000000" points="2826.0352,-96.2572 2822.5351,-86.2572 2819.0352,-96.2573 2826.0352,-96.2572"/>
</g>
</g>
</svg>