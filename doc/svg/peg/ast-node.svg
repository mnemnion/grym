<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="3267pt" height="2765pt"
 viewBox="0.00 0.00 3266.50 2765.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2761.0045)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2761.0045 3262.5,-2761.0045 3262.5,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1335.5" cy="-2739.0045" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="1335.5" y="-2734.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 336</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1335.5" cy="-2667.0045" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1335.5" y="-2662.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;336</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1335.5,-2720.8359C1335.5,-2713.1355 1335.5,-2703.9789 1335.5,-2695.4212"/>
<polygon fill="#000000" stroke="#000000" points="1339.0001,-2695.4178 1335.5,-2685.4178 1332.0001,-2695.4178 1339.0001,-2695.4178"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="373.5" cy="-2595.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="373.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1269.7644,-2666.6027C1086.3965,-2664.9386 572.0866,-2656.4212 409.5,-2613.0045 407.5253,-2612.4772 405.5319,-2611.8354 403.5498,-2611.1121"/>
<polygon fill="#000000" stroke="#000000" points="404.4434,-2607.6876 393.8729,-2606.9702 401.6889,-2614.1229 404.4434,-2607.6876"/>
</g>
<!-- block_3 -->
<g id="node4" class="node">
<title>block_3</title>
<ellipse fill="none" stroke="#000000" cx="464.5" cy="-2595.0045" rx="45.9804" ry="18"/>
<text text-anchor="middle" x="464.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 1&#45;1</text>
</g>
<!-- section_1&#45;&gt;block_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;block_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1270.0977,-2664.7876C1102.8908,-2658.7815 662.8972,-2640.7586 519.5,-2613.0045 515.6161,-2612.2528 511.6258,-2611.3065 507.6537,-2610.2432"/>
<polygon fill="#000000" stroke="#000000" points="508.4683,-2606.8352 497.8887,-2607.4036 506.5136,-2613.5568 508.4683,-2606.8352"/>
</g>
<!-- block_4 -->
<g id="node5" class="node">
<title>block_4</title>
<ellipse fill="none" stroke="#000000" cx="579.5" cy="-2595.0045" rx="50.8172" ry="18"/>
<text text-anchor="middle" x="579.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 2&#45;31</text>
</g>
<!-- section_1&#45;&gt;block_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;block_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1272.2036,-2662.1224C1161.3255,-2653.4092 924.7935,-2634.1046 725.5,-2613.0045 696.449,-2609.9288 664.2103,-2606.0079 637.4326,-2602.6113"/>
<polygon fill="#000000" stroke="#000000" points="637.8179,-2599.1322 627.4552,-2601.338 636.9317,-2606.0758 637.8179,-2599.1322"/>
</g>
<!-- block_5 -->
<g id="node6" class="node">
<title>block_5</title>
<ellipse fill="none" stroke="#000000" cx="795.5" cy="-2595.0045" rx="60.9913" ry="18"/>
<text text-anchor="middle" x="795.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 32&#45;191</text>
</g>
<!-- section_1&#45;&gt;block_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;block_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1276.4244,-2659.1278C1174.6206,-2645.5539 966.8738,-2617.8544 860.8739,-2603.721"/>
<polygon fill="#000000" stroke="#000000" points="861.3154,-2600.249 850.9405,-2602.3966 860.3902,-2607.1876 861.3154,-2600.249"/>
</g>
<!-- block_6 -->
<g id="node7" class="node">
<title>block_6</title>
<ellipse fill="none" stroke="#000000" cx="1012.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1012.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 192&#45;193</text>
</g>
<!-- section_1&#45;&gt;block_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;block_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1284.3197,-2655.5959C1227.1124,-2642.8438 1134.5292,-2622.2061 1073.5808,-2608.6201"/>
<polygon fill="#000000" stroke="#000000" points="1074.2295,-2605.1788 1063.7075,-2606.4192 1072.7064,-2612.0111 1074.2295,-2605.1788"/>
</g>
<!-- block_7 -->
<g id="node8" class="node">
<title>block_7</title>
<ellipse fill="none" stroke="#000000" cx="1233.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1233.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 194&#45;253</text>
</g>
<!-- section_1&#45;&gt;block_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;block_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1311.5855,-2650.1237C1298.0001,-2640.534 1280.8024,-2628.3944 1266.0066,-2617.9503"/>
<polygon fill="#000000" stroke="#000000" points="1267.8062,-2614.9365 1257.6181,-2612.029 1263.7694,-2620.6553 1267.8062,-2614.9365"/>
</g>
<!-- block_8 -->
<g id="node9" class="node">
<title>block_8</title>
<ellipse fill="none" stroke="#000000" cx="1438.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1438.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 254&#45;256</text>
</g>
<!-- section_1&#45;&gt;block_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;block_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1359.6489,-2650.1237C1373.467,-2640.4645 1390.9858,-2628.2184 1405.9991,-2617.7236"/>
<polygon fill="#000000" stroke="#000000" points="1408.3116,-2620.3775 1414.5024,-2611.7796 1404.301,-2614.6403 1408.3116,-2620.3775"/>
</g>
<!-- block_9 -->
<g id="node10" class="node">
<title>block_9</title>
<ellipse fill="none" stroke="#000000" cx="1813.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1813.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 257&#45;274</text>
</g>
<!-- section_1&#45;&gt;block_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;block_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1393.158,-2658.3196C1481.8018,-2644.9674 1651.1844,-2619.4537 1745.6206,-2605.229"/>
<polygon fill="#000000" stroke="#000000" points="1746.2704,-2608.6707 1755.6375,-2603.7202 1745.2277,-2601.7488 1746.2704,-2608.6707"/>
</g>
<!-- block_10 -->
<g id="node11" class="node">
<title>block_10</title>
<ellipse fill="none" stroke="#000000" cx="2061.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2061.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 275&#45;277</text>
</g>
<!-- section_1&#45;&gt;block_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;block_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1397.7121,-2661.0591C1500.0831,-2651.2467 1710.4631,-2630.959 1888.5,-2613.0045 1921.7015,-2609.6563 1958.4755,-2605.8446 1989.551,-2602.5935"/>
<polygon fill="#000000" stroke="#000000" points="1990.2769,-2606.0367 1999.8578,-2601.5139 1989.5476,-2599.0748 1990.2769,-2606.0367"/>
</g>
<!-- block_11 -->
<g id="node12" class="node">
<title>block_11</title>
<ellipse fill="none" stroke="#000000" cx="2433.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2433.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 278&#45;303</text>
</g>
<!-- section_1&#45;&gt;block_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;block_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1399.6818,-2662.7959C1590.9401,-2650.2544 2156.3239,-2613.18 2359.6306,-2599.8484"/>
<polygon fill="#000000" stroke="#000000" points="2359.8645,-2603.3407 2369.6141,-2599.1938 2359.4064,-2596.3557 2359.8645,-2603.3407"/>
</g>
<!-- block_12 -->
<g id="node13" class="node">
<title>block_12</title>
<ellipse fill="none" stroke="#000000" cx="2686.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2686.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 304&#45;308</text>
</g>
<!-- section_1&#45;&gt;block_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;block_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1401.07,-2665.246C1579.23,-2660.1956 2087.1344,-2643.9851 2508.5,-2613.0045 2543.7191,-2610.4151 2582.7646,-2606.5753 2615.2909,-2603.1065"/>
<polygon fill="#000000" stroke="#000000" points="2616.0414,-2606.546 2625.6092,-2601.9954 2615.2919,-2599.5863 2616.0414,-2606.546"/>
</g>
<!-- block_13 -->
<g id="node14" class="node">
<title>block_13</title>
<ellipse fill="none" stroke="#000000" cx="3075.5" cy="-2595.0045" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="3075.5" y="-2590.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 309&#45;336</text>
</g>
<!-- section_1&#45;&gt;block_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;block_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1400.9016,-2664.98C1603.2206,-2658.6201 2236.8704,-2637.9727 2761.5,-2613.0045 2843.5189,-2609.1011 2937.5274,-2603.5725 3001.1385,-2599.6749"/>
<polygon fill="#000000" stroke="#000000" points="3001.7059,-2603.1468 3011.4723,-2599.0397 3001.2763,-2596.16 3001.7059,-2603.1468"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="237.5,-2523.9045 183.5,-2523.9045 183.5,-2487.9045 237.5,-2487.9045 237.5,-2523.9045"/>
</g>
<!-- block_3&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>block_3&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M429.7426,-2583.0544C423.0599,-2580.9203 416.0902,-2578.8059 409.5,-2577.0045 337.9352,-2557.4426 311.7832,-2576.2509 246.5,-2541.0045 241.6033,-2538.3608 236.913,-2534.8571 232.6298,-2531.0858"/>
<polygon fill="#000000" stroke="#000000" points="235.0372,-2528.5451 225.4034,-2524.1361 230.185,-2533.5905 235.0372,-2528.5451"/>
</g>
<!-- codeblock_15 -->
<g id="node16" class="node">
<title>codeblock_15</title>
<ellipse fill="none" stroke="#000000" cx="328.5" cy="-2505.9045" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="328.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;28</text>
</g>
<!-- block_4&#45;&gt;codeblock_15 -->
<g id="edge15" class="edge">
<title>block_4&#45;&gt;codeblock_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M540.9261,-2583.2499C498.6816,-2570.2882 433.716,-2550.0708 409.5,-2541.0045 397.3817,-2536.4675 384.4464,-2531.1053 372.551,-2525.9557"/>
<polygon fill="#000000" stroke="#000000" points="373.8337,-2522.6966 363.2695,-2521.8912 371.0257,-2529.1087 373.8337,-2522.6966"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="568,-2525.8066 419,-2525.8066 419,-2486.0024 568,-2486.0024 568,-2525.8066"/>
<text text-anchor="middle" x="493.5" y="-2494.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> not functional yet</text>
</g>
<!-- block_4&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>block_4&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M562.9183,-2577.8251C550.6984,-2565.1647 533.8309,-2547.6892 519.7828,-2533.1347"/>
<polygon fill="#000000" stroke="#000000" points="522.1963,-2530.5954 512.7332,-2525.8309 517.1597,-2535.4568 522.1963,-2530.5954"/>
</g>
<!-- codeblock_18 -->
<g id="node19" class="node">
<title>codeblock_18</title>
<ellipse fill="none" stroke="#000000" cx="668.5" cy="-2505.9045" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="668.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 32&#45;190</text>
</g>
<!-- block_5&#45;&gt;codeblock_18 -->
<g id="edge18" class="edge">
<title>block_5&#45;&gt;codeblock_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M771.6123,-2578.2455C751.8212,-2564.3606 723.4827,-2544.479 701.5208,-2529.071"/>
<polygon fill="#000000" stroke="#000000" points="703.3433,-2526.0742 693.1469,-2523.1961 699.323,-2531.8046 703.3433,-2526.0742"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="822.5,-2523.9045 768.5,-2523.9045 768.5,-2487.9045 822.5,-2487.9045 822.5,-2523.9045"/>
</g>
<!-- block_5&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>block_5&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M795.5,-2576.9738C795.5,-2564.6553 795.5,-2548.0837 795.5,-2534.0413"/>
<polygon fill="#000000" stroke="#000000" points="799.0001,-2533.9084 795.5,-2523.9084 792.0001,-2533.9084 799.0001,-2533.9084"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="996.5,-2523.9045 840.5,-2523.9045 840.5,-2487.9045 996.5,-2487.9045 996.5,-2523.9045"/>
<text text-anchor="middle" x="918.5" y="-2502.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- block_6&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>block_6&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M993.9286,-2577.4012C979.9505,-2564.1517 960.5986,-2545.8086 944.9963,-2531.0196"/>
<polygon fill="#000000" stroke="#000000" points="947.3437,-2528.4221 937.6782,-2524.0829 942.5281,-2533.5025 947.3437,-2528.4221"/>
</g>
<!-- codeblock_22 -->
<g id="node23" class="node">
<title>codeblock_22</title>
<ellipse fill="none" stroke="#000000" cx="1101.5" cy="-2505.9045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1101.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 194&#45;252</text>
</g>
<!-- block_7&#45;&gt;codeblock_22 -->
<g id="edge22" class="edge">
<title>block_7&#45;&gt;codeblock_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1208.6718,-2578.2455C1188.0106,-2564.2991 1158.3865,-2544.3029 1135.5182,-2528.8668"/>
<polygon fill="#000000" stroke="#000000" points="1137.3639,-2525.8899 1127.1172,-2523.1961 1133.4476,-2531.6919 1137.3639,-2525.8899"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="1260.5,-2523.9045 1206.5,-2523.9045 1206.5,-2487.9045 1260.5,-2487.9045 1260.5,-2523.9045"/>
</g>
<!-- block_7&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>block_7&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1233.5,-2576.9738C1233.5,-2564.6553 1233.5,-2548.0837 1233.5,-2534.0413"/>
<polygon fill="#000000" stroke="#000000" points="1237.0001,-2533.9084 1233.5,-2523.9084 1230.0001,-2533.9084 1237.0001,-2533.9084"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="1708,-2525.2051 1279,-2525.2051 1279,-2486.6039 1708,-2486.6039 1708,-2525.2051"/>
<text text-anchor="middle" x="1493.5" y="-2510.1045" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1493.5" y="-2494.7045" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- block_8&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>block_8&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1449.6301,-2576.9738C1457.2002,-2564.7102 1467.3724,-2548.2311 1476.0158,-2534.229"/>
<polygon fill="#000000" stroke="#000000" points="1479.1577,-2535.8023 1481.4321,-2525.4544 1473.2011,-2532.1253 1479.1577,-2535.8023"/>
</g>
<!-- codeblock_26 -->
<g id="node27" class="node">
<title>codeblock_26</title>
<ellipse fill="none" stroke="#000000" cx="1813.5" cy="-2505.9045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1813.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 257&#45;273</text>
</g>
<!-- block_9&#45;&gt;codeblock_26 -->
<g id="edge26" class="edge">
<title>block_9&#45;&gt;codeblock_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1813.5,-2576.9738C1813.5,-2564.6553 1813.5,-2548.0837 1813.5,-2534.0413"/>
<polygon fill="#000000" stroke="#000000" points="1817.0001,-2533.9084 1813.5,-2523.9084 1810.0001,-2533.9084 1817.0001,-2533.9084"/>
</g>
<!-- leaf_28 -->
<g id="node29" class="node">
<title>leaf_28</title>
<polygon fill="none" stroke="#c0c0c0" points="1972.5,-2523.9045 1918.5,-2523.9045 1918.5,-2487.9045 1972.5,-2487.9045 1972.5,-2523.9045"/>
</g>
<!-- block_9&#45;&gt;leaf_28 -->
<g id="edge28" class="edge">
<title>block_9&#45;&gt;leaf_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1846.3569,-2579.2351C1865.5296,-2569.3831 1889.7518,-2555.7868 1909.5,-2541.0045 1913.4832,-2538.0229 1917.4774,-2534.6289 1921.2802,-2531.154"/>
<polygon fill="#000000" stroke="#000000" points="1923.9405,-2533.453 1928.7523,-2524.0139 1919.1044,-2528.3921 1923.9405,-2533.453"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="2328.5,-2525.2051 1990.5,-2525.2051 1990.5,-2486.6039 2328.5,-2486.6039 2328.5,-2525.2051"/>
<text text-anchor="middle" x="2159.5" y="-2510.1045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="2159.5" y="-2494.7045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- block_10&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>block_10&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2080.8616,-2577.4012C2095.0511,-2564.5004 2114.552,-2546.7705 2130.5841,-2532.1944"/>
<polygon fill="#000000" stroke="#000000" points="2133.0927,-2534.644 2138.1373,-2525.3271 2128.3837,-2529.4646 2133.0927,-2534.644"/>
</g>
<!-- codeblock_30 -->
<g id="node31" class="node">
<title>codeblock_30</title>
<ellipse fill="none" stroke="#000000" cx="2433.5" cy="-2505.9045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2433.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 278&#45;302</text>
</g>
<!-- block_11&#45;&gt;codeblock_30 -->
<g id="edge30" class="edge">
<title>block_11&#45;&gt;codeblock_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2433.5,-2576.9738C2433.5,-2564.6553 2433.5,-2548.0837 2433.5,-2534.0413"/>
<polygon fill="#000000" stroke="#000000" points="2437.0001,-2533.9084 2433.5,-2523.9084 2430.0001,-2533.9084 2437.0001,-2533.9084"/>
</g>
<!-- leaf_32 -->
<g id="node33" class="node">
<title>leaf_32</title>
<polygon fill="none" stroke="#c0c0c0" points="2592.5,-2523.9045 2538.5,-2523.9045 2538.5,-2487.9045 2592.5,-2487.9045 2592.5,-2523.9045"/>
</g>
<!-- block_11&#45;&gt;leaf_32 -->
<g id="edge32" class="edge">
<title>block_11&#45;&gt;leaf_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2466.3569,-2579.2351C2485.5296,-2569.3831 2509.7518,-2555.7868 2529.5,-2541.0045 2533.4832,-2538.0229 2537.4774,-2534.6289 2541.2802,-2531.154"/>
<polygon fill="#000000" stroke="#000000" points="2543.9405,-2533.453 2548.7523,-2524.0139 2539.1044,-2528.3921 2543.9405,-2533.453"/>
</g>
<!-- leaf_33 -->
<g id="node34" class="node">
<title>leaf_33</title>
<polygon fill="none" stroke="#c0c0c0" points="2970,-2541.1049 2611,-2541.1049 2611,-2470.7041 2970,-2470.7041 2970,-2541.1049"/>
<text text-anchor="middle" x="2790.5" y="-2525.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="2790.5" y="-2510.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="2790.5" y="-2495.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- block_12&#45;&gt;leaf_33 -->
<g id="edge33" class="edge">
<title>block_12&#45;&gt;leaf_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2706.5522,-2577.8251C2716.6217,-2569.1983 2729.3006,-2558.3359 2741.7322,-2547.6854"/>
<polygon fill="#000000" stroke="#000000" points="2744.0981,-2550.2673 2749.4151,-2541.1032 2739.5438,-2544.9514 2744.0981,-2550.2673"/>
</g>
<!-- codeblock_34 -->
<g id="node35" class="node">
<title>codeblock_34</title>
<ellipse fill="none" stroke="#000000" cx="3075.5" cy="-2505.9045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3075.5" y="-2501.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 309&#45;336</text>
</g>
<!-- block_13&#45;&gt;codeblock_34 -->
<g id="edge34" class="edge">
<title>block_13&#45;&gt;codeblock_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3075.5,-2576.9738C3075.5,-2564.6553 3075.5,-2548.0837 3075.5,-2534.0413"/>
<polygon fill="#000000" stroke="#000000" points="3079.0001,-2533.9084 3075.5,-2523.9084 3072.0001,-2533.9084 3079.0001,-2533.9084"/>
</g>
<!-- leaf_36 -->
<g id="node37" class="node">
<title>leaf_36</title>
<polygon fill="none" stroke="#c0c0c0" points="3234.5,-2523.9045 3180.5,-2523.9045 3180.5,-2487.9045 3234.5,-2487.9045 3234.5,-2523.9045"/>
</g>
<!-- block_13&#45;&gt;leaf_36 -->
<g id="edge36" class="edge">
<title>block_13&#45;&gt;leaf_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3108.3569,-2579.2351C3127.5296,-2569.3831 3151.7518,-2555.7868 3171.5,-2541.0045 3175.4832,-2538.0229 3179.4774,-2534.6289 3183.2802,-2531.154"/>
<polygon fill="#000000" stroke="#000000" points="3185.9405,-2533.453 3190.7523,-2524.0139 3181.1044,-2528.3921 3185.9405,-2533.453"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="387,-1415.503 0,-1415.503 0,-1019.3014 387,-1019.3014 387,-1415.503"/>
<text text-anchor="middle" x="193.5" y="-1400.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="193.5" y="-1385.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="193.5" y="-1369.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="193.5" y="-1338.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="193.5" y="-1306.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="193.5" y="-1291.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="193.5" y="-1276.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="193.5" y="-1260.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="193.5" y="-1245.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="193.5" y="-1229.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="193.5" y="-1214.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="193.5" y="-1199.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="193.5" y="-1183.7021" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="193.5" y="-1168.3021" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="193.5" y="-1088.9021" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="193.5" y="-1073.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="193.5" y="-1058.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="193.5" y="-1042.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="193.5" y="-1027.302" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_15&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>codeblock_15&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M326.5916,-2487.6898C314.681,-2374.0094 249.9358,-1756.0517 215.3347,-1425.8027"/>
<polygon fill="#000000" stroke="#000000" points="218.7921,-1425.2128 214.2691,-1415.6319 211.8303,-1425.9422 218.7921,-1425.2128"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="932,-2434.7067 405,-2434.7067 405,-.0978 932,-.0978 932,-2434.7067"/>
<text text-anchor="middle" x="668.5" y="-2419.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="668.5" y="-2404.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="668.5" y="-2388.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="668.5" y="-2373.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-2342.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="668.5" y="-2326.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="668.5" y="-2311.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="668.5" y="-2295.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="668.5" y="-2280.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="668.5" y="-2265.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="668.5" y="-2233.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="668.5" y="-2218.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="668.5" y="-2202.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="668.5" y="-2187.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="668.5" y="-2172.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="668.5" y="-2156.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="668.5" y="-2141.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="668.5" y="-2125.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="668.5" y="-2110.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-2095.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="668.5" y="-2079.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="668.5" y="-2064.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="668.5" y="-2048.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="668.5" y="-2033.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="668.5" y="-2018.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-2002.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="668.5" y="-1987.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="668.5" y="-1971.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="668.5" y="-1956.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="668.5" y="-1941.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1925.6035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1878.2035" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="668.5" y="-1862.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="668.5" y="-1847.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="668.5" y="-1832.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="668.5" y="-1816.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-1801.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="668.5" y="-1785.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1770.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1755.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="668.5" y="-1739.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1724.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="668.5" y="-1708.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1661.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="668.5" y="-1646.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="668.5" y="-1630.603" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1599.203" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="668.5" y="-1583.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="668.5" y="-1568.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="668.5" y="-1553.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="668.5" y="-1537.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="668.5" y="-1522.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="668.5" y="-1506.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="668.5" y="-1491.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1476.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1460.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="668.5" y="-1445.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1429.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="668.5" y="-1414.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1383.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="668.5" y="-1367.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="668.5" y="-1352.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="668.5" y="-1336.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1305.4025" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="668.5" y="-1274.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="668.5" y="-1258.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="668.5" y="-1243.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="668.5" y="-1227.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1212.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="668.5" y="-1197.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="668.5" y="-1181.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1166.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1150.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="668.5" y="-1135.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1120.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1104.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="668.5" y="-1089.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="668.5" y="-1073.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1058.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1043.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="668.5" y="-1027.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1012.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-996.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="668.5" y="-981.4018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-950.0018" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="668.5" y="-934.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-919.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="668.5" y="-903.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="668.5" y="-888.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="668.5" y="-873.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="668.5" y="-857.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-842.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-826.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="668.5" y="-811.4015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-780.0015" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-764.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="668.5" y="-749.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-733.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-718.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="668.5" y="-703.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-687.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="668.5" y="-672.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-656.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-625.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="668.5" y="-610.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-594.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="668.5" y="-579.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="668.5" y="-563.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="668.5" y="-548.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="668.5" y="-533.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="668.5" y="-517.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-502.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-486.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-471.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="668.5" y="-456.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="668.5" y="-440.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="668.5" y="-425.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-409.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-394.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-379.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-363.6007" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-332.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="668.5" y="-316.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-301.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="668.5" y="-286.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="668.5" y="-270.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="668.5" y="-255.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="668.5" y="-239.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-224.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-209.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-193.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="668.5" y="-162.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-146.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="668.5" y="-131.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-116.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="668.5" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="668.5" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="668.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_18&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>codeblock_18&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M668.5,-2487.6898C668.5,-2477.4309 668.5,-2463.0651 668.5,-2445.1746"/>
<polygon fill="#000000" stroke="#000000" points="672.0001,-2444.8765 668.5,-2434.8765 665.0001,-2444.8766 672.0001,-2444.8765"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="1407,-1661.6039 950,-1661.6039 950,-773.2005 1407,-773.2005 1407,-1661.6039"/>
<text text-anchor="middle" x="1178.5" y="-1646.303" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1178.5" y="-1630.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1615.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1178.5" y="-1600.1029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1178.5" y="-1584.7029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1569.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1178.5" y="-1553.9029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-1522.5028" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1178.5" y="-1507.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1491.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1178.5" y="-1476.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1178.5" y="-1460.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1178.5" y="-1445.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1178.5" y="-1430.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1178.5" y="-1414.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1399.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1383.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1178.5" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1178.5" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1178.5" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1178.5" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1178.5" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1178.5" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1178.5" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1178.5" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1178.5" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1178.5" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1178.5" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1178.5" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1178.5" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1178.5" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1178.5" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1178.5" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1178.5" y="-1029.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1178.5" y="-1013.7018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-982.3018" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1178.5" y="-966.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1178.5" y="-951.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1178.5" y="-936.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1178.5" y="-920.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1178.5" y="-905.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1178.5" y="-889.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-874.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1178.5" y="-859.1015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-843.7015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1178.5" y="-828.3015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1178.5" y="-812.9015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-781.5014" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1102.5885,-2487.6898C1107.9165,-2398.5317 1131.781,-1999.189 1151.3495,-1671.7324"/>
<polygon fill="#000000" stroke="#000000" points="1154.8535,-1671.7695 1151.9563,-1661.5785 1147.8659,-1671.3519 1154.8535,-1671.7695"/>
</g>
<!-- leaf_27 -->
<g id="node28" class="node">
<title>leaf_27</title>
<polygon fill="none" stroke="#c0c0c0" points="2052.5,-1337.7027 1574.5,-1337.7027 1574.5,-1097.1018 2052.5,-1097.1018 2052.5,-1337.7027"/>
<text text-anchor="middle" x="1813.5" y="-1322.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="1813.5" y="-1307.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="1813.5" y="-1291.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="1813.5" y="-1276.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1813.5" y="-1261.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="1813.5" y="-1245.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1813.5" y="-1214.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="1813.5" y="-1198.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1813.5" y="-1167.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="1813.5" y="-1152.0021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="1813.5" y="-1136.6021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="1813.5" y="-1105.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_26&#45;&gt;leaf_27 -->
<g id="edge27" class="edge">
<title>codeblock_26&#45;&gt;leaf_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1813.5,-2487.6898C1813.5,-2364.2921 1813.5,-1646.7221 1813.5,-1347.9157"/>
<polygon fill="#000000" stroke="#000000" points="1817.0001,-1347.8976 1813.5,-1337.8977 1810.0001,-1347.8977 1817.0001,-1347.8976"/>
</g>
<!-- leaf_31 -->
<g id="node32" class="node">
<title>leaf_31</title>
<polygon fill="none" stroke="#c0c0c0" points="2700.5,-1398.603 2166.5,-1398.603 2166.5,-1036.2014 2700.5,-1036.2014 2700.5,-1398.603"/>
<text text-anchor="middle" x="2433.5" y="-1383.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="2433.5" y="-1367.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="2433.5" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="2433.5" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2433.5" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="2433.5" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="2433.5" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="2433.5" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="2433.5" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="2433.5" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2433.5" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="2433.5" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2433.5" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="2433.5" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="2433.5" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="2433.5" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="2433.5" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="2433.5" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="2433.5" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="2433.5" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2433.5" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="2433.5" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2433.5" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_30&#45;&gt;leaf_31 -->
<g id="edge31" class="edge">
<title>codeblock_30&#45;&gt;leaf_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2433.5,-2487.6898C2433.5,-2372.0038 2433.5,-1734.0893 2433.5,-1408.5958"/>
<polygon fill="#000000" stroke="#000000" points="2437.0001,-1408.5808 2433.5,-1398.5809 2430.0001,-1408.5809 2437.0001,-1408.5808"/>
</g>
<!-- leaf_35 -->
<g id="node36" class="node">
<title>leaf_35</title>
<polygon fill="none" stroke="#c0c0c0" points="3258.5,-1422.0032 2892.5,-1422.0032 2892.5,-1012.8013 3258.5,-1012.8013 3258.5,-1422.0032"/>
<text text-anchor="middle" x="3075.5" y="-1407.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="3075.5" y="-1391.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="3075.5" y="-1376.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3075.5" y="-1344.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="3075.5" y="-1329.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="3075.5" y="-1314.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3075.5" y="-1282.6024" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="3075.5" y="-1267.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="3075.5" y="-1251.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="3075.5" y="-1236.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="3075.5" y="-1221.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="3075.5" y="-1205.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="3075.5" y="-1190.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="3075.5" y="-1174.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="3075.5" y="-1159.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="3075.5" y="-1144.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="3075.5" y="-1128.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="3075.5" y="-1113.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="3075.5" y="-1097.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="3075.5" y="-1082.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="3075.5" y="-1067.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="3075.5" y="-1051.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="3075.5" y="-1036.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="3075.5" y="-1020.8019" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_34&#45;&gt;leaf_35 -->
<g id="edge35" class="edge">
<title>codeblock_34&#45;&gt;leaf_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3075.5,-2487.6898C3075.5,-2374.7663 3075.5,-1764.2579 3075.5,-1432.4369"/>
<polygon fill="#000000" stroke="#000000" points="3079.0001,-1432.2143 3075.5,-1422.2144 3072.0001,-1432.2144 3079.0001,-1432.2143"/>
</g>
</g>
</svg>