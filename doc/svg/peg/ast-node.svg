<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="3299pt" height="2781pt"
 viewBox="0.00 0.00 3299.04 2781.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2777.0045)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2777.0045 3295.0436,-2777.0045 3295.0436,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1517.0436" cy="-2755.0045" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="1517.0436" y="-2750.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 336</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1517.0436" cy="-2683.0045" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1517.0436" y="-2678.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;336</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1517.0436,-2736.8359C1517.0436,-2729.1355 1517.0436,-2719.9789 1517.0436,-2711.4212"/>
<polygon fill="#000000" stroke="#000000" points="1520.5437,-2711.4178 1517.0436,-2701.4178 1513.5437,-2711.4178 1520.5437,-2711.4178"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="224.0436" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="224.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1451.5806,-2681.363C1234.27,-2675.7098 537.9842,-2655.9065 315.0436,-2629.0045 296.6391,-2626.7837 276.3871,-2622.9207 259.6701,-2619.3415"/>
<polygon fill="#000000" stroke="#000000" points="260.2843,-2615.893 249.7663,-2617.1667 258.7829,-2622.7301 260.2843,-2615.893"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="356.0436" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="356.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1451.5193,-2681.533C1247.4023,-2676.6701 624.7395,-2659.6548 425.0436,-2629.0045 414.8565,-2627.441 403.9981,-2624.9908 393.9823,-2622.396"/>
<polygon fill="#000000" stroke="#000000" points="394.8703,-2619.0105 384.3035,-2619.7805 393.0441,-2625.7681 394.8703,-2619.0105"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="507.0436" cy="-2611.0045" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="507.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;28</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1453.481,-2678.4733C1277.1538,-2665.9035 782.0702,-2630.6104 587.2481,-2616.7221"/>
<polygon fill="#000000" stroke="#000000" points="587.306,-2613.2174 577.0824,-2615.9974 586.8082,-2620.1997 587.306,-2613.2174"/>
</g>
<!-- codeblock_5 -->
<g id="node6" class="node">
<title>codeblock_5</title>
<ellipse fill="none" stroke="#000000" cx="919.0436" cy="-2611.0045" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="919.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 32&#45;190</text>
</g>
<!-- section_1&#45;&gt;codeblock_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;codeblock_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1456.6905,-2675.7379C1348.9551,-2662.7664 1123.4253,-2635.6124 1001.5019,-2620.9326"/>
<polygon fill="#000000" stroke="#000000" points="1001.8165,-2617.4453 991.4697,-2619.7247 1000.9796,-2624.3951 1001.8165,-2617.4453"/>
</g>
<!-- prose_6 -->
<g id="node7" class="node">
<title>prose_6</title>
<ellipse fill="none" stroke="#000000" cx="1208.0436" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1208.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;prose_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1466.7097,-2671.2762C1405.5324,-2657.0213 1303.5682,-2633.2627 1247.6784,-2620.2398"/>
<polygon fill="#000000" stroke="#000000" points="1248.3323,-2616.7985 1237.7989,-2617.9378 1246.7437,-2623.6159 1248.3323,-2616.7985"/>
</g>
<!-- codeblock_7 -->
<g id="node8" class="node">
<title>codeblock_7</title>
<ellipse fill="none" stroke="#000000" cx="1448.0436" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1448.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 194&#45;252</text>
</g>
<!-- section_1&#45;&gt;codeblock_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;codeblock_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1500.3406,-2665.5753C1491.9064,-2656.7744 1481.5179,-2645.9342 1472.2283,-2636.2407"/>
<polygon fill="#000000" stroke="#000000" points="1474.5182,-2633.5716 1465.0721,-2628.7734 1469.4642,-2638.415 1474.5182,-2633.5716"/>
</g>
<!-- prose_8 -->
<g id="node9" class="node">
<title>prose_8</title>
<ellipse fill="none" stroke="#000000" cx="1654.0436" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1654.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;prose_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1547.4484,-2667.0254C1569.383,-2655.4977 1598.959,-2639.9541 1621.3926,-2628.1642"/>
<polygon fill="#000000" stroke="#000000" points="1623.3028,-2631.1142 1630.5266,-2623.3639 1620.0463,-2624.9178 1623.3028,-2631.1142"/>
</g>
<!-- codeblock_9 -->
<g id="node10" class="node">
<title>codeblock_9</title>
<ellipse fill="none" stroke="#000000" cx="1899.0436" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1899.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 257&#45;273</text>
</g>
<!-- section_1&#45;&gt;codeblock_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;codeblock_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1571.3692,-2672.7651C1637.5689,-2660.2877 1749.7684,-2639.1402 1824.1358,-2625.1233"/>
<polygon fill="#000000" stroke="#000000" points="1825.1909,-2628.4861 1834.3696,-2623.1944 1823.8943,-2621.6072 1825.1909,-2628.4861"/>
</g>
<!-- prose_10 -->
<g id="node11" class="node">
<title>prose_10</title>
<ellipse fill="none" stroke="#000000" cx="2163.0436" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2163.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;prose_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1578.1086,-2676.1985C1708.2108,-2661.698 2009.8977,-2628.0734 2120.9923,-2615.6914"/>
<polygon fill="#000000" stroke="#000000" points="2121.5855,-2619.147 2131.1363,-2614.5608 2120.8101,-2612.1901 2121.5855,-2619.147"/>
</g>
<!-- codeblock_11 -->
<g id="node12" class="node">
<title>codeblock_11</title>
<ellipse fill="none" stroke="#000000" cx="2451.0436" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2451.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 278&#45;302</text>
</g>
<!-- section_1&#45;&gt;codeblock_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;codeblock_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1580.5069,-2678.1123C1742.1762,-2665.6496 2170.0539,-2632.6654 2359.0648,-2618.095"/>
<polygon fill="#000000" stroke="#000000" points="2359.5504,-2621.568 2369.2518,-2617.3097 2359.0123,-2614.5887 2359.5504,-2621.568"/>
</g>
<!-- prose_12 -->
<g id="node13" class="node">
<title>prose_12</title>
<ellipse fill="none" stroke="#000000" cx="2751.0436" cy="-2611.0045" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2751.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;prose_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1582.1673,-2680.3968C1744.9489,-2673.7032 2182.6505,-2654.6246 2547.0436,-2629.0045 2603.1614,-2625.059 2667.8402,-2619.1144 2709.0597,-2615.1492"/>
<polygon fill="#000000" stroke="#000000" points="2709.6532,-2618.6082 2719.2696,-2614.1613 2708.9789,-2611.6408 2709.6532,-2618.6082"/>
</g>
<!-- codeblock_13 -->
<g id="node14" class="node">
<title>codeblock_13</title>
<ellipse fill="none" stroke="#000000" cx="3015.0436" cy="-2611.0045" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3015.0436" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 309&#45;336</text>
</g>
<!-- section_1&#45;&gt;codeblock_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;codeblock_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1582.4424,-2681.1175C1770.5278,-2675.5 2329.043,-2657.4849 2792.0436,-2629.0045 2835.7348,-2626.317 2884.1757,-2622.5072 2924.7169,-2619.0842"/>
<polygon fill="#000000" stroke="#000000" points="2925.1785,-2622.5577 2934.8461,-2618.2232 2924.5855,-2615.5829 2925.1785,-2622.5577"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="72.0436,-1357.6023 18.0436,-1357.6023 18.0436,-1321.6023 72.0436,-1321.6023 72.0436,-1357.6023"/>
</g>
<!-- header_2&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>header_2&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M198.3138,-2604.9277C161.0641,-2595.5591 95.0296,-2576.61 81.0436,-2557.0045 -60.3023,-2358.8674 23.4531,-1532.6098 41.7627,-1368.1455"/>
<polygon fill="#000000" stroke="#000000" points="45.2784,-1368.201 42.9176,-1357.8726 38.3222,-1367.4189 45.2784,-1368.201"/>
</g>
<!-- raw_15 -->
<g id="node16" class="node">
<title>raw_15</title>
<ellipse fill="none" stroke="#000000" cx="117.0436" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="117.0436" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_15 -->
<g id="edge15" class="edge">
<title>prose_3&#45;&gt;raw_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M325.5201,-2604.968C271.5374,-2593.9942 163.8599,-2570.6518 153.0436,-2557.0045 77.0215,-2461.0842 109.0651,-1542.8404 115.8842,-1368.2058"/>
<polygon fill="#000000" stroke="#000000" points="119.3893,-1368.1418 116.2868,-1358.0114 112.3948,-1367.8655 119.3893,-1368.1418"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="549.5436,-1537.7031 162.5436,-1537.7031 162.5436,-1141.5015 549.5436,-1141.5015 549.5436,-1537.7031"/>
<text text-anchor="middle" x="356.0436" y="-1522.7026" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="356.0436" y="-1507.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1491.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1460.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1429.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1413.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1398.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="356.0436" y="-1382.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="356.0436" y="-1367.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="356.0436" y="-1352.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="356.0436" y="-1336.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="356.0436" y="-1321.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="356.0436" y="-1305.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="356.0436" y="-1290.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="356.0436" y="-1211.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="356.0436" y="-1195.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="356.0436" y="-1180.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="356.0436" y="-1164.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="356.0436" y="-1149.502" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>codeblock_4&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M504.8508,-2592.5415C491.4123,-2479.3907 419.4875,-1873.7923 380.7682,-1547.7808"/>
<polygon fill="#000000" stroke="#000000" points="384.2307,-1547.2565 379.5756,-1537.7391 377.2795,-1548.0821 384.2307,-1547.2565"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="1094.5436,-2556.9067 567.5436,-2556.9067 567.5436,-122.2979 1094.5436,-122.2979 1094.5436,-2556.9067"/>
<text text-anchor="middle" x="831.0436" y="-2541.8045" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="831.0436" y="-2526.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="831.0436" y="-2511.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="831.0436" y="-2495.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-2464.2044" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="831.0436" y="-2448.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="831.0436" y="-2433.4043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="831.0436" y="-2418.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="831.0436" y="-2402.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="831.0436" y="-2387.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="831.0436" y="-2355.8042" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="831.0436" y="-2340.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="831.0436" y="-2325.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="831.0436" y="-2309.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="831.0436" y="-2294.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="831.0436" y="-2278.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="831.0436" y="-2263.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="831.0436" y="-2248.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="831.0436" y="-2232.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-2217.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="831.0436" y="-2201.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="831.0436" y="-2186.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="831.0436" y="-2171.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="831.0436" y="-2155.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="831.0436" y="-2140.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-2124.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="831.0436" y="-2109.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="831.0436" y="-2094.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="831.0436" y="-2078.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="831.0436" y="-2063.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-2047.8036" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-2000.4036" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="831.0436" y="-1985.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="831.0436" y="-1969.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="831.0436" y="-1954.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="831.0436" y="-1938.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="831.0436" y="-1923.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="831.0436" y="-1908.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1892.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="831.0436" y="-1877.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="831.0436" y="-1861.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1846.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="831.0436" y="-1831.0032" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-1783.6032" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="831.0436" y="-1768.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="831.0436" y="-1752.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-1721.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="831.0436" y="-1706.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="831.0436" y="-1690.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="831.0436" y="-1675.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="831.0436" y="-1659.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="831.0436" y="-1644.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="831.0436" y="-1629.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="831.0436" y="-1613.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1598.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="831.0436" y="-1582.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="831.0436" y="-1567.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1552.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="831.0436" y="-1536.6027" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-1505.2027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="831.0436" y="-1489.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="831.0436" y="-1474.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="831.0436" y="-1459.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-1427.6026" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="831.0436" y="-1396.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="831.0436" y="-1380.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="831.0436" y="-1365.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="831.0436" y="-1350.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="831.0436" y="-1334.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="831.0436" y="-1319.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="831.0436" y="-1303.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1288.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="831.0436" y="-1273.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="831.0436" y="-1257.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1242.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="831.0436" y="-1226.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="831.0436" y="-1211.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="831.0436" y="-1196.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1180.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="831.0436" y="-1165.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="831.0436" y="-1149.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1134.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-1119.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="831.0436" y="-1103.6019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-1072.2019" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="831.0436" y="-1056.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="831.0436" y="-1041.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="831.0436" y="-1026.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="831.0436" y="-1010.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="831.0436" y="-995.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="831.0436" y="-979.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-964.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-949.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="831.0436" y="-933.6016" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-902.2016" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-886.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="831.0436" y="-871.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="831.0436" y="-856.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-840.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="831.0436" y="-825.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-809.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="831.0436" y="-794.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="831.0436" y="-779.0013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-747.6013" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="831.0436" y="-732.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="831.0436" y="-716.8012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="831.0436" y="-701.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="831.0436" y="-686.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="831.0436" y="-670.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="831.0436" y="-655.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="831.0436" y="-639.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-624.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-609.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="831.0436" y="-593.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="831.0436" y="-578.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="831.0436" y="-562.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="831.0436" y="-547.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-532.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-516.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-501.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="831.0436" y="-485.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="831.0436" y="-454.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-439.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="831.0436" y="-423.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="831.0436" y="-408.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="831.0436" y="-392.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="831.0436" y="-377.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="831.0436" y="-362.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-346.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-331.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="831.0436" y="-315.8005" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="831.0436" y="-284.4004" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-269.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="831.0436" y="-253.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="831.0436" y="-238.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-222.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="831.0436" y="-207.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="831.0436" y="-192.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="831.0436" y="-176.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="831.0436" y="-161.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="831.0436" y="-145.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="831.0436" y="-130.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_5&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>codeblock_5&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M917.7657,-2592.5415C917.2972,-2585.7726 916.7067,-2577.2415 916.0057,-2567.1134"/>
<polygon fill="#000000" stroke="#000000" points="919.4823,-2566.6534 915.3001,-2556.919 912.499,-2567.1368 919.4823,-2566.6534"/>
</g>
<!-- raw_19 -->
<g id="node20" class="node">
<title>raw_19</title>
<ellipse fill="none" stroke="#000000" cx="1140.0436" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="1140.0436" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_6&#45;&gt;raw_19 -->
<g id="edge19" class="edge">
<title>prose_6&#45;&gt;raw_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1194.9574,-2594.0521C1187.9287,-2583.9013 1179.9287,-2570.4013 1176.0436,-2557.0045 1108.3981,-2323.7455 1133.1675,-1528.8186 1138.9654,-1368.0784"/>
<polygon fill="#000000" stroke="#000000" points="1142.4654,-1368.1387 1139.3337,-1358.0174 1135.4701,-1367.8826 1142.4654,-1368.1387"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="1642.5436,-1783.804 1185.5436,-1783.804 1185.5436,-895.4006 1642.5436,-895.4006 1642.5436,-1783.804"/>
<text text-anchor="middle" x="1414.0436" y="-1768.5031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1414.0436" y="-1753.1031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1414.0436" y="-1737.7031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1414.0436" y="-1722.303" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1414.0436" y="-1706.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1691.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1414.0436" y="-1676.1029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1414.0436" y="-1644.7029" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1414.0436" y="-1629.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1414.0436" y="-1613.9029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1414.0436" y="-1598.5028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1414.0436" y="-1583.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1414.0436" y="-1567.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1414.0436" y="-1552.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1414.0436" y="-1536.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1521.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1414.0436" y="-1506.1026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1414.0436" y="-1474.7026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1414.0436" y="-1459.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1414.0436" y="-1443.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1414.0436" y="-1428.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1414.0436" y="-1413.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1414.0436" y="-1397.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1414.0436" y="-1382.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1414.0436" y="-1366.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1414.0436" y="-1351.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1414.0436" y="-1336.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1414.0436" y="-1320.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1414.0436" y="-1305.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1289.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1414.0436" y="-1274.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1259.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1243.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1414.0436" y="-1228.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1414.0436" y="-1212.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-1197.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1414.0436" y="-1182.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1414.0436" y="-1166.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1414.0436" y="-1151.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1414.0436" y="-1135.9019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1414.0436" y="-1104.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1414.0436" y="-1089.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1414.0436" y="-1073.7018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1414.0436" y="-1058.3018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1414.0436" y="-1042.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1414.0436" y="-1027.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1414.0436" y="-1012.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-996.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1414.0436" y="-981.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1414.0436" y="-965.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1414.0436" y="-950.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1414.0436" y="-935.1015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1414.0436" y="-903.7015" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_7&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>codeblock_7&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1447.5499,-2592.5415C1445.1869,-2504.1801 1434.793,-2115.509 1426.2003,-1794.1919"/>
<polygon fill="#000000" stroke="#000000" points="1429.6872,-1793.6517 1425.921,-1783.7488 1422.6897,-1793.8388 1429.6872,-1793.6517"/>
</g>
<!-- raw_22 -->
<g id="node23" class="node">
<title>raw_22</title>
<ellipse fill="none" stroke="#000000" cx="1688.0436" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="1688.0436" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_8&#45;&gt;raw_22 -->
<g id="edge22" class="edge">
<title>prose_8&#45;&gt;raw_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1654.5374,-2592.5415C1658.3189,-2451.1339 1682.6681,-1540.6139 1687.2876,-1367.8711"/>
<polygon fill="#000000" stroke="#000000" points="1690.7886,-1367.8799 1687.5572,-1357.7899 1683.7911,-1367.6927 1690.7886,-1367.8799"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="2211.0436,-1459.9028 1733.0436,-1459.9028 1733.0436,-1219.3019 2211.0436,-1219.3019 2211.0436,-1459.9028"/>
<text text-anchor="middle" x="1972.0436" y="-1444.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="1972.0436" y="-1429.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="1972.0436" y="-1414.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="1972.0436" y="-1398.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1972.0436" y="-1383.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="1972.0436" y="-1367.8023" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1972.0436" y="-1336.4023" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="1972.0436" y="-1321.0023" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1972.0436" y="-1289.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="1972.0436" y="-1274.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="1972.0436" y="-1258.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="1972.0436" y="-1227.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_9&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>codeblock_9&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1900.1037,-2592.5415C1907.1584,-2469.6745 1947.5522,-1766.1562 1964.5295,-1470.4708"/>
<polygon fill="#000000" stroke="#000000" points="1968.0444,-1470.3103 1965.1235,-1460.1261 1961.056,-1469.909 1968.0444,-1470.3103"/>
</g>
<!-- raw_25 -->
<g id="node26" class="node">
<title>raw_25</title>
<ellipse fill="none" stroke="#000000" cx="2256.0436" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="2256.0436" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_10&#45;&gt;raw_25 -->
<g id="edge25" class="edge">
<title>prose_10&#45;&gt;raw_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2184.4552,-2597.2603C2197.3115,-2587.6896 2212.5789,-2573.6758 2220.0436,-2557.0045 2319.4015,-2335.1053 2269.3023,-1529.4875 2258.0851,-1367.9277"/>
<polygon fill="#000000" stroke="#000000" points="2261.5677,-1367.5564 2257.3757,-1357.8262 2254.5849,-1368.0468 2261.5677,-1367.5564"/>
</g>
<!-- leaf_27 -->
<g id="node28" class="node">
<title>leaf_27</title>
<polygon fill="none" stroke="#c0c0c0" points="2835.0436,-1520.8031 2301.0436,-1520.8031 2301.0436,-1158.4015 2835.0436,-1158.4015 2835.0436,-1520.8031"/>
<text text-anchor="middle" x="2568.0436" y="-1505.5027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="2568.0436" y="-1490.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="2568.0436" y="-1474.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="2568.0436" y="-1459.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2568.0436" y="-1443.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="2568.0436" y="-1428.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="2568.0436" y="-1413.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="2568.0436" y="-1397.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="2568.0436" y="-1382.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="2568.0436" y="-1366.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2568.0436" y="-1351.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="2568.0436" y="-1336.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2568.0436" y="-1320.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="2568.0436" y="-1305.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="2568.0436" y="-1289.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="2568.0436" y="-1274.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="2568.0436" y="-1259.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="2568.0436" y="-1243.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="2568.0436" y="-1228.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="2568.0436" y="-1212.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2568.0436" y="-1197.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="2568.0436" y="-1182.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2568.0436" y="-1166.702" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_11&#45;&gt;leaf_27 -->
<g id="edge27" class="edge">
<title>codeblock_11&#45;&gt;leaf_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2452.7427,-2592.5415C2463.3343,-2477.4452 2520.815,-1852.8213 2550.4105,-1531.2163"/>
<polygon fill="#000000" stroke="#000000" points="2553.9334,-1531.1264 2551.3646,-1520.8477 2546.9629,-1530.4849 2553.9334,-1531.1264"/>
</g>
<!-- raw_28 -->
<g id="node29" class="node">
<title>raw_28</title>
<ellipse fill="none" stroke="#000000" cx="2880.0436" cy="-1339.6023" rx="27" ry="18"/>
<text text-anchor="middle" x="2880.0436" y="-1335.4023" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_12&#45;&gt;raw_28 -->
<g id="edge28" class="edge">
<title>prose_12&#45;&gt;raw_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2780.0741,-2602.6344C2801.8084,-2594.6948 2830.0958,-2580.4243 2844.0436,-2557.0045 2906.6705,-2451.8477 2885.4618,-1541.0749 2880.836,-1367.9527"/>
<polygon fill="#000000" stroke="#000000" points="2884.3319,-1367.7487 2880.5623,-1357.8472 2877.3345,-1367.9384 2884.3319,-1367.7487"/>
</g>
<!-- leaf_30 -->
<g id="node31" class="node">
<title>leaf_30</title>
<polygon fill="none" stroke="#c0c0c0" points="3291.0436,-1544.2033 2925.0436,-1544.2033 2925.0436,-1135.0014 3291.0436,-1135.0014 3291.0436,-1544.2033"/>
<text text-anchor="middle" x="3108.0436" y="-1529.2027" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="3108.0436" y="-1513.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="3108.0436" y="-1498.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3108.0436" y="-1467.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="3108.0436" y="-1451.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="3108.0436" y="-1436.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="3108.0436" y="-1404.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="3108.0436" y="-1389.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="3108.0436" y="-1374.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="3108.0436" y="-1358.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="3108.0436" y="-1343.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="3108.0436" y="-1327.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="3108.0436" y="-1312.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="3108.0436" y="-1297.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="3108.0436" y="-1281.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="3108.0436" y="-1266.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="3108.0436" y="-1250.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="3108.0436" y="-1235.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="3108.0436" y="-1220.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="3108.0436" y="-1204.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="3108.0436" y="-1189.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="3108.0436" y="-1173.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="3108.0436" y="-1158.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="3108.0436" y="-1143.002" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_13&#45;&gt;leaf_30 -->
<g id="edge30" class="edge">
<title>codeblock_13&#45;&gt;leaf_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3016.3941,-2592.5415C3024.6156,-2480.1463 3068.3789,-1881.8585 3092.3354,-1554.3491"/>
<polygon fill="#000000" stroke="#000000" points="3095.8346,-1554.4867 3093.0735,-1544.258 3088.8533,-1553.976 3095.8346,-1554.4867"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="144.0436,-61.1 90.0436,-61.1 90.0436,-25.1 144.0436,-25.1 144.0436,-61.1"/>
</g>
<!-- raw_15&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>raw_15&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M117.0436,-1321.2745C117.0436,-1178.6007 117.0436,-246.5238 117.0436,-71.4285"/>
<polygon fill="#000000" stroke="#000000" points="120.5437,-71.2227 117.0436,-61.2227 113.5437,-71.2228 120.5437,-71.2227"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="1218.0436,-63.0021 1062.0436,-63.0021 1062.0436,-23.198 1218.0436,-23.198 1218.0436,-63.0021"/>
<text text-anchor="middle" x="1140.0436" y="-31.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- raw_19&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>raw_19&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1140.0436,-1321.2745C1140.0436,-1179.0617 1140.0436,-252.5378 1140.0436,-73.1491"/>
<polygon fill="#000000" stroke="#000000" points="1143.5437,-73.1036 1140.0436,-63.1036 1136.5437,-73.1036 1143.5437,-73.1036"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="1902.5436,-70.4005 1473.5436,-70.4005 1473.5436,-15.7996 1902.5436,-15.7996 1902.5436,-70.4005"/>
<text text-anchor="middle" x="1688.0436" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1688.0436" y="-23.9" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- raw_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>raw_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1688.0436,-1321.2745C1688.0436,-1180.9693 1688.0436,-277.2536 1688.0436,-80.7677"/>
<polygon fill="#000000" stroke="#000000" points="1691.5437,-80.6497 1688.0436,-70.6498 1684.5437,-80.6498 1691.5437,-80.6497"/>
</g>
<!-- leaf_26 -->
<g id="node27" class="node">
<title>leaf_26</title>
<polygon fill="none" stroke="#c0c0c0" points="2425.0436,-70.4005 2087.0436,-70.4005 2087.0436,-15.7996 2425.0436,-15.7996 2425.0436,-70.4005"/>
<text text-anchor="middle" x="2256.0436" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="2256.0436" y="-23.9" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- raw_25&#45;&gt;leaf_26 -->
<g id="edge26" class="edge">
<title>raw_25&#45;&gt;leaf_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2256.0436,-1321.2745C2256.0436,-1180.9693 2256.0436,-277.2536 2256.0436,-80.7677"/>
<polygon fill="#000000" stroke="#000000" points="2259.5437,-80.6497 2256.0436,-70.6498 2252.5437,-80.6498 2259.5437,-80.6497"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="3059.5436,-86.3004 2700.5436,-86.3004 2700.5436,.1003 3059.5436,.1003 3059.5436,-86.3004"/>
<text text-anchor="middle" x="2880.0436" y="-55.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="2880.0436" y="-39.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="2880.0436" y="-24.2" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- raw_28&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>raw_28&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2880.0436,-1321.2745C2880.0436,-1184.4076 2880.0436,-321.0876 2880.0436,-96.4653"/>
<polygon fill="#000000" stroke="#000000" points="2883.5437,-96.2572 2880.0436,-86.2572 2876.5437,-96.2573 2883.5437,-96.2572"/>
</g>
</g>
</svg>