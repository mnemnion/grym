<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="2878pt" height="2781pt"
 viewBox="0.00 0.00 2877.50 2781.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2777.0045)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2777.0045 2873.5,-2777.0045 2873.5,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1227.5" cy="-2755.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1227.5" y="-2750.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">36 &#160;</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1227.5" cy="-2683.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1227.5" y="-2678.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">36 &#160;</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1227.5,-2736.8359C1227.5,-2729.1355 1227.5,-2719.9789 1227.5,-2711.4212"/>
<polygon fill="#000000" stroke="#000000" points="1231.0001,-2711.4178 1227.5,-2701.4178 1224.0001,-2711.4178 1231.0001,-2711.4178"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="550.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="550.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">: &#160;&#160;</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1200.4168,-2682.0853C1094.0411,-2678.265 704.9037,-2662.2645 586.5,-2629.0045 584.3683,-2628.4057 582.2127,-2627.6794 580.0719,-2626.8662"/>
<polygon fill="#000000" stroke="#000000" points="581.4656,-2623.6557 570.8998,-2622.8719 578.6707,-2630.0736 581.4656,-2623.6557"/>
</g>
<!-- block_3 -->
<g id="node4" class="node">
<title>block_3</title>
<ellipse fill="none" stroke="#000000" cx="622.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="622.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">&#45;1 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;block_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1200.4832,-2681.7581C1101.9822,-2677.0101 762.4728,-2658.8049 658.5,-2629.0045 656.3715,-2628.3945 654.2183,-2627.6596 652.0792,-2626.8403"/>
<polygon fill="#000000" stroke="#000000" points="653.4759,-2623.6311 642.9112,-2622.8317 650.6715,-2630.0448 653.4759,-2623.6311"/>
</g>
<!-- block_4 -->
<g id="node5" class="node">
<title>block_4</title>
<ellipse fill="none" stroke="#000000" cx="694.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="694.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">31 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;block_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1200.5662,-2680.2679C1131.97,-2673.1698 945.1654,-2653.0364 790.5,-2629.0045 770.6101,-2625.914 748.5251,-2621.8195 730.5572,-2618.3165"/>
<polygon fill="#000000" stroke="#000000" points="730.9895,-2614.8345 720.5014,-2616.3344 729.6357,-2621.7023 730.9895,-2614.8345"/>
</g>
<!-- block_5 -->
<g id="node6" class="node">
<title>block_5</title>
<ellipse fill="none" stroke="#000000" cx="826.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="826.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">91 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;block_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1201.1893,-2678.2804C1131.5692,-2665.78 942.421,-2631.8183 862.7016,-2617.5046"/>
<polygon fill="#000000" stroke="#000000" points="863.1076,-2614.0216 852.6464,-2615.6991 861.8704,-2620.9114 863.1076,-2614.0216"/>
</g>
<!-- block_6 -->
<g id="node7" class="node">
<title>block_6</title>
<ellipse fill="none" stroke="#000000" cx="1011.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1011.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">93 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;block_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1203.1419,-2674.8852C1164.553,-2662.0222 1089.2561,-2636.9232 1045.4104,-2622.308"/>
<polygon fill="#000000" stroke="#000000" points="1046.3627,-2618.9362 1035.7691,-2619.0942 1044.1491,-2625.5769 1046.3627,-2618.9362"/>
</g>
<!-- block_7 -->
<g id="node8" class="node">
<title>block_7</title>
<ellipse fill="none" stroke="#000000" cx="1144.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1144.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">53 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;block_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1210.7037,-2668.4343C1198.7002,-2658.0215 1182.3613,-2643.8481 1168.9189,-2632.1872"/>
<polygon fill="#000000" stroke="#000000" points="1170.8354,-2629.2163 1160.9881,-2625.3074 1166.2485,-2634.5041 1170.8354,-2629.2163"/>
</g>
<!-- block_8 -->
<g id="node9" class="node">
<title>block_8</title>
<ellipse fill="none" stroke="#000000" cx="1310.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1310.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">56 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;block_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1244.2963,-2668.4343C1256.2998,-2658.0215 1272.6387,-2643.8481 1286.0811,-2632.1872"/>
<polygon fill="#000000" stroke="#000000" points="1288.7515,-2634.5041 1294.0119,-2625.3074 1284.1646,-2629.2163 1288.7515,-2634.5041"/>
</g>
<!-- block_9 -->
<g id="node10" class="node">
<title>block_9</title>
<ellipse fill="none" stroke="#000000" cx="1664.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1664.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">74 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;block_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1253.8522,-2678.6627C1328.6063,-2666.3463 1542.1429,-2631.164 1628.0496,-2617.0101"/>
<polygon fill="#000000" stroke="#000000" points="1628.8155,-2620.4312 1638.1135,-2615.352 1627.6775,-2613.5243 1628.8155,-2620.4312"/>
</g>
<!-- block_10 -->
<g id="node11" class="node">
<title>block_10</title>
<ellipse fill="none" stroke="#000000" cx="1843.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="1843.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">77 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;block_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1254.183,-2680.0675C1326.2131,-2672.1154 1530.6305,-2649.3915 1700.5,-2629.0045 1736.6772,-2624.6627 1777.966,-2619.4363 1806.8461,-2615.7365"/>
<polygon fill="#000000" stroke="#000000" points="1807.4193,-2619.1918 1816.8922,-2614.447 1806.528,-2612.2487 1807.4193,-2619.1918"/>
</g>
<!-- block_11 -->
<g id="node12" class="node">
<title>block_11</title>
<ellipse fill="none" stroke="#000000" cx="2164.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="2164.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">03 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;block_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1254.5321,-2680.9274C1387.5667,-2670.7048 1972.5378,-2625.7551 2126.9935,-2613.8866"/>
<polygon fill="#000000" stroke="#000000" points="2127.6558,-2617.3461 2137.3582,-2613.0901 2127.1194,-2610.3667 2127.6558,-2617.3461"/>
</g>
<!-- block_12 -->
<g id="node13" class="node">
<title>block_12</title>
<ellipse fill="none" stroke="#000000" cx="2349.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="2349.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">08 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;block_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1254.6313,-2682.1434C1369.4094,-2678.3646 1826.3603,-2661.9508 2200.5,-2629.0045 2238.9261,-2625.6208 2282.7388,-2620.1309 2312.8571,-2616.1025"/>
<polygon fill="#000000" stroke="#000000" points="2313.4667,-2619.552 2322.9079,-2614.7444 2312.5292,-2612.6151 2313.4667,-2619.552"/>
</g>
<!-- block_13 -->
<g id="node14" class="node">
<title>block_13</title>
<ellipse fill="none" stroke="#000000" cx="2686.5" cy="-2611.0045" rx="27" ry="18"/>
<text text-anchor="middle" x="2686.5" y="-2606.8045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">36 &#160;</text>
</g>
<!-- section_1&#45;&gt;block_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;block_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1254.8616,-2681.8615C1382.6827,-2676.4939 1933.8069,-2653.041 2385.5,-2629.0045 2480.5301,-2623.9476 2592.374,-2616.9962 2649.2355,-2613.3908"/>
<polygon fill="#000000" stroke="#000000" points="2649.7673,-2616.8641 2659.5251,-2612.7368 2649.3232,-2609.8782 2649.7673,-2616.8641"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="469.5,-2531.9045 415.5,-2531.9045 415.5,-2495.9045 469.5,-2495.9045 469.5,-2531.9045"/>
</g>
<!-- block_3&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>block_3&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M601.0289,-2599.6476C596.3008,-2597.3222 591.2773,-2594.9833 586.5,-2593.0045 539.755,-2573.6421 520.3066,-2585.5038 478.5,-2557.0045 471.9648,-2552.5495 465.9563,-2546.5898 460.797,-2540.5265"/>
<polygon fill="#000000" stroke="#000000" points="463.2637,-2538.0028 454.3183,-2532.3257 457.771,-2542.3421 463.2637,-2538.0028"/>
</g>
<!-- codeblock_15 -->
<g id="node16" class="node">
<title>codeblock_15</title>
<ellipse fill="none" stroke="#000000" cx="514.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="514.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">28 &#160;</text>
</g>
<!-- block_4&#45;&gt;codeblock_15 -->
<g id="edge15" class="edge">
<title>block_4&#45;&gt;codeblock_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M673.0289,-2599.6476C668.3008,-2597.3222 663.2773,-2594.9833 658.5,-2593.0045 611.755,-2573.6421 592.3066,-2585.5038 550.5,-2557.0045 543.3631,-2552.1393 536.8544,-2545.4797 531.3939,-2538.8503"/>
<polygon fill="#000000" stroke="#000000" points="533.9333,-2536.4102 525.0694,-2530.6066 528.3794,-2540.6711 533.9333,-2536.4102"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="709,-2541.806 560,-2541.806 560,-2486.003 709,-2486.003 709,-2541.806"/>
<text text-anchor="middle" x="634.5" y="-2510.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> not functional yet</text>
</g>
<!-- block_4&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>block_4&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M684.0488,-2594.091C676.5831,-2582.009 666.2565,-2565.2971 656.9621,-2550.2556"/>
<polygon fill="#000000" stroke="#000000" points="659.8725,-2548.3072 651.6384,-2541.6401 653.9176,-2551.9869 659.8725,-2548.3072"/>
</g>
<!-- codeblock_18 -->
<g id="node19" class="node">
<title>codeblock_18</title>
<ellipse fill="none" stroke="#000000" cx="754.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="754.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">90 &#160;</text>
</g>
<!-- block_5&#45;&gt;codeblock_18 -->
<g id="edge18" class="edge">
<title>block_5&#45;&gt;codeblock_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M814.2862,-2594.5328C802.8392,-2579.0953 785.5846,-2555.8255 772.5495,-2538.2463"/>
<polygon fill="#000000" stroke="#000000" points="775.3011,-2536.0809 766.5334,-2530.1329 769.6783,-2540.2503 775.3011,-2536.0809"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="853.5,-2531.9045 799.5,-2531.9045 799.5,-2495.9045 853.5,-2495.9045 853.5,-2531.9045"/>
</g>
<!-- block_5&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>block_5&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M826.5,-2592.7407C826.5,-2578.5002 826.5,-2558.4714 826.5,-2542.1657"/>
<polygon fill="#000000" stroke="#000000" points="830.0001,-2542.0863 826.5,-2532.0864 823.0001,-2542.0864 830.0001,-2542.0863"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="1027.5,-2533.8066 871.5,-2533.8066 871.5,-2494.0024 1027.5,-2494.0024 1027.5,-2533.8066"/>
<text text-anchor="middle" x="949.5" y="-2518.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- block_6&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>block_6&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1000.7004,-2594.091C991.6257,-2579.8788 978.4605,-2559.2604 967.7525,-2542.4903"/>
<polygon fill="#000000" stroke="#000000" points="970.4296,-2540.1794 962.098,-2533.6346 964.5298,-2543.9466 970.4296,-2540.1794"/>
</g>
<!-- codeblock_22 -->
<g id="node23" class="node">
<title>codeblock_22</title>
<ellipse fill="none" stroke="#000000" cx="1072.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="1072.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">52 &#160;</text>
</g>
<!-- block_7&#45;&gt;codeblock_22 -->
<g id="edge22" class="edge">
<title>block_7&#45;&gt;codeblock_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1132.2862,-2594.5328C1120.8392,-2579.0953 1103.5846,-2555.8255 1090.5495,-2538.2463"/>
<polygon fill="#000000" stroke="#000000" points="1093.3011,-2536.0809 1084.5334,-2530.1329 1087.6783,-2540.2503 1093.3011,-2536.0809"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="1171.5,-2531.9045 1117.5,-2531.9045 1117.5,-2495.9045 1171.5,-2495.9045 1171.5,-2531.9045"/>
</g>
<!-- block_7&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>block_7&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1144.5,-2592.7407C1144.5,-2578.5002 1144.5,-2558.4714 1144.5,-2542.1657"/>
<polygon fill="#000000" stroke="#000000" points="1148.0001,-2542.0863 1144.5,-2532.0864 1141.0001,-2542.0864 1148.0001,-2542.0863"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="1619,-2541.2049 1190,-2541.2049 1190,-2486.6041 1619,-2486.6041 1619,-2541.2049"/>
<text text-anchor="middle" x="1404.5" y="-2526.1045" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1404.5" y="-2510.7045" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- block_8&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>block_8&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1325.1875,-2595.8326C1337.3671,-2583.2514 1355.1577,-2564.874 1370.8045,-2548.7113"/>
<polygon fill="#000000" stroke="#000000" points="1373.374,-2551.089 1377.8148,-2541.4697 1368.3446,-2546.2202 1373.374,-2551.089"/>
</g>
<!-- codeblock_26 -->
<g id="node27" class="node">
<title>codeblock_26</title>
<ellipse fill="none" stroke="#000000" cx="1664.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="1664.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">73 &#160;</text>
</g>
<!-- block_9&#45;&gt;codeblock_26 -->
<g id="edge26" class="edge">
<title>block_9&#45;&gt;codeblock_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1664.5,-2592.7407C1664.5,-2578.5002 1664.5,-2558.4714 1664.5,-2542.1657"/>
<polygon fill="#000000" stroke="#000000" points="1668.0001,-2542.0863 1664.5,-2532.0864 1661.0001,-2542.0864 1668.0001,-2542.0863"/>
</g>
<!-- leaf_28 -->
<g id="node29" class="node">
<title>leaf_28</title>
<polygon fill="none" stroke="#c0c0c0" points="1763.5,-2531.9045 1709.5,-2531.9045 1709.5,-2495.9045 1763.5,-2495.9045 1763.5,-2531.9045"/>
</g>
<!-- block_9&#45;&gt;leaf_28 -->
<g id="edge28" class="edge">
<title>block_9&#45;&gt;leaf_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1676.7138,-2594.5328C1687.7471,-2579.6532 1704.1757,-2557.4974 1717.021,-2540.1741"/>
<polygon fill="#000000" stroke="#000000" points="1719.8548,-2542.2286 1722.9996,-2532.1113 1714.2319,-2538.0592 1719.8548,-2542.2286"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="2119.5,-2541.2049 1781.5,-2541.2049 1781.5,-2486.6041 2119.5,-2486.6041 2119.5,-2541.2049"/>
<text text-anchor="middle" x="1950.5" y="-2526.1045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="1950.5" y="-2510.7045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- block_10&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>block_10&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1859.751,-2596.2571C1873.7674,-2583.5375 1894.5556,-2564.6727 1912.7002,-2548.2069"/>
<polygon fill="#000000" stroke="#000000" points="1915.2339,-2550.634 1920.2872,-2541.3219 1910.5298,-2545.4502 1915.2339,-2550.634"/>
</g>
<!-- codeblock_30 -->
<g id="node31" class="node">
<title>codeblock_30</title>
<ellipse fill="none" stroke="#000000" cx="2164.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="2164.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">02 &#160;</text>
</g>
<!-- block_11&#45;&gt;codeblock_30 -->
<g id="edge30" class="edge">
<title>block_11&#45;&gt;codeblock_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2164.5,-2592.7407C2164.5,-2578.5002 2164.5,-2558.4714 2164.5,-2542.1657"/>
<polygon fill="#000000" stroke="#000000" points="2168.0001,-2542.0863 2164.5,-2532.0864 2161.0001,-2542.0864 2168.0001,-2542.0863"/>
</g>
<!-- leaf_32 -->
<g id="node33" class="node">
<title>leaf_32</title>
<polygon fill="none" stroke="#c0c0c0" points="2263.5,-2531.9045 2209.5,-2531.9045 2209.5,-2495.9045 2263.5,-2495.9045 2263.5,-2531.9045"/>
</g>
<!-- block_11&#45;&gt;leaf_32 -->
<g id="edge32" class="edge">
<title>block_11&#45;&gt;leaf_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2176.7138,-2594.5328C2187.7471,-2579.6532 2204.1757,-2557.4974 2217.021,-2540.1741"/>
<polygon fill="#000000" stroke="#000000" points="2219.8548,-2542.2286 2222.9996,-2532.1113 2214.2319,-2538.0592 2219.8548,-2542.2286"/>
</g>
<!-- leaf_33 -->
<g id="node34" class="node">
<title>leaf_33</title>
<polygon fill="none" stroke="#c0c0c0" points="2641,-2557.1048 2282,-2557.1048 2282,-2470.7042 2641,-2470.7042 2641,-2557.1048"/>
<text text-anchor="middle" x="2461.5" y="-2541.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="2461.5" y="-2526.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="2461.5" y="-2511.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- block_12&#45;&gt;leaf_33 -->
<g id="edge33" class="edge">
<title>block_12&#45;&gt;leaf_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2366.026,-2596.6771C2376.1916,-2587.8639 2389.8881,-2575.9895 2403.7291,-2563.9898"/>
<polygon fill="#000000" stroke="#000000" points="2406.1487,-2566.5243 2411.4118,-2557.3292 2401.5633,-2561.2353 2406.1487,-2566.5243"/>
</g>
<!-- codeblock_34 -->
<g id="node35" class="node">
<title>codeblock_34</title>
<ellipse fill="none" stroke="#000000" cx="2686.5" cy="-2513.9045" rx="27" ry="18"/>
<text text-anchor="middle" x="2686.5" y="-2509.7045" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">36 &#160;</text>
</g>
<!-- block_13&#45;&gt;codeblock_34 -->
<g id="edge34" class="edge">
<title>block_13&#45;&gt;codeblock_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2686.5,-2592.7407C2686.5,-2578.5002 2686.5,-2558.4714 2686.5,-2542.1657"/>
<polygon fill="#000000" stroke="#000000" points="2690.0001,-2542.0863 2686.5,-2532.0864 2683.0001,-2542.0864 2690.0001,-2542.0863"/>
</g>
<!-- leaf_36 -->
<g id="node37" class="node">
<title>leaf_36</title>
<polygon fill="none" stroke="#c0c0c0" points="2785.5,-2531.9045 2731.5,-2531.9045 2731.5,-2495.9045 2785.5,-2495.9045 2785.5,-2531.9045"/>
</g>
<!-- block_13&#45;&gt;leaf_36 -->
<g id="edge36" class="edge">
<title>block_13&#45;&gt;leaf_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2698.7138,-2594.5328C2709.7471,-2579.6532 2726.1757,-2557.4974 2739.021,-2540.1741"/>
<polygon fill="#000000" stroke="#000000" points="2741.8548,-2542.2286 2744.9996,-2532.1113 2736.2319,-2538.0592 2741.8548,-2542.2286"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="387,-1415.503 0,-1415.503 0,-1019.3014 387,-1019.3014 387,-1415.503"/>
<text text-anchor="middle" x="193.5" y="-1400.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="193.5" y="-1385.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="193.5" y="-1369.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="193.5" y="-1338.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="193.5" y="-1306.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="193.5" y="-1291.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="193.5" y="-1276.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="193.5" y="-1260.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="193.5" y="-1245.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="193.5" y="-1229.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="193.5" y="-1214.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="193.5" y="-1199.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="193.5" y="-1183.7021" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="193.5" y="-1168.3021" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="193.5" y="-1088.9021" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="193.5" y="-1073.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="193.5" y="-1058.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="193.5" y="-1042.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="193.5" y="-1027.302" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_15&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>codeblock_15&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M503.3788,-2497.1192C496.9306,-2488.3827 488.1818,-2478.0443 478.5,-2470.8044 446.2983,-2446.7245 420.2479,-2466.4956 395.5,-2434.8044 167.2639,-2142.5337 155.3159,-1688.9615 171.518,-1425.8146"/>
<polygon fill="#000000" stroke="#000000" points="175.0157,-1425.9605 172.1566,-1415.7587 168.0298,-1425.5168 175.0157,-1425.9605"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="932,-2434.7067 405,-2434.7067 405,-.0978 932,-.0978 932,-2434.7067"/>
<text text-anchor="middle" x="668.5" y="-2419.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="668.5" y="-2404.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="668.5" y="-2388.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="668.5" y="-2373.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-2342.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="668.5" y="-2326.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="668.5" y="-2311.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="668.5" y="-2295.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="668.5" y="-2280.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="668.5" y="-2265.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="668.5" y="-2233.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="668.5" y="-2218.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="668.5" y="-2202.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="668.5" y="-2187.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="668.5" y="-2172.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="668.5" y="-2156.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="668.5" y="-2141.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="668.5" y="-2125.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="668.5" y="-2110.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-2095.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="668.5" y="-2079.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="668.5" y="-2064.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="668.5" y="-2048.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="668.5" y="-2033.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="668.5" y="-2018.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-2002.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="668.5" y="-1987.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="668.5" y="-1971.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="668.5" y="-1956.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="668.5" y="-1941.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1925.6035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1878.2035" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="668.5" y="-1862.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="668.5" y="-1847.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="668.5" y="-1832.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="668.5" y="-1816.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-1801.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="668.5" y="-1785.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1770.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1755.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="668.5" y="-1739.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1724.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="668.5" y="-1708.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1661.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="668.5" y="-1646.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="668.5" y="-1630.603" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1599.203" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="668.5" y="-1583.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="668.5" y="-1568.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="668.5" y="-1553.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="668.5" y="-1537.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="668.5" y="-1522.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="668.5" y="-1506.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="668.5" y="-1491.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1476.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1460.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="668.5" y="-1445.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1429.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="668.5" y="-1414.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1383.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="668.5" y="-1367.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="668.5" y="-1352.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="668.5" y="-1336.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-1305.4025" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="668.5" y="-1274.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="668.5" y="-1258.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="668.5" y="-1243.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="668.5" y="-1227.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1212.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="668.5" y="-1197.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="668.5" y="-1181.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1166.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1150.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="668.5" y="-1135.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1120.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-1104.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="668.5" y="-1089.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="668.5" y="-1073.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1058.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="668.5" y="-1043.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="668.5" y="-1027.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-1012.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-996.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="668.5" y="-981.4018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-950.0018" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="668.5" y="-934.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-919.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="668.5" y="-903.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="668.5" y="-888.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="668.5" y="-873.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="668.5" y="-857.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-842.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-826.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="668.5" y="-811.4015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-780.0015" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-764.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="668.5" y="-749.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-733.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-718.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="668.5" y="-703.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-687.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="668.5" y="-672.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-656.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-625.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="668.5" y="-610.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-594.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="668.5" y="-579.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="668.5" y="-563.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="668.5" y="-548.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="668.5" y="-533.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="668.5" y="-517.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-502.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-486.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="668.5" y="-471.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="668.5" y="-456.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="668.5" y="-440.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="668.5" y="-425.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-409.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-394.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-379.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-363.6007" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="668.5" y="-332.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="668.5" y="-316.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="668.5" y="-301.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="668.5" y="-286.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="668.5" y="-270.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="668.5" y="-255.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="668.5" y="-239.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-224.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-209.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-193.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="668.5" y="-162.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-146.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="668.5" y="-131.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="668.5" y="-116.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="668.5" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="668.5" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="668.5" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="668.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="668.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="668.5" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_18&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>codeblock_18&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M753.2843,-2495.5767C752.5053,-2483.833 751.3715,-2466.7409 749.9402,-2445.1628"/>
<polygon fill="#000000" stroke="#000000" points="753.4161,-2444.6824 749.2618,-2434.936 746.4315,-2445.1458 753.4161,-2444.6824"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="1407,-1661.6039 950,-1661.6039 950,-773.2005 1407,-773.2005 1407,-1661.6039"/>
<text text-anchor="middle" x="1178.5" y="-1646.303" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1178.5" y="-1630.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1615.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1178.5" y="-1600.1029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1178.5" y="-1584.7029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1569.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1178.5" y="-1553.9029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-1522.5028" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1178.5" y="-1507.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1491.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1178.5" y="-1476.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1178.5" y="-1460.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1178.5" y="-1445.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1178.5" y="-1430.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1178.5" y="-1414.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1399.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1178.5" y="-1383.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1178.5" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1178.5" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1178.5" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1178.5" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1178.5" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1178.5" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1178.5" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1178.5" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1178.5" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1178.5" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1178.5" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1178.5" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1178.5" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1178.5" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1178.5" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1178.5" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1178.5" y="-1029.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1178.5" y="-1013.7018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-982.3018" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1178.5" y="-966.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1178.5" y="-951.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1178.5" y="-936.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1178.5" y="-920.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1178.5" y="-905.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1178.5" y="-889.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-874.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1178.5" y="-859.1015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1178.5" y="-843.7015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1178.5" y="-828.3015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1178.5" y="-812.9015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1178.5" y="-781.5014" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1073.9984,-2495.5767C1081.3518,-2405.6366 1114.353,-2001.9943 1141.3297,-1672.0373"/>
<polygon fill="#000000" stroke="#000000" points="1144.8396,-1672.0583 1142.1662,-1661.8063 1137.8629,-1671.4878 1144.8396,-1672.0583"/>
</g>
<!-- leaf_27 -->
<g id="node28" class="node">
<title>leaf_27</title>
<polygon fill="none" stroke="#c0c0c0" points="1903.5,-1337.7027 1425.5,-1337.7027 1425.5,-1097.1018 1903.5,-1097.1018 1903.5,-1337.7027"/>
<text text-anchor="middle" x="1664.5" y="-1322.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="1664.5" y="-1307.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="1664.5" y="-1291.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="1664.5" y="-1276.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1664.5" y="-1261.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="1664.5" y="-1245.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1664.5" y="-1214.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="1664.5" y="-1198.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1664.5" y="-1167.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="1664.5" y="-1152.0021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="1664.5" y="-1136.6021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="1664.5" y="-1105.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_26&#45;&gt;leaf_27 -->
<g id="edge27" class="edge">
<title>codeblock_26&#45;&gt;leaf_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1664.5,-2495.5767C1664.5,-2371.2988 1664.5,-1648.0599 1664.5,-1347.898"/>
<polygon fill="#000000" stroke="#000000" points="1668.0001,-1347.8355 1664.5,-1337.8355 1661.0001,-1347.8356 1668.0001,-1347.8355"/>
</g>
<!-- leaf_31 -->
<g id="node32" class="node">
<title>leaf_31</title>
<polygon fill="none" stroke="#c0c0c0" points="2455.5,-1398.603 1921.5,-1398.603 1921.5,-1036.2014 2455.5,-1036.2014 2455.5,-1398.603"/>
<text text-anchor="middle" x="2188.5" y="-1383.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="2188.5" y="-1367.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="2188.5" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="2188.5" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2188.5" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="2188.5" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="2188.5" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="2188.5" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="2188.5" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="2188.5" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2188.5" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="2188.5" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="2188.5" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="2188.5" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="2188.5" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="2188.5" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="2188.5" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="2188.5" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="2188.5" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="2188.5" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="2188.5" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="2188.5" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2188.5" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_30&#45;&gt;leaf_31 -->
<g id="edge31" class="edge">
<title>codeblock_30&#45;&gt;leaf_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2164.8393,-2495.5767C2166.9962,-2379.0582 2178.8994,-1736.037 2184.9566,-1408.8196"/>
<polygon fill="#000000" stroke="#000000" points="2188.4572,-1408.8153 2185.143,-1398.7522 2181.4584,-1408.6856 2188.4572,-1408.8153"/>
</g>
<!-- leaf_35 -->
<g id="node36" class="node">
<title>leaf_35</title>
<polygon fill="none" stroke="#c0c0c0" points="2869.5,-1422.0032 2503.5,-1422.0032 2503.5,-1012.8013 2869.5,-1012.8013 2869.5,-1422.0032"/>
<text text-anchor="middle" x="2686.5" y="-1407.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="2686.5" y="-1391.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="2686.5" y="-1376.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2686.5" y="-1344.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="2686.5" y="-1329.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="2686.5" y="-1314.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2686.5" y="-1282.6024" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="2686.5" y="-1267.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="2686.5" y="-1251.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="2686.5" y="-1236.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="2686.5" y="-1221.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="2686.5" y="-1205.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="2686.5" y="-1190.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="2686.5" y="-1174.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="2686.5" y="-1159.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="2686.5" y="-1144.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="2686.5" y="-1128.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="2686.5" y="-1113.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="2686.5" y="-1097.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="2686.5" y="-1082.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="2686.5" y="-1067.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="2686.5" y="-1051.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="2686.5" y="-1036.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="2686.5" y="-1020.8019" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_34&#45;&gt;leaf_35 -->
<g id="edge35" class="edge">
<title>codeblock_34&#45;&gt;leaf_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2686.5,-2495.5767C2686.5,-2381.7998 2686.5,-1766.0053 2686.5,-1432.4308"/>
<polygon fill="#000000" stroke="#000000" points="2690.0001,-1432.1549 2686.5,-1422.1549 2683.0001,-1432.155 2690.0001,-1432.1549"/>
</g>
</g>
</svg>