<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="4276pt" height="2731pt"
 viewBox="0.00 0.00 4276.00 2730.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2726.8044)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2726.8044 4272,-2726.8044 4272,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="1812" cy="-2704.8044" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="1812" y="-2700.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 336</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="1812" cy="-2632.8044" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="1812" y="-2628.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;336</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1812,-2686.6358C1812,-2678.9354 1812,-2669.7788 1812,-2661.2211"/>
<polygon fill="#000000" stroke="#000000" points="1815.5001,-2661.2177 1812,-2651.2177 1808.5001,-2661.2177 1815.5001,-2661.2177"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="1109" cy="-2560.8044" rx="27" ry="18"/>
<text text-anchor="middle" x="1109" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1746.5485,-2630.6769C1601.4908,-2625.4485 1256.9695,-2610.0601 1145,-2578.8044 1142.8673,-2578.2091 1140.711,-2577.4854 1138.5696,-2576.6741"/>
<polygon fill="#000000" stroke="#000000" points="1139.9625,-2573.4633 1129.3964,-2572.6842 1137.1705,-2579.8824 1139.9625,-2573.4633"/>
</g>
<!-- block_3 -->
<g id="node4" class="node">
<title>block_3</title>
<ellipse fill="none" stroke="#000000" cx="1200" cy="-2560.8044" rx="45.9804" ry="18"/>
<text text-anchor="middle" x="1200" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 1&#45;1</text>
</g>
<!-- section_1&#45;&gt;block_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;block_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1746.5528,-2631.1046C1641.7406,-2627.3471 1430.2058,-2615.5014 1255,-2578.8044 1251.1818,-2578.0047 1247.2566,-2577.0335 1243.3447,-2575.9612"/>
<polygon fill="#000000" stroke="#000000" points="1244.2978,-2572.5934 1233.7165,-2573.1277 1242.3215,-2579.3086 1244.2978,-2572.5934"/>
</g>
<!-- block_4 -->
<g id="node5" class="node">
<title>block_4</title>
<ellipse fill="none" stroke="#000000" cx="1315" cy="-2560.8044" rx="50.8172" ry="18"/>
<text text-anchor="middle" x="1315" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 2&#45;31</text>
</g>
<!-- section_1&#45;&gt;block_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;block_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1748.1235,-2628.3021C1662.5026,-2621.4977 1506.1045,-2606.365 1375,-2578.8044 1370.8693,-2577.9361 1366.612,-2576.9173 1362.3613,-2575.8136"/>
<polygon fill="#000000" stroke="#000000" points="1363.0877,-2572.3837 1352.5181,-2573.1153 1361.237,-2579.1346 1363.0877,-2572.3837"/>
</g>
<!-- block_5 -->
<g id="node6" class="node">
<title>block_5</title>
<ellipse fill="none" stroke="#000000" cx="1445" cy="-2560.8044" rx="60.9913" ry="18"/>
<text text-anchor="middle" x="1445" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 32&#45;191</text>
</g>
<!-- section_1&#45;&gt;block_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;block_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1754.8923,-2623.7798C1694.7169,-2613.9617 1597.3041,-2597.1901 1514,-2578.8044 1509.3344,-2577.7747 1504.5073,-2576.6463 1499.6734,-2575.4725"/>
<polygon fill="#000000" stroke="#000000" points="1500.3405,-2572.0319 1489.7915,-2573.0162 1498.6518,-2578.8252 1500.3405,-2572.0319"/>
</g>
<!-- block_6 -->
<g id="node7" class="node">
<title>block_6</title>
<ellipse fill="none" stroke="#000000" cx="1589" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1589" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 192&#45;193</text>
</g>
<!-- section_1&#45;&gt;block_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;block_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1769.2672,-2619.0073C1732.7752,-2607.2251 1680.1601,-2590.2373 1641.1851,-2577.6534"/>
<polygon fill="#000000" stroke="#000000" points="1642.1799,-2574.2968 1631.5882,-2574.5549 1640.0291,-2580.9582 1642.1799,-2574.2968"/>
</g>
<!-- block_7 -->
<g id="node8" class="node">
<title>block_7</title>
<ellipse fill="none" stroke="#000000" cx="1738" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1738" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 194&#45;253</text>
</g>
<!-- section_1&#45;&gt;block_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;block_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1794.0867,-2615.3752C1784.8835,-2606.4208 1773.5108,-2595.3554 1763.4171,-2585.5346"/>
<polygon fill="#000000" stroke="#000000" points="1765.6129,-2582.7877 1756.0049,-2578.3227 1760.7314,-2587.8048 1765.6129,-2582.7877"/>
</g>
<!-- block_8 -->
<g id="node9" class="node">
<title>block_8</title>
<ellipse fill="none" stroke="#000000" cx="1887" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="1887" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 254&#45;256</text>
</g>
<!-- section_1&#45;&gt;block_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;block_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1830.1554,-2615.3752C1839.483,-2606.4208 1851.0094,-2595.3554 1861.2394,-2585.5346"/>
<polygon fill="#000000" stroke="#000000" points="1863.9618,-2587.7729 1868.7518,-2578.3227 1859.1141,-2582.7232 1863.9618,-2587.7729"/>
</g>
<!-- block_9 -->
<g id="node10" class="node">
<title>block_9</title>
<ellipse fill="none" stroke="#000000" cx="2194" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2194" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 257&#45;274</text>
</g>
<!-- section_1&#45;&gt;block_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;block_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1866.3256,-2622.5651C1935.7713,-2609.4758 2055.8386,-2586.8453 2129.7491,-2572.9145"/>
<polygon fill="#000000" stroke="#000000" points="2130.6831,-2576.3002 2139.8618,-2571.0085 2129.3865,-2569.4213 2130.6831,-2576.3002"/>
</g>
<!-- block_10 -->
<g id="node11" class="node">
<title>block_10</title>
<ellipse fill="none" stroke="#000000" cx="2422" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2422" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 275&#45;277</text>
</g>
<!-- section_1&#45;&gt;block_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;block_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1872.4386,-2625.6707C1985.9055,-2612.2779 2230.2487,-2583.4374 2351.2032,-2569.1608"/>
<polygon fill="#000000" stroke="#000000" points="2351.9376,-2572.5985 2361.4584,-2567.9503 2351.117,-2565.6467 2351.9376,-2572.5985"/>
</g>
<!-- block_11 -->
<g id="node12" class="node">
<title>block_11</title>
<ellipse fill="none" stroke="#000000" cx="2905" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="2905" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 278&#45;303</text>
</g>
<!-- section_1&#45;&gt;block_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;block_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1875.8895,-2628.5958C2066.0701,-2616.0679 2627.8643,-2579.0604 2830.8064,-2565.6918"/>
<polygon fill="#000000" stroke="#000000" points="2831.3145,-2569.166 2841.0628,-2565.0162 2830.8543,-2562.1812 2831.3145,-2569.166"/>
</g>
<!-- block_12 -->
<g id="node13" class="node">
<title>block_12</title>
<ellipse fill="none" stroke="#000000" cx="3379" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="3379" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 304&#45;308</text>
</g>
<!-- section_1&#45;&gt;block_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;block_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1876.8425,-2629.8251C2128.0347,-2618.2834 3036.3384,-2576.5489 3304.1717,-2564.2426"/>
<polygon fill="#000000" stroke="#000000" points="3304.3543,-2567.738 3314.1831,-2563.7826 3304.0329,-2560.7454 3304.3543,-2567.738"/>
</g>
<!-- block_13 -->
<g id="node14" class="node">
<title>block_13</title>
<ellipse fill="none" stroke="#000000" cx="3806" cy="-2560.8044" rx="65.8274" ry="18"/>
<text text-anchor="middle" x="3806" y="-2556.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 309&#45;336</text>
</g>
<!-- section_1&#45;&gt;block_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;block_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1877.7147,-2631.0733C2099.5834,-2625.1368 2841.3097,-2604.5424 3454,-2578.8044 3549.7105,-2574.7838 3659.9976,-2568.9493 3731.2409,-2565.0229"/>
<polygon fill="#000000" stroke="#000000" points="3731.671,-2568.5045 3741.4625,-2564.4579 3731.2846,-2561.5152 3731.671,-2568.5045"/>
</g>
<!-- prose_14 -->
<g id="node15" class="node">
<title>prose_14</title>
<ellipse fill="none" stroke="#000000" cx="236" cy="-2488.8044" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="236" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- block_3&#45;&gt;prose_14 -->
<g id="edge14" class="edge">
<title>block_3&#45;&gt;prose_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1166.6337,-2548.286C1159.5805,-2546.0935 1152.1165,-2544.102 1145,-2542.8044 790.4893,-2478.1658 693.0922,-2547.128 335,-2506.8044 315.4637,-2504.6045 293.9719,-2500.8602 276.0193,-2497.3545"/>
<polygon fill="#000000" stroke="#000000" points="276.6649,-2493.9144 266.173,-2495.3874 275.2935,-2500.7788 276.6649,-2493.9144"/>
</g>
<!-- codeblock_16 -->
<g id="node17" class="node">
<title>codeblock_16</title>
<ellipse fill="none" stroke="#000000" cx="417" cy="-2488.8044" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="417" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;28</text>
</g>
<!-- block_4&#45;&gt;codeblock_16 -->
<g id="edge16" class="edge">
<title>block_4&#45;&gt;codeblock_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1278.1918,-2548.3309C1270.599,-2546.1639 1262.5996,-2544.1709 1255,-2542.8044 1181.9186,-2529.6641 694.4273,-2503.2387 498.4013,-2492.9954"/>
<polygon fill="#000000" stroke="#000000" points="498.3318,-2489.4871 488.163,-2492.4613 497.9671,-2496.4776 498.3318,-2489.4871"/>
</g>
<!-- codeblock_18 -->
<g id="node19" class="node">
<title>codeblock_18</title>
<ellipse fill="none" stroke="#000000" cx="854" cy="-2488.8044" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="854" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 32&#45;190</text>
</g>
<!-- block_5&#45;&gt;codeblock_18 -->
<g id="edge18" class="edge">
<title>block_5&#45;&gt;codeblock_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1400.7815,-2548.3772C1392.2745,-2546.2871 1383.3987,-2544.3109 1375,-2542.8044 1225.1424,-2515.9243 1048.4573,-2501.1066 944.1323,-2494.0709"/>
<polygon fill="#000000" stroke="#000000" points="944.1651,-2490.5654 933.9548,-2493.3937 943.7003,-2497.5499 944.1651,-2490.5654"/>
</g>
<!-- prose_20 -->
<g id="node21" class="node">
<title>prose_20</title>
<ellipse fill="none" stroke="#000000" cx="1194" cy="-2488.8044" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1194" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- block_6&#45;&gt;prose_20 -->
<g id="edge20" class="edge">
<title>block_6&#45;&gt;prose_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1540.5499,-2548.4907C1532.0582,-2546.4839 1523.2888,-2544.5074 1515,-2542.8044 1415.3139,-2522.3233 1297.0331,-2503.9358 1235.6465,-2494.8312"/>
<polygon fill="#000000" stroke="#000000" points="1235.9823,-2491.3429 1225.5785,-2493.3456 1234.9604,-2498.2679 1235.9823,-2491.3429"/>
</g>
<!-- codeblock_22 -->
<g id="node23" class="node">
<title>codeblock_22</title>
<ellipse fill="none" stroke="#000000" cx="1582" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="1582" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 194&#45;252</text>
</g>
<!-- block_7&#45;&gt;codeblock_22 -->
<g id="edge22" class="edge">
<title>block_7&#45;&gt;codeblock_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1704.1503,-2545.1815C1681.5043,-2534.7295 1651.4548,-2520.8605 1626.8275,-2509.494"/>
<polygon fill="#000000" stroke="#000000" points="1628.2274,-2506.2854 1617.681,-2505.2726 1625.2939,-2512.6411 1628.2274,-2506.2854"/>
</g>
<!-- prose_24 -->
<g id="node25" class="node">
<title>prose_24</title>
<ellipse fill="none" stroke="#000000" cx="1887" cy="-2488.8044" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1887" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- block_8&#45;&gt;prose_24 -->
<g id="edge24" class="edge">
<title>block_8&#45;&gt;prose_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1887,-2542.6358C1887,-2534.9354 1887,-2525.7788 1887,-2517.2211"/>
<polygon fill="#000000" stroke="#000000" points="1890.5001,-2517.2177 1887,-2507.2177 1883.5001,-2517.2177 1890.5001,-2517.2177"/>
</g>
<!-- codeblock_26 -->
<g id="node27" class="node">
<title>codeblock_26</title>
<ellipse fill="none" stroke="#000000" cx="2319" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="2319" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 257&#45;273</text>
</g>
<!-- block_9&#45;&gt;codeblock_26 -->
<g id="edge26" class="edge">
<title>block_9&#45;&gt;codeblock_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2222.3644,-2544.4665C2239.5733,-2534.5542 2261.7626,-2521.7731 2280.5377,-2510.9587"/>
<polygon fill="#000000" stroke="#000000" points="2282.5252,-2513.8531 2289.4436,-2505.8289 2279.0313,-2507.7874 2282.5252,-2513.8531"/>
</g>
<!-- prose_28 -->
<g id="node29" class="node">
<title>prose_28</title>
<ellipse fill="none" stroke="#000000" cx="2462" cy="-2488.8044" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2462" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- block_10&#45;&gt;prose_28 -->
<g id="edge28" class="edge">
<title>block_10&#45;&gt;prose_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2431.8876,-2543.0067C2436.5725,-2534.5739 2442.2619,-2524.333 2447.4285,-2515.0332"/>
<polygon fill="#000000" stroke="#000000" points="2450.5672,-2516.5904 2452.3641,-2506.149 2444.4481,-2513.1908 2450.5672,-2516.5904"/>
</g>
<!-- codeblock_30 -->
<g id="node31" class="node">
<title>codeblock_30</title>
<ellipse fill="none" stroke="#000000" cx="3072" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3072" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 278&#45;302</text>
</g>
<!-- block_11&#45;&gt;codeblock_30 -->
<g id="edge30" class="edge">
<title>block_11&#45;&gt;codeblock_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2940.4164,-2545.5351C2965.0827,-2534.9005 2998.2409,-2520.6047 3025.1002,-2509.0247"/>
<polygon fill="#000000" stroke="#000000" points="3026.5165,-2512.2256 3034.3137,-2505.0524 3023.7451,-2505.7975 3026.5165,-2512.2256"/>
</g>
<!-- prose_32 -->
<g id="node33" class="node">
<title>prose_32</title>
<ellipse fill="none" stroke="#000000" cx="3523" cy="-2488.8044" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3523" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- block_12&#45;&gt;prose_32 -->
<g id="edge32" class="edge">
<title>block_12&#45;&gt;prose_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3410.6014,-2545.0037C3433.9897,-2533.3096 3465.7869,-2517.411 3489.5934,-2505.5077"/>
<polygon fill="#000000" stroke="#000000" points="3491.2341,-2508.6006 3498.6131,-2500.9979 3488.1036,-2502.3396 3491.2341,-2508.6006"/>
</g>
<!-- codeblock_34 -->
<g id="node35" class="node">
<title>codeblock_34</title>
<ellipse fill="none" stroke="#000000" cx="3945" cy="-2488.8044" rx="87.0948" ry="18"/>
<text text-anchor="middle" x="3945" y="-2484.6044" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 309&#45;336</text>
</g>
<!-- block_13&#45;&gt;codeblock_34 -->
<g id="edge34" class="edge">
<title>block_13&#45;&gt;codeblock_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3836.8486,-2544.8253C3856.3566,-2534.7204 3881.8218,-2521.5298 3903.1413,-2510.4867"/>
<polygon fill="#000000" stroke="#000000" points="3905.0312,-2513.4494 3912.3009,-2505.7421 3901.8116,-2507.2338 3905.0312,-2513.4494"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="54,-1235.4022 0,-1235.4022 0,-1199.4022 54,-1199.4022 54,-1235.4022"/>
</g>
<!-- prose_14&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>prose_14&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M204.9574,-2483.5265C160.003,-2475.1892 80.2552,-2457.5543 63,-2434.8044 -10.9636,-2337.288 19.4149,-1420.3352 25.8969,-1245.9619"/>
<polygon fill="#000000" stroke="#000000" points="29.4014,-1245.9075 26.2798,-1235.783 22.4063,-1245.6443 29.4014,-1245.9075"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="459.5,-1415.503 72.5,-1415.503 72.5,-1019.3014 459.5,-1019.3014 459.5,-1415.503"/>
<text text-anchor="middle" x="266" y="-1400.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;AST tools</text>
<text text-anchor="middle" x="266" y="-1385.1025" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="266" y="-1369.7024" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;local clu = require &quot;clu/prelude&quot;</text>
<text text-anchor="middle" x="266" y="-1338.3024" font-family="Inconsolata" font-size="14.00" fill="#000000">local u = require &quot;lib/util&quot;</text>
<text text-anchor="middle" x="266" y="-1306.9024" font-family="Inconsolata" font-size="14.00" fill="#000000">local ansi = require &quot;ansi&quot;</text>
<text text-anchor="middle" x="266" y="-1291.5024" font-family="Inconsolata" font-size="14.00" fill="#000000">local walker = require &quot;peg/walker&quot;</text>
<text text-anchor="middle" x="266" y="-1276.1023" font-family="Inconsolata" font-size="14.00" fill="#000000">local Forest = require &quot;peg/forest&quot;</text>
<text text-anchor="middle" x="266" y="-1260.7023" font-family="Inconsolata" font-size="14.00" fill="#000000">local cyan = tostring(ansi.cyan)</text>
<text text-anchor="middle" x="266" y="-1245.3023" font-family="Inconsolata" font-size="14.00" fill="#000000">local blue = tostring(ansi.blue)</text>
<text text-anchor="middle" x="266" y="-1229.9022" font-family="Inconsolata" font-size="14.00" fill="#000000">local magenta = tostring(ansi.magenta)</text>
<text text-anchor="middle" x="266" y="-1214.5022" font-family="Inconsolata" font-size="14.00" fill="#000000">local clear = tostring(ansi.clear)</text>
<text text-anchor="middle" x="266" y="-1199.1022" font-family="Inconsolata" font-size="14.00" fill="#000000">local green = tostring(ansi.green)</text>
<text text-anchor="middle" x="266" y="-1183.7021" font-family="Inconsolata" font-size="14.00" fill="#000000">local red = tostring(ansi.red)</text>
<text text-anchor="middle" x="266" y="-1168.3021" font-family="Inconsolata" font-size="14.00" fill="#000000">local grey = tostring(ansi.dim)..tostring(ansi.white)</text>
<text text-anchor="middle" x="266" y="-1088.9021" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_range(node)</text>
<text text-anchor="middle" x="266" y="-1073.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="266" y="-1058.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local first, last, _ = &#160;root.index(node)</text>
<text text-anchor="middle" x="266" y="-1042.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, first, last</text>
<text text-anchor="middle" x="266" y="-1027.302" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_16&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>codeblock_16&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M414.8072,-2470.3414C401.3687,-2357.1906 329.4439,-1751.5922 290.7246,-1425.5807"/>
<polygon fill="#000000" stroke="#000000" points="294.1871,-1425.0564 289.532,-1415.539 287.2359,-1425.882 294.1871,-1425.0564"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="1004.5,-2434.7067 477.5,-2434.7067 477.5,-.0978 1004.5,-.0978 1004.5,-2434.7067"/>
<text text-anchor="middle" x="741" y="-2419.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function _ast_range(node)</text>
<text text-anchor="middle" x="741" y="-2404.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = node:root()</text>
<text text-anchor="middle" x="741" y="-2388.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return root.index, node.first, node.last</text>
<text text-anchor="middle" x="741" y="-2373.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-2342.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">local c = { id = magenta,</text>
<text text-anchor="middle" x="741" y="-2326.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;range = grey,</text>
<text text-anchor="middle" x="741" y="-2311.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str = red,</text>
<text text-anchor="middle" x="741" y="-2295.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num = blue,</text>
<text text-anchor="middle" x="741" y="-2280.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;span = clear,</text>
<text text-anchor="middle" x="741" y="-2265.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = green,}</text>
<text text-anchor="middle" x="741" y="-2233.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">local function node_pr(node, depth, str)</text>
<text text-anchor="middle" x="741" y="-2218.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if node.isnode then</text>
<text text-anchor="middle" x="741" y="-2202.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="741" y="-2187.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local prefix = (&quot; &#160;&quot;):rep(depth)</text>
<text text-anchor="middle" x="741" y="-2172.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.isrecursive then </text>
<text text-anchor="middle" x="741" y="-2156.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = red..&quot;*&quot;..prefix:sub(1,&#45;2)..clear</text>
<text text-anchor="middle" x="741" y="-2141.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else </text>
<text text-anchor="middle" x="741" y="-2125.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = prefix</text>
<text text-anchor="middle" x="741" y="-2110.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-2095.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.last then </text>
<text text-anchor="middle" x="741" y="-2079.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="741" y="-2064.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.id..node.id..&quot; &quot;..</text>
<text text-anchor="middle" x="741" y="-2048.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.range..node.first..</text>
<text text-anchor="middle" x="741" y="-2033.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&#45;&quot;..c.range..node.last..clear..&quot;\n&quot;</text>
<text text-anchor="middle" x="741" y="-2018.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-2002.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if node.val then</text>
<text text-anchor="middle" x="741" y="-1987.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..prefix..&#39;&quot;&#39;..c.val..node.val..clear..&#39;&quot;&#39;..&quot;\n&quot;</text>
<text text-anchor="middle" x="741" y="-1971.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end </text>
<text text-anchor="middle" x="741" y="-1956.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return phrase</text>
<text text-anchor="middle" x="741" y="-1941.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1925.6035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-1878.2035" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_tostring(ast, depth, og, phrase)</text>
<text text-anchor="middle" x="741" y="-1862.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local depth = depth or 0</text>
<text text-anchor="middle" x="741" y="-1847.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local og = og or ast.str</text>
<text text-anchor="middle" x="741" y="-1832.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = phrase or &quot;&quot;</text>
<text text-anchor="middle" x="741" y="-1816.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.isnode then</text>
<text text-anchor="middle" x="741" y="-1801.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..node_pr(ast,depth,og)</text>
<text text-anchor="middle" x="741" y="-1785.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1770.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do</text>
<text text-anchor="middle" x="741" y="-1755.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = ast_tostring(v,depth+1,og,phrase)</text>
<text text-anchor="middle" x="741" y="-1739.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1724.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="741" y="-1708.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-1661.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_pr(ast)</text>
<text text-anchor="middle" x="741" y="-1646.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;io.write(ast_tostring(ast))</text>
<text text-anchor="middle" x="741" y="-1630.603" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-1599.203" font-family="Inconsolata" font-size="14.00" fill="#000000">local function deepcopy(orig) &#45;&#45; from luafun</text>
<text text-anchor="middle" x="741" y="-1583.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local orig_type = type(orig)</text>
<text text-anchor="middle" x="741" y="-1568.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local copy</text>
<text text-anchor="middle" x="741" y="-1553.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if orig_type == &#39;table&#39; and orig.isnode then</text>
<text text-anchor="middle" x="741" y="-1537.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = setmetatable({},getmetatable(orig))</text>
<text text-anchor="middle" x="741" y="-1522.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for orig_key, orig_value in next, orig, nil do</text>
<text text-anchor="middle" x="741" y="-1506.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy[deepcopy(orig_key)] = deepcopy(orig_value)</text>
<text text-anchor="middle" x="741" y="-1491.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1476.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;elseif orig_type ~= &quot;function&quot; then</text>
<text text-anchor="middle" x="741" y="-1460.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;copy = orig</text>
<text text-anchor="middle" x="741" y="-1445.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1429.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return copy</text>
<text text-anchor="middle" x="741" y="-1414.4026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-1383.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function ast_copy(ast)</text>
<text text-anchor="middle" x="741" y="-1367.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local clone = deepcopy(ast)</text>
<text text-anchor="middle" x="741" y="-1352.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return walker.walk_ast(clone)</text>
<text text-anchor="middle" x="741" y="-1336.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-1305.4025" font-family="Inconsolata" font-size="14.00" fill="#000000">local forest = {}</text>
<text text-anchor="middle" x="741" y="-1274.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_node (ast, pred, catcher)</text>
<text text-anchor="middle" x="741" y="-1258.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = catcher or {}</text>
<text text-anchor="middle" x="741" y="-1243.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;catch = setmetatable(catch,Forest)</text>
<text text-anchor="middle" x="741" y="-1227.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="741" y="-1212.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ast.id == pred then </text>
<text text-anchor="middle" x="741" y="-1197.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="741" y="-1181.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1166.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairs(ast) do</text>
<text text-anchor="middle" x="741" y="-1150.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="741" y="-1135.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1120.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="741" y="-1104.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if pred(ast) then</text>
<text text-anchor="middle" x="741" y="-1089.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ast</text>
<text text-anchor="middle" x="741" y="-1073.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1058.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for _,v in ipairse(ast) do</text>
<text text-anchor="middle" x="741" y="-1043.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch = select_node(v, pred, catch)</text>
<text text-anchor="middle" x="741" y="-1027.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-1012.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-996.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch &#160;&#160;</text>
<text text-anchor="middle" x="741" y="-981.4018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-950.0018" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select(grove,id)</text>
<text text-anchor="middle" x="741" y="-934.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="741" y="-919.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #grove do</text>
<text text-anchor="middle" x="741" y="-903.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_node(grove[i],id)</text>
<text text-anchor="middle" x="741" y="-888.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="741" y="-873.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="741" y="-857.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-842.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-826.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="741" y="-811.4015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-780.0015" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_rule(ast,id)</text>
<text text-anchor="middle" x="741" y="-764.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="741" y="-749.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="741" y="-733.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_node(ast,id)</text>
<text text-anchor="middle" x="741" y="-718.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="741" y="-703.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select(ast,id)</text>
<text text-anchor="middle" x="741" y="-687.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;select: First argument must be of type Node or Forest&quot; end</text>
<text text-anchor="middle" x="741" y="-672.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="741" y="-656.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-625.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with_node(ast,pred)</text>
<text text-anchor="middle" x="741" y="-610.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="741" y="-594.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="741" y="-579.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(pred) == &quot;string&quot; then</text>
<text text-anchor="middle" x="741" y="-563.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="741" y="-548.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ndx[i].id == pred then</text>
<text text-anchor="middle" x="741" y="-533.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="741" y="-517.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-502.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-486.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(pred) == &quot;function&quot; then</text>
<text text-anchor="middle" x="741" y="-471.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = first, last do</text>
<text text-anchor="middle" x="741" y="-456.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if pred(ndx[i]) then</text>
<text text-anchor="middle" x="741" y="-440.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = ndx[first]</text>
<text text-anchor="middle" x="741" y="-425.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-409.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-394.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-379.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="741" y="-363.6007" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="741" y="-332.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.select_with (ast,id)</text>
<text text-anchor="middle" x="741" y="-316.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},Forest)</text>
<text text-anchor="middle" x="741" y="-301.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="741" y="-286.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local nursery = select_with_node(ast[i],id)</text>
<text text-anchor="middle" x="741" y="-270.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for j = 1, #nursery do</text>
<text text-anchor="middle" x="741" y="-255.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;catch[#catch+1] = nursery[1]</text>
<text text-anchor="middle" x="741" y="-239.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-224.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-209.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="741" y="-193.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">end </text>
<text text-anchor="middle" x="741" y="-162.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">local function select_with(ast,id)</text>
<text text-anchor="middle" x="741" y="-146.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="741" y="-131.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; and ast.isnode then</text>
<text text-anchor="middle" x="741" y="-116.0002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = select_with_node(ast,id)</text>
<text text-anchor="middle" x="741" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif type(ast) == &quot;table&quot; and ast.isforest then</text>
<text text-anchor="middle" x="741" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch = forest.select_with(ast,id)</text>
<text text-anchor="middle" x="741" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="741" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;with: First argument must be of type Node or Forest&quot; </text>
<text text-anchor="middle" x="741" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="741" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch</text>
<text text-anchor="middle" x="741" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_18&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>codeblock_18&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M852.359,-2470.3414C851.7574,-2463.5725 850.9992,-2455.0414 850.099,-2444.9133"/>
<polygon fill="#000000" stroke="#000000" points="853.5646,-2444.3697 849.193,-2434.7189 846.5921,-2444.9895 853.5646,-2444.3697"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="1179,-1235.4022 1023,-1235.4022 1023,-1199.4022 1179,-1199.4022 1179,-1235.4022"/>
<text text-anchor="middle" x="1101" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> add: select_without</text>
</g>
<!-- prose_20&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>prose_20&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1191.8229,-2470.8223C1190.5972,-2460.3283 1189.0972,-2446.8283 1188,-2434.8044 1144.6888,-1960.1711 1110.3241,-1379.7805 1102.6198,-1245.8779"/>
<polygon fill="#000000" stroke="#000000" points="1106.1005,-1245.4389 1102.0337,-1235.6557 1099.112,-1245.8397 1106.1005,-1245.4389"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="1654.5,-1661.6039 1197.5,-1661.6039 1197.5,-773.2005 1654.5,-773.2005 1654.5,-1661.6039"/>
<text text-anchor="middle" x="1426" y="-1646.303" font-family="Inconsolata" font-size="14.00" fill="#000000">local function pick_tostring(table)</text>
<text text-anchor="middle" x="1426" y="-1630.903" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1426" y="-1615.503" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do </text>
<text text-anchor="middle" x="1426" y="-1600.1029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..tostring(v)</text>
<text text-anchor="middle" x="1426" y="-1584.7029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1569.3029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase </text>
<text text-anchor="middle" x="1426" y="-1553.9029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1426" y="-1522.5028" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toks_tostring(table)</text>
<text text-anchor="middle" x="1426" y="-1507.1028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;[&quot;</text>
<text text-anchor="middle" x="1426" y="-1491.7028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(table) do</text>
<text text-anchor="middle" x="1426" y="-1476.3027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;phrase = phrase..</text>
<text text-anchor="middle" x="1426" y="-1460.9027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..clear..</text>
<text text-anchor="middle" x="1426" y="-1445.5027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tostring(v):gsub(&quot;\n&quot;,blue..&quot;\\n&quot;..clear)..</text>
<text text-anchor="middle" x="1426" y="-1430.1026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;grey..&quot;&#39;&quot;..red..&quot;,&quot;..clear</text>
<text text-anchor="middle" x="1426" y="-1414.7026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1399.3026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase..&quot;]&quot;..&quot;\n&quot;</text>
<text text-anchor="middle" x="1426" y="-1383.9025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1426" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function tokenize(ast)</text>
<text text-anchor="middle" x="1426" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then return ast.tok end</text>
<text text-anchor="middle" x="1426" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ndx, first, last = ast:range()</text>
<text text-anchor="middle" x="1426" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local tokens = setmetatable({},{__tostring = toks_tostring})</text>
<text text-anchor="middle" x="1426" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = first, last do &#160;&#160;&#160;&#45;&#45; reap leaves</text>
<text text-anchor="middle" x="1426" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if ndx[i].val then</text>
<text text-anchor="middle" x="1426" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].val</text>
<text text-anchor="middle" x="1426" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].val = nil</text>
<text text-anchor="middle" x="1426" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;elseif ndx[i].tok then</text>
<text text-anchor="middle" x="1426" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j = 1, #ndx[i].tok do</text>
<text text-anchor="middle" x="1426" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tokens[#tokens+1] = ndx[i].tok[j]</text>
<text text-anchor="middle" x="1426" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ndx[i].tok = nil</text>
<text text-anchor="middle" x="1426" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i,v in ipairs(ast) do &#45;&#45; destroy children</text>
<text text-anchor="middle" x="1426" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ast[i] = nil </text>
<text text-anchor="middle" x="1426" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.tok = tokens</text>
<text text-anchor="middle" x="1426" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walker.walk_ast(ast:root()) &#45;&#45; this should be triggered by </text>
<text text-anchor="middle" x="1426" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; next index operation</text>
<text text-anchor="middle" x="1426" y="-1029.1019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return tokens</text>
<text text-anchor="middle" x="1426" y="-1013.7018" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1426" y="-982.3018" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(ast)</text>
<text text-anchor="middle" x="1426" y="-966.9018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local phrase = &quot;&quot;</text>
<text text-anchor="middle" x="1426" y="-951.5017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast:tokens()</text>
<text text-anchor="middle" x="1426" y="-936.1017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if ast.tok then</text>
<text text-anchor="middle" x="1426" y="-920.7017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, #ast.tok do</text>
<text text-anchor="middle" x="1426" y="-905.3016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;phrase = phrase..ast.tok[i]</text>
<text text-anchor="middle" x="1426" y="-889.9016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-874.5016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else error &quot;auto&#45;tokenizing has failed&quot;</text>
<text text-anchor="middle" x="1426" y="-859.1015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="1426" y="-843.7015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;ast.flat = phrase</text>
<text text-anchor="middle" x="1426" y="-828.3015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return phrase</text>
<text text-anchor="middle" x="1426" y="-812.9015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1426" y="-781.5014" font-family="Inconsolata" font-size="14.00" fill="#000000">function forest.pick(ast,id)</text>
</g>
<!-- codeblock_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1579.7346,-2470.3414C1568.8874,-2381.9364 1521.156,-1992.9252 1481.7194,-1671.5161"/>
<polygon fill="#000000" stroke="#000000" points="1485.1883,-1671.048 1480.4964,-1661.5487 1478.2404,-1671.9006 1485.1883,-1671.048"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="2101.5,-1236.7028 1672.5,-1236.7028 1672.5,-1198.1016 2101.5,-1198.1016 2101.5,-1236.7028"/>
<text text-anchor="middle" x="1887" y="-1221.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> similar to select, :pick returns a bare vector of Forests,</text>
<text text-anchor="middle" x="1887" y="-1206.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> rather than a flattened Forest. </text>
</g>
<!-- prose_24&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>prose_24&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1887,-2470.3414C1887,-2329.312 1887,-1423.2779 1887,-1247.0726"/>
<polygon fill="#000000" stroke="#000000" points="1890.5001,-1246.9783 1887,-1236.9784 1883.5001,-1246.9784 1890.5001,-1246.9783"/>
</g>
<!-- leaf_27 -->
<g id="node28" class="node">
<title>leaf_27</title>
<polygon fill="none" stroke="#c0c0c0" points="2598,-1337.7027 2120,-1337.7027 2120,-1097.1018 2598,-1097.1018 2598,-1337.7027"/>
<text text-anchor="middle" x="2359" y="-1322.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = setmetatable({},{[&quot;__tostring&quot;] = pick_tostring})</text>
<text text-anchor="middle" x="2359" y="-1307.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #ast do</text>
<text text-anchor="middle" x="2359" y="-1291.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[#catch+1] = select_node(ast[i],id)</text>
<text text-anchor="middle" x="2359" y="-1276.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2359" y="-1261.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return catch </text>
<text text-anchor="middle" x="2359" y="-1245.6022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2359" y="-1214.2022" font-family="Inconsolata" font-size="14.00" fill="#000000">local function walk(ast)</text>
<text text-anchor="middle" x="2359" y="-1198.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2359" y="-1167.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;select&quot;] = select_rule</text>
<text text-anchor="middle" x="2359" y="-1152.0021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;with&quot;] &#160;&#160;= forest.select_with</text>
<text text-anchor="middle" x="2359" y="-1136.6021" font-family="Inconsolata" font-size="14.00" fill="#000000">Forest[&quot;pick&quot;] &#160;&#160;= forest.pick</text>
<text text-anchor="middle" x="2359" y="-1105.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;&#45; Parses a string with a given grammar,</text>
</g>
<!-- codeblock_26&#45;&gt;leaf_27 -->
<g id="edge27" class="edge">
<title>codeblock_26&#45;&gt;leaf_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2319.5809,-2470.3414C2323.4464,-2347.4744 2345.58,-1643.9561 2354.8827,-1348.2707"/>
<polygon fill="#000000" stroke="#000000" points="2358.3919,-1348.0311 2355.2082,-1337.926 2351.3953,-1347.8109 2358.3919,-1348.0311"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="2954,-1236.7028 2616,-1236.7028 2616,-1198.1016 2954,-1198.1016 2954,-1236.7028"/>
<text text-anchor="middle" x="2785" y="-1221.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;returning a Node decorated with the original</text>
<text text-anchor="middle" x="2785" y="-1206.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;grammar and string.</text>
</g>
<!-- prose_28&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>prose_28&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2493.9911,-2486.1699C2527.588,-2481.5926 2579.3076,-2469.0674 2607,-2434.8044 2911.2244,-2058.3966 2816.3629,-1394.6222 2790.5415,-1247.0282"/>
<polygon fill="#000000" stroke="#000000" points="2793.942,-1246.1598 2788.74,-1236.9299 2787.0508,-1247.3892 2793.942,-1246.1598"/>
</g>
<!-- leaf_31 -->
<g id="node32" class="node">
<title>leaf_31</title>
<polygon fill="none" stroke="#c0c0c0" points="3506,-1398.603 2972,-1398.603 2972,-1036.2014 3506,-1036.2014 3506,-1398.603"/>
<text text-anchor="middle" x="3239" y="-1383.3026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse(grammar, str)</text>
<text text-anchor="middle" x="3239" y="-1367.9025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if grammar == nil then</text>
<text text-anchor="middle" x="3239" y="-1352.5025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;grammar failed to generate&quot;</text>
<text text-anchor="middle" x="3239" y="-1337.1025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="3239" y="-1321.7024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; grammar, input, starting point, input for Carg(1), root node Carg(2)</text>
<text text-anchor="middle" x="3239" y="-1306.3024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root = {} &#45;&#45; closed under parse</text>
<text text-anchor="middle" x="3239" y="-1290.9024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local root_fn = function()</text>
<text text-anchor="middle" x="3239" y="-1275.5024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local root_node = root &#45;&#45; closed under root fn </text>
<text text-anchor="middle" x="3239" y="-1260.1023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return root_node</text>
<text text-anchor="middle" x="3239" y="-1244.7023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="3239" y="-1229.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local ast = lpeg.match(grammar, str, 1, str, root_fn)</text>
<text text-anchor="middle" x="3239" y="-1213.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if type(ast) == &quot;table&quot; then</text>
<text text-anchor="middle" x="3239" y="-1198.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k, v in pairs(ast) do</text>
<text text-anchor="middle" x="3239" y="-1183.1022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root[k] = v</text>
<text text-anchor="middle" x="3239" y="-1167.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end &#160;&#160;</text>
<text text-anchor="middle" x="3239" y="-1152.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.str = str</text>
<text text-anchor="middle" x="3239" y="-1136.9021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;root.grammar = grammar</text>
<text text-anchor="middle" x="3239" y="-1121.502" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;setmetatable(root,getmetatable(ast))</text>
<text text-anchor="middle" x="3239" y="-1106.102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return walker.walk_ast(root)</text>
<text text-anchor="middle" x="3239" y="-1090.702" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else</text>
<text text-anchor="middle" x="3239" y="-1075.302" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error &quot;lpeg did not match grammar&quot;</text>
<text text-anchor="middle" x="3239" y="-1059.9019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="3239" y="-1044.5019" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_30&#45;&gt;leaf_31 -->
<g id="edge31" class="edge">
<title>codeblock_30&#45;&gt;leaf_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3074.4251,-2470.3414C3089.5432,-2355.2451 3171.5882,-1730.6212 3213.8313,-1409.0162"/>
<polygon fill="#000000" stroke="#000000" points="3217.361,-1409.0183 3215.1932,-1398.6476 3210.4206,-1408.1066 3217.361,-1409.0183"/>
</g>
<!-- leaf_33 -->
<g id="node34" class="node">
<title>leaf_33</title>
<polygon fill="none" stroke="#c0c0c0" points="3883.5,-1252.6026 3524.5,-1252.6026 3524.5,-1182.2018 3883.5,-1182.2018 3883.5,-1252.6026"/>
<text text-anchor="middle" x="3704" y="-1237.3023" font-family="Inconsolata" font-size="14.00" fill="#000000"> Generate a label for .dot diagrams.</text>
<text text-anchor="middle" x="3704" y="-1221.9022" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="3704" y="-1206.5022" font-family="Inconsolata" font-size="14.00" fill="#000000"> Defaults to returning the .id field of the Node.</text>
</g>
<!-- prose_32&#45;&gt;leaf_33 -->
<g id="edge33" class="edge">
<title>prose_32&#45;&gt;leaf_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3525.5587,-2470.8315C3544.8796,-2335.115 3667.8965,-1471.0047 3697.5671,-1262.5888"/>
<polygon fill="#000000" stroke="#000000" points="3701.0446,-1262.9943 3698.989,-1252.6008 3694.1145,-1262.0076 3701.0446,-1262.9943"/>
</g>
<!-- leaf_35 -->
<g id="node36" class="node">
<title>leaf_35</title>
<polygon fill="none" stroke="#c0c0c0" points="4268,-1422.0032 3902,-1422.0032 3902,-1012.8013 4268,-1012.8013 4268,-1422.0032"/>
<text text-anchor="middle" x="4085" y="-1407.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dotLabel(ast)</text>
<text text-anchor="middle" x="4085" y="-1391.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return ast.id</text>
<text text-anchor="middle" x="4085" y="-1376.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="4085" y="-1344.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function toMarkdown(ast)</text>
<text text-anchor="middle" x="4085" y="-1329.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;u.freeze(&quot;No toMarkdown method for &quot; .. ast.id)</text>
<text text-anchor="middle" x="4085" y="-1314.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="4085" y="-1282.6024" font-family="Inconsolata" font-size="14.00" fill="#000000">return {</text>
<text text-anchor="middle" x="4085" y="-1267.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;select = select_rule,</text>
<text text-anchor="middle" x="4085" y="-1251.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_with_node = select_with_node,</text>
<text text-anchor="middle" x="4085" y="-1236.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;__select_node = select_node, </text>
<text text-anchor="middle" x="4085" y="-1221.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;with = select_with ,</text>
<text text-anchor="middle" x="4085" y="-1205.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tostring = ast_tostring,</text>
<text text-anchor="middle" x="4085" y="-1190.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;pr = ast_pr,</text>
<text text-anchor="middle" x="4085" y="-1174.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;lift = walker.lift,</text>
<text text-anchor="middle" x="4085" y="-1159.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;root = root,</text>
<text text-anchor="middle" x="4085" y="-1144.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;tokenize = tokenize,</text>
<text text-anchor="middle" x="4085" y="-1128.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;flatten = flatten,</text>
<text text-anchor="middle" x="4085" y="-1113.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;range= ast_range,</text>
<text text-anchor="middle" x="4085" y="-1097.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;copy = ast_copy,</text>
<text text-anchor="middle" x="4085" y="-1082.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;walk = walker.walk_ast,</text>
<text text-anchor="middle" x="4085" y="-1067.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;dotLabel = dotLabel,</text>
<text text-anchor="middle" x="4085" y="-1051.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;toMarkdown = toMarkdown,</text>
<text text-anchor="middle" x="4085" y="-1036.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;parse = parse</text>
<text text-anchor="middle" x="4085" y="-1020.8019" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
</g>
<!-- codeblock_34&#45;&gt;leaf_35 -->
<g id="edge35" class="edge">
<title>codeblock_34&#45;&gt;leaf_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3947.0331,-2470.3414C3959.4094,-2357.9462 4025.2897,-1759.6584 4061.3532,-1432.149"/>
<polygon fill="#000000" stroke="#000000" points="4064.8488,-1432.3809 4062.4644,-1422.0579 4057.8908,-1431.6147 4064.8488,-1432.3809"/>
</g>
</g>
</svg>