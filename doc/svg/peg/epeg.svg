<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="2419pt" height="3220pt"
 viewBox="0.00 0.00 2419.00 3219.81" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3215.8052)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-3215.8052 2415,-3215.8052 2415,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="962" cy="-3193.8052" rx="46.1547" ry="18"/>
<text text-anchor="middle" x="962" y="-3189.6052" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 118</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="962" cy="-3121.8052" rx="65.0143" ry="18"/>
<text text-anchor="middle" x="962" y="-3117.6052" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;118</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M962,-3175.6366C962,-3167.9362 962,-3158.7796 962,-3150.2218"/>
<polygon fill="#000000" stroke="#000000" points="965.5001,-3150.2184 962,-3140.2185 958.5001,-3150.2185 965.5001,-3150.2184"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="284" cy="-2157.2037" rx="27" ry="18"/>
<text text-anchor="middle" x="284" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M897.0355,-3121.1117C741.8136,-3118.7939 359.3345,-3108.9262 320,-3067.8052 75.3225,-2812.0153 230.8172,-2307.8217 273.9078,-2184.7715"/>
<polygon fill="#000000" stroke="#000000" points="277.3297,-2185.594 277.3764,-2174.9992 270.733,-2183.2524 277.3297,-2185.594"/>
</g>
<!-- block_3 -->
<g id="node4" class="node">
<title>block_3</title>
<ellipse fill="none" stroke="#000000" cx="375" cy="-2157.2037" rx="45.9804" ry="18"/>
<text text-anchor="middle" x="375" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 1&#45;3</text>
</g>
<!-- section_1&#45;&gt;block_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;block_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M897.3509,-3119.8506C762.6656,-3115.1297 461.824,-3100.9559 430,-3067.8052 305.8577,-2938.4876 358.2576,-2325.862 372.0506,-2185.7794"/>
<polygon fill="#000000" stroke="#000000" points="375.5703,-2185.7557 373.082,-2175.4572 368.605,-2185.0597 375.5703,-2185.7557"/>
</g>
<!-- block_4 -->
<g id="node5" class="node">
<title>block_4</title>
<ellipse fill="none" stroke="#000000" cx="490" cy="-2157.2037" rx="50.8172" ry="18"/>
<text text-anchor="middle" x="490" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 4&#45;78</text>
</g>
<!-- section_1&#45;&gt;block_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;block_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M897.3353,-3119.5241C814.3581,-3115.1892 676.9277,-3102.7951 642,-3067.8052 388.9402,-2814.2952 461.8776,-2309.4249 484.4867,-2185.2705"/>
<polygon fill="#000000" stroke="#000000" points="487.9347,-2185.8727 486.326,-2175.4007 481.0531,-2184.5902 487.9347,-2185.8727"/>
</g>
<!-- block_5 -->
<g id="node6" class="node">
<title>block_5</title>
<ellipse fill="none" stroke="#000000" cx="707" cy="-2157.2037" rx="55.6542" ry="18"/>
<text text-anchor="middle" x="707" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 79&#45;80</text>
</g>
<!-- section_1&#45;&gt;block_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;block_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M902.5916,-3114.2083C872.6204,-3107.1981 838.3903,-3093.7196 818,-3067.8052 598.6065,-2788.9752 676.9959,-2305.849 701.0378,-2185.1452"/>
<polygon fill="#000000" stroke="#000000" points="704.4926,-2185.7193 703.0564,-2175.2223 697.6331,-2184.3238 704.4926,-2185.7193"/>
</g>
<!-- block_6 -->
<g id="node7" class="node">
<title>block_6</title>
<ellipse fill="none" stroke="#000000" cx="883" cy="-2157.2037" rx="55.6542" ry="18"/>
<text text-anchor="middle" x="883" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 81&#45;89</text>
</g>
<!-- section_1&#45;&gt;block_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;block_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M960.4924,-3103.3974C950.7939,-2984.9773 897.2139,-2330.758 885.3335,-2185.6965"/>
<polygon fill="#000000" stroke="#000000" points="888.7961,-2185.0951 884.4914,-2175.4142 881.8195,-2185.6666 888.7961,-2185.0951"/>
</g>
<!-- block_7 -->
<g id="node8" class="node">
<title>block_7</title>
<ellipse fill="none" stroke="#000000" cx="1041" cy="-2157.2037" rx="55.6542" ry="18"/>
<text text-anchor="middle" x="1041" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 90&#45;93</text>
</g>
<!-- section_1&#45;&gt;block_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;block_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M963.5076,-3103.3974C973.2061,-2984.9773 1026.7861,-2330.758 1038.6665,-2185.6965"/>
<polygon fill="#000000" stroke="#000000" points="1042.1805,-2185.6666 1039.5086,-2175.4142 1035.2039,-2185.0951 1042.1805,-2185.6666"/>
</g>
<!-- block_8 -->
<g id="node9" class="node">
<title>block_8</title>
<ellipse fill="none" stroke="#000000" cx="1240" cy="-2157.2037" rx="55.6542" ry="18"/>
<text text-anchor="middle" x="1240" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 94&#45;96</text>
</g>
<!-- section_1&#45;&gt;block_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;block_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1020.7884,-3114.089C1050.771,-3107.0431 1085.206,-3093.5685 1106,-3067.8052 1329.5799,-2790.795 1265.5083,-2306.3213 1245.1121,-2185.2372"/>
<polygon fill="#000000" stroke="#000000" points="1248.5439,-2184.5414 1243.3939,-2175.2825 1241.6459,-2185.7322 1248.5439,-2184.5414"/>
</g>
<!-- block_9 -->
<g id="node10" class="node">
<title>block_9</title>
<ellipse fill="none" stroke="#000000" cx="1493" cy="-2157.2037" rx="55.6542" ry="18"/>
<text text-anchor="middle" x="1493" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 97&#45;99</text>
</g>
<!-- section_1&#45;&gt;block_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;block_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1026.9383,-3120.1482C1115.0903,-3116.5077 1266.1193,-3104.8837 1305,-3067.8052 1566.0974,-2818.8104 1514.5866,-2310.4948 1497.3024,-2185.4597"/>
<polygon fill="#000000" stroke="#000000" points="1500.7167,-2184.6097 1495.8405,-2175.2037 1493.7868,-2185.5975 1500.7167,-2184.6097"/>
</g>
<!-- block_10 -->
<g id="node11" class="node">
<title>block_10</title>
<ellipse fill="none" stroke="#000000" cx="1780" cy="-2157.2037" rx="65.0229" ry="18"/>
<text text-anchor="middle" x="1780" y="-2153.0037" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">block 100&#45;118</text>
</g>
<!-- section_1&#45;&gt;block_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;block_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1026.9589,-3120.1247C1173.1571,-3115.7516 1518.4175,-3101.8972 1558,-3067.8052 1834.1441,-2829.9652 1797.0226,-2311.2874 1783.4119,-2185.2279"/>
<polygon fill="#000000" stroke="#000000" points="1786.8826,-2184.7706 1782.29,-2175.2229 1779.9262,-2185.5506 1786.8826,-2184.7706"/>
</g>
<!-- leaf_25 -->
<g id="node26" class="node">
<title>leaf_25</title>
<polygon fill="none" stroke="#c0c0c0" points="2411,-3067.9068 1863,-3067.9068 1863,-1246.5006 2411,-1246.5006 2411,-3067.9068"/>
<text text-anchor="middle" x="2137" y="-3052.6052" font-family="Inconsolata" font-size="14.00" fill="#000000"> extended PEG module</text>
<text text-anchor="middle" x="2137" y="-3021.2052" font-family="Inconsolata" font-size="14.00" fill="#000000">#!lua</text>
<text text-anchor="middle" x="2137" y="-3005.8051" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="2137" y="-2990.4051" font-family="Inconsolata" font-size="14.00" fill="#000000">local Node = require &quot;peg/node&quot;</text>
<text text-anchor="middle" x="2137" y="-2959.0051" font-family="Inconsolata" font-size="14.00" fill="#000000">local function makerange(first, second)</text>
<text text-anchor="middle" x="2137" y="-2943.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local patts = {}</text>
<text text-anchor="middle" x="2137" y="-2928.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local patt &#160;= {}</text>
<text text-anchor="middle" x="2137" y="-2912.805" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if (second) then</text>
<text text-anchor="middle" x="2137" y="-2897.405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if (string.len(first) == string.len(second)) then</text>
<text text-anchor="middle" x="2137" y="-2882.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 1, string.len(first) do</text>
<text text-anchor="middle" x="2137" y="-2866.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patts[i] = lpeg.R(string.sub(first,i,i)..string.sub(second,i,i))</text>
<text text-anchor="middle" x="2137" y="-2851.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2835.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patt = patts[1]</text>
<text text-anchor="middle" x="2137" y="-2820.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 2, string.len(first) do</text>
<text text-anchor="middle" x="2137" y="-2805.0048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patt = patt + patts[i]</text>
<text text-anchor="middle" x="2137" y="-2789.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2774.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return patt</text>
<text text-anchor="middle" x="2137" y="-2758.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2137" y="-2743.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(&quot;Ranges must be of equal byte width&quot;)</text>
<text text-anchor="middle" x="2137" y="-2728.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return {}</text>
<text text-anchor="middle" x="2137" y="-2712.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2697.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else </text>
<text text-anchor="middle" x="2137" y="-2681.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return lpeg.R(first)</text>
<text text-anchor="middle" x="2137" y="-2666.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2651.0045" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-2603.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function num_bytes(str)</text>
<text text-anchor="middle" x="2137" y="-2588.2044" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;returns the number of bytes in the next character in str</text>
<text text-anchor="middle" x="2137" y="-2572.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local c = str:byte(1)</text>
<text text-anchor="middle" x="2137" y="-2557.4043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if c &gt;= 0x00 and c &lt;= 0x7F then</text>
<text text-anchor="middle" x="2137" y="-2542.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 1</text>
<text text-anchor="middle" x="2137" y="-2526.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xC2 and c &lt;= 0xDF then</text>
<text text-anchor="middle" x="2137" y="-2511.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 2</text>
<text text-anchor="middle" x="2137" y="-2495.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xE0 and c &lt;= 0xEF then</text>
<text text-anchor="middle" x="2137" y="-2480.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 3</text>
<text text-anchor="middle" x="2137" y="-2465.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xF0 and c &lt;= 0xF4 then</text>
<text text-anchor="middle" x="2137" y="-2449.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 4</text>
<text text-anchor="middle" x="2137" y="-2434.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2418.8041" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-2387.404" font-family="Inconsolata" font-size="14.00" fill="#000000">local function Su (str)</text>
<text text-anchor="middle" x="2137" y="-2372.004" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;[[</text>
<text text-anchor="middle" x="2137" y="-2356.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;convert a &#39;set&#39; pattern to uniquely match the characters </text>
<text text-anchor="middle" x="2137" y="-2341.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;in the range.</text>
<text text-anchor="middle" x="2137" y="-2325.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="2137" y="-2310.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local i = 0</text>
<text text-anchor="middle" x="2137" y="-2295.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #str do</text>
<text text-anchor="middle" x="2137" y="-2279.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[i]</text>
<text text-anchor="middle" x="2137" y="-2264.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2248.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;]]</text>
<text text-anchor="middle" x="2137" y="-2233.4037" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-2202.0037" font-family="Inconsolata" font-size="14.00" fill="#000000">local function spanner(first, last, str, root)</text>
<text text-anchor="middle" x="2137" y="-2186.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local vals = {}</text>
<text text-anchor="middle" x="2137" y="-2171.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.span = true</text>
<text text-anchor="middle" x="2137" y="-2155.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.val = string.sub(str, first, last &#45; 1)</text>
<text text-anchor="middle" x="2137" y="-2140.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.first = first</text>
<text text-anchor="middle" x="2137" y="-2125.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.last = last &#45; 1</text>
<text text-anchor="middle" x="2137" y="-2109.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if vals.last &gt;= vals.first then</text>
<text text-anchor="middle" x="2137" y="-2094.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return vals</text>
<text text-anchor="middle" x="2137" y="-2078.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="2137" y="-2063.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If a capture contains nothing, we don&#39;t want a node for it</text>
<text text-anchor="middle" x="2137" y="-2048.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return nil</text>
<text text-anchor="middle" x="2137" y="-2032.6033" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-2001.2033" font-family="Inconsolata" font-size="14.00" fill="#000000">local function Csp (patt)</text>
<text text-anchor="middle" x="2137" y="-1985.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lpeg.Cp() </text>
<text text-anchor="middle" x="2137" y="-1970.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Cmt(patt, function() return true end) </text>
<text text-anchor="middle" x="2137" y="-1955.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Cp() </text>
<text text-anchor="middle" x="2137" y="-1939.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Carg(1) </text>
<text text-anchor="middle" x="2137" y="-1924.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Carg(2) / spanner</text>
<text text-anchor="middle" x="2137" y="-1908.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-1893.4031" font-family="Inconsolata" font-size="14.00" fill="#000000">#/lua</text>
<text text-anchor="middle" x="2137" y="-1862.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> from the lpeg tutorial</text>
<text text-anchor="middle" x="2137" y="-1830.603" font-family="Inconsolata" font-size="14.00" fill="#000000">#!lua</text>
<text text-anchor="middle" x="2137" y="-1815.203" font-family="Inconsolata" font-size="14.00" fill="#000000">local function split (s, sep)</text>
<text text-anchor="middle" x="2137" y="-1799.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;sep = lpeg.P(sep)</text>
<text text-anchor="middle" x="2137" y="-1784.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local elem = lpeg.C((1 &#45; sep)^0)</text>
<text text-anchor="middle" x="2137" y="-1769.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local p = lpeg.Ct(elem * (sep * elem)^0) &#160;&#160;&#45;&#45; make a table capture</text>
<text text-anchor="middle" x="2137" y="-1753.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return lpeg.match(p, s)</text>
<text text-anchor="middle" x="2137" y="-1738.2028" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-1722.8028" font-family="Inconsolata" font-size="14.00" fill="#000000">#/lua</text>
<text text-anchor="middle" x="2137" y="-1691.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> Match a pattern anywhere in a string.</text>
<text text-anchor="middle" x="2137" y="-1676.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="2137" y="-1660.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> Taken from the lpeg tutorial</text>
<text text-anchor="middle" x="2137" y="-1629.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#45; #param</text>
<text text-anchor="middle" x="2137" y="-1613.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; p : lpeg pattern</text>
<text text-anchor="middle" x="2137" y="-1582.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#45; #returns</text>
<text text-anchor="middle" x="2137" y="-1567.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45; the first and last index of the first match, or nil</text>
<text text-anchor="middle" x="2137" y="-1535.6026" font-family="Inconsolata" font-size="14.00" fill="#000000">#!lua</text>
<text text-anchor="middle" x="2137" y="-1520.2025" font-family="Inconsolata" font-size="14.00" fill="#000000">local I = lpeg.Cp()</text>
<text text-anchor="middle" x="2137" y="-1488.8025" font-family="Inconsolata" font-size="14.00" fill="#000000">local function &#160;anyP(p)</text>
<text text-anchor="middle" x="2137" y="-1473.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;return lpeg.P{ I * p * I + 1 * lpeg.V(1) }</text>
<text text-anchor="middle" x="2137" y="-1458.0024" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2137" y="-1394.6024" font-family="Inconsolata" font-size="14.00" fill="#000000">local Ru = makerange</text>
<text text-anchor="middle" x="2137" y="-1347.2024" font-family="Inconsolata" font-size="14.00" fill="#000000">return { R = Ru,</text>
<text text-anchor="middle" x="2137" y="-1331.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;Csp = Csp,</text>
<text text-anchor="middle" x="2137" y="-1316.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;anyP = anyP,</text>
<text text-anchor="middle" x="2137" y="-1301.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;match = lpeg.match,</text>
<text text-anchor="middle" x="2137" y="-1285.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;split = split,</text>
<text text-anchor="middle" x="2137" y="-1270.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;spanner = spanner }</text>
<text text-anchor="middle" x="2137" y="-1254.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">#/lua</text>
</g>
<!-- section_1&#45;&gt;leaf_25 -->
<g id="edge25" class="edge">
<title>section_1&#45;&gt;leaf_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1026.6449,-3119.8929C1226.269,-3113.7265 1821.5129,-3093.2783 1854,-3067.8052 1854.2748,-3067.5897 1854.5493,-3067.374 1854.8236,-3067.158"/>
<polygon fill="#000000" stroke="#000000" points="1857.1049,-3069.8149 1862.705,-3060.821 1852.7185,-3064.3596 1857.1049,-3069.8149"/>
</g>
<!-- leaf_11 -->
<g id="node12" class="node">
<title>leaf_11</title>
<polygon fill="none" stroke="#c0c0c0" points="234,-1201.5021 78,-1201.5021 78,-1165.5021 234,-1165.5021 234,-1201.5021"/>
<text text-anchor="middle" x="156" y="-1180.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> extended PEG module</text>
</g>
<!-- block_3&#45;&gt;leaf_11 -->
<g id="edge11" class="edge">
<title>block_3&#45;&gt;leaf_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M376.4728,-2138.9774C385.4257,-2023.6175 428.638,-1395.0048 320,-1246.6022 313.6129,-1237.8772 263.9992,-1219.4626 220.9973,-1204.7671"/>
<polygon fill="#000000" stroke="#000000" points="221.97,-1201.4012 211.3756,-1201.5024 219.7208,-1208.03 221.97,-1201.4012"/>
</g>
<!-- codeblock_12 -->
<g id="node13" class="node">
<title>codeblock_12</title>
<ellipse fill="none" stroke="#000000" cx="325" cy="-1183.5021" rx="72.5844" ry="18"/>
<text text-anchor="middle" x="325" y="-1179.3021" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 4&#45;77</text>
</g>
<!-- block_4&#45;&gt;codeblock_12 -->
<g id="edge12" class="edge">
<title>block_4&#45;&gt;codeblock_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M494.5205,-2138.9642C518.0853,-2039.5305 618.7304,-1555.999 430,-1246.6022 417.8986,-1226.7636 396.9991,-1212.3647 377.0164,-1202.3762"/>
<polygon fill="#000000" stroke="#000000" points="378.4723,-1199.1931 367.9347,-1198.0935 375.4866,-1205.5244 378.4723,-1199.1931"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="470,-1201.5021 416,-1201.5021 416,-1165.5021 470,-1165.5021 470,-1201.5021"/>
</g>
<!-- block_4&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>block_4&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M489.1237,-2139.0495C483.4041,-2020.557 451.4049,-1357.6276 444.3685,-1211.8527"/>
<polygon fill="#000000" stroke="#000000" points="447.8484,-1211.3508 443.8703,-1201.5312 440.8565,-1211.6884 447.8484,-1211.3508"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="665.5,-1201.5021 488.5,-1201.5021 488.5,-1165.5021 665.5,-1165.5021 665.5,-1201.5021"/>
<text text-anchor="middle" x="577" y="-1180.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> from the lpeg tutorial</text>
</g>
<!-- block_5&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>block_5&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M704.5762,-2139.0495C688.7561,-2020.557 600.2477,-1357.6276 580.7851,-1211.8527"/>
<polygon fill="#000000" stroke="#000000" points="584.1998,-1210.98 579.4071,-1201.5312 577.2613,-1211.9065 584.1998,-1210.98"/>
</g>
<!-- codeblock_16 -->
<g id="node17" class="node">
<title>codeblock_16</title>
<ellipse fill="none" stroke="#000000" cx="761" cy="-1183.5021" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="761" y="-1179.3021" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 81&#45;88</text>
</g>
<!-- block_6&#45;&gt;codeblock_16 -->
<g id="edge16" class="edge">
<title>block_6&#45;&gt;codeblock_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M881.1516,-2139.1852C871.4727,-2045.5415 825.0496,-1605.0156 772,-1246.6022 770.2973,-1235.0983 768.1501,-1222.4632 766.2056,-1211.5409"/>
<polygon fill="#000000" stroke="#000000" points="769.6474,-1210.9047 764.4246,-1201.6866 762.759,-1212.1497 769.6474,-1210.9047"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="910,-1201.5021 856,-1201.5021 856,-1165.5021 910,-1165.5021 910,-1201.5021"/>
</g>
<!-- block_6&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>block_6&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M883,-2139.0495C883,-2020.557 883,-1357.6276 883,-1211.8527"/>
<polygon fill="#000000" stroke="#000000" points="886.5001,-1211.5312 883,-1201.5312 879.5001,-1211.5312 886.5001,-1211.5312"/>
</g>
<!-- leaf_19 -->
<g id="node20" class="node">
<title>leaf_19</title>
<polygon fill="none" stroke="#c0c0c0" points="1210,-1210.7026 928,-1210.7026 928,-1156.3016 1210,-1156.3016 1210,-1210.7026"/>
<text text-anchor="middle" x="1069" y="-1195.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> Match a pattern anywhere in a string.</text>
<text text-anchor="middle" x="1069" y="-1180.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
<text text-anchor="middle" x="1069" y="-1164.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> Taken from the lpeg tutorial</text>
</g>
<!-- block_7&#45;&gt;leaf_19 -->
<g id="edge19" class="edge">
<title>block_7&#45;&gt;leaf_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1041.522,-2139.0495C1044.8625,-2022.8843 1063.25,-1383.4587 1067.9208,-1221.0326"/>
<polygon fill="#000000" stroke="#000000" points="1071.4193,-1221.1308 1068.2083,-1211.0343 1064.4222,-1220.9296 1071.4193,-1221.1308"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="1391.5,-1202.8027 1228.5,-1202.8027 1228.5,-1164.2015 1391.5,-1164.2015 1391.5,-1202.8027"/>
<text text-anchor="middle" x="1310" y="-1187.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#45; #param</text>
<text text-anchor="middle" x="1310" y="-1172.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45; p : lpeg pattern</text>
</g>
<!-- block_8&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>block_8&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1241.3051,-2139.0495C1249.7956,-2020.9462 1297.1693,-1361.9771 1307.8574,-1213.306"/>
<polygon fill="#000000" stroke="#000000" points="1311.3635,-1213.3449 1308.5897,-1203.1197 1304.3815,-1212.8429 1311.3635,-1213.3449"/>
</g>
<!-- leaf_21 -->
<g id="node22" class="node">
<title>leaf_21</title>
<polygon fill="none" stroke="#c0c0c0" points="1824.5,-1202.8027 1409.5,-1202.8027 1409.5,-1164.2015 1824.5,-1164.2015 1824.5,-1202.8027"/>
<text text-anchor="middle" x="1617" y="-1187.7021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#45; #returns</text>
<text text-anchor="middle" x="1617" y="-1172.3021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45; the first and last index of the first match, or nil</text>
</g>
<!-- block_9&#45;&gt;leaf_21 -->
<g id="edge21" class="edge">
<title>block_9&#45;&gt;leaf_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1495.3119,-2139.0495C1510.3523,-2020.9462 1594.2714,-1361.9771 1613.2045,-1213.306"/>
<polygon fill="#000000" stroke="#000000" points="1616.7103,-1213.4817 1614.5017,-1203.1197 1609.7664,-1212.5974 1616.7103,-1213.4817"/>
</g>
<!-- codeblock_22 -->
<g id="node23" class="node">
<title>codeblock_22</title>
<ellipse fill="none" stroke="#000000" cx="1929" cy="-1183.5021" rx="86.7905" ry="18"/>
<text text-anchor="middle" x="1929" y="-1179.3021" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 100&#45;118</text>
</g>
<!-- block_10&#45;&gt;codeblock_22 -->
<g id="edge22" class="edge">
<title>block_10&#45;&gt;codeblock_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1776.6266,-2139.0883C1759.3492,-2041.276 1687.8545,-1568.7039 1854,-1246.6022 1862.2687,-1230.5719 1876.5484,-1216.9983 1890.4437,-1206.5954"/>
<polygon fill="#000000" stroke="#000000" points="1892.8572,-1209.1746 1898.9886,-1200.5342 1888.8072,-1203.4651 1892.8572,-1209.1746"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="2088,-1201.5021 2034,-1201.5021 2034,-1165.5021 2088,-1165.5021 2088,-1201.5021"/>
</g>
<!-- block_10&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>block_10&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1774.5764,-2139.0693C1744.9971,-2036.1097 1613.113,-1520.0403 1854,-1246.6022 1905.3397,-1188.3249 1954.2878,-1242.7235 2025,-1210.6022 2027.0833,-1209.6558 2029.1606,-1208.5719 2031.2059,-1207.3943"/>
<polygon fill="#000000" stroke="#000000" points="2033.4008,-1210.1426 2039.8889,-1201.7667 2029.5936,-1204.2684 2033.4008,-1210.1426"/>
</g>
<!-- leaf_13 -->
<g id="node14" class="node">
<title>leaf_13</title>
<polygon fill="none" stroke="#c0c0c0" points="548,-1120.6032 0,-1120.6032 0,.2011 548,.2011 548,-1120.6032"/>
<text text-anchor="middle" x="274" y="-1105.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">local lpeg = require &quot;lpeg&quot;</text>
<text text-anchor="middle" x="274" y="-1089.802" font-family="Inconsolata" font-size="14.00" fill="#000000">local Node = require &quot;peg/node&quot;</text>
<text text-anchor="middle" x="274" y="-1058.402" font-family="Inconsolata" font-size="14.00" fill="#000000">local function makerange(first, second)</text>
<text text-anchor="middle" x="274" y="-1043.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local patts = {}</text>
<text text-anchor="middle" x="274" y="-1027.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local patt &#160;= {}</text>
<text text-anchor="middle" x="274" y="-1012.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if (second) then</text>
<text text-anchor="middle" x="274" y="-996.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if (string.len(first) == string.len(second)) then</text>
<text text-anchor="middle" x="274" y="-981.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 1, string.len(first) do</text>
<text text-anchor="middle" x="274" y="-966.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patts[i] = lpeg.R(string.sub(first,i,i)..string.sub(second,i,i))</text>
<text text-anchor="middle" x="274" y="-950.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-935.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patt = patts[1]</text>
<text text-anchor="middle" x="274" y="-919.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i = 2, string.len(first) do</text>
<text text-anchor="middle" x="274" y="-904.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patt = patt + patts[i]</text>
<text text-anchor="middle" x="274" y="-889.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-873.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return patt</text>
<text text-anchor="middle" x="274" y="-858.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="274" y="-842.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;error(&quot;Ranges must be of equal byte width&quot;)</text>
<text text-anchor="middle" x="274" y="-827.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return {}</text>
<text text-anchor="middle" x="274" y="-812.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-796.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;else </text>
<text text-anchor="middle" x="274" y="-781.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return lpeg.R(first)</text>
<text text-anchor="middle" x="274" y="-765.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-750.4014" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="274" y="-703.0013" font-family="Inconsolata" font-size="14.00" fill="#000000">local function num_bytes(str)</text>
<text text-anchor="middle" x="274" y="-687.6013" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;returns the number of bytes in the next character in str</text>
<text text-anchor="middle" x="274" y="-672.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local c = str:byte(1)</text>
<text text-anchor="middle" x="274" y="-656.8012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if c &gt;= 0x00 and c &lt;= 0x7F then</text>
<text text-anchor="middle" x="274" y="-641.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 1</text>
<text text-anchor="middle" x="274" y="-626.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xC2 and c &lt;= 0xDF then</text>
<text text-anchor="middle" x="274" y="-610.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 2</text>
<text text-anchor="middle" x="274" y="-595.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xE0 and c &lt;= 0xEF then</text>
<text text-anchor="middle" x="274" y="-579.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 3</text>
<text text-anchor="middle" x="274" y="-564.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;elseif c &gt;= 0xF0 and c &lt;= 0xF4 then</text>
<text text-anchor="middle" x="274" y="-549.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return 4</text>
<text text-anchor="middle" x="274" y="-533.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-518.201" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="274" y="-486.8009" font-family="Inconsolata" font-size="14.00" fill="#000000">local function Su (str)</text>
<text text-anchor="middle" x="274" y="-471.4009" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;[[</text>
<text text-anchor="middle" x="274" y="-456.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;convert a &#39;set&#39; pattern to uniquely match the characters </text>
<text text-anchor="middle" x="274" y="-440.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;in the range.</text>
<text text-anchor="middle" x="274" y="-425.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local catch = {}</text>
<text text-anchor="middle" x="274" y="-409.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local i = 0</text>
<text text-anchor="middle" x="274" y="-394.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;for i = 1, #str do</text>
<text text-anchor="middle" x="274" y="-379.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;catch[i]</text>
<text text-anchor="middle" x="274" y="-363.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-348.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45;]]</text>
<text text-anchor="middle" x="274" y="-332.8006" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="274" y="-301.4006" font-family="Inconsolata" font-size="14.00" fill="#000000">local function spanner(first, last, str, root)</text>
<text text-anchor="middle" x="274" y="-286.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;local vals = {}</text>
<text text-anchor="middle" x="274" y="-270.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.span = true</text>
<text text-anchor="middle" x="274" y="-255.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.val = string.sub(str, first, last &#45; 1)</text>
<text text-anchor="middle" x="274" y="-239.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.first = first</text>
<text text-anchor="middle" x="274" y="-224.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;vals.last = last &#45; 1</text>
<text text-anchor="middle" x="274" y="-209.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;if vals.last &gt;= vals.first then</text>
<text text-anchor="middle" x="274" y="-193.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return vals</text>
<text text-anchor="middle" x="274" y="-178.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;end</text>
<text text-anchor="middle" x="274" y="-162.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#45;&#45; If a capture contains nothing, we don&#39;t want a node for it</text>
<text text-anchor="middle" x="274" y="-147.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return nil</text>
<text text-anchor="middle" x="274" y="-132.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="274" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">local function Csp (patt)</text>
<text text-anchor="middle" x="274" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;return lpeg.Cp() </text>
<text text-anchor="middle" x="274" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Cmt(patt, function() return true end) </text>
<text text-anchor="middle" x="274" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Cp() </text>
<text text-anchor="middle" x="274" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Carg(1) </text>
<text text-anchor="middle" x="274" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;* lpeg.Carg(2) / spanner</text>
<text text-anchor="middle" x="274" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_12&#45;&gt;leaf_13 -->
<g id="edge13" class="edge">
<title>codeblock_12&#45;&gt;leaf_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M323.5013,-1165.1854C322.7827,-1156.4037 321.8266,-1144.7185 320.6787,-1130.689"/>
<polygon fill="#000000" stroke="#000000" points="324.1578,-1130.2899 319.8539,-1120.6087 317.1812,-1130.8608 324.1578,-1130.2899"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="1058,-610.602 566,-610.602 566,-509.8 1058,-509.8 1058,-610.602"/>
<text text-anchor="middle" x="812" y="-595.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">local function split (s, sep)</text>
<text text-anchor="middle" x="812" y="-579.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;sep = lpeg.P(sep)</text>
<text text-anchor="middle" x="812" y="-564.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local elem = lpeg.C((1 &#45; sep)^0)</text>
<text text-anchor="middle" x="812" y="-549.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local p = lpeg.Ct(elem * (sep * elem)^0) &#160;&#160;&#45;&#45; make a table capture</text>
<text text-anchor="middle" x="812" y="-533.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return lpeg.match(p, s)</text>
<text text-anchor="middle" x="812" y="-518.201" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_16&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>codeblock_16&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M762.4987,-1165.1854C769.1133,-1084.3442 795.8603,-757.4534 807.0453,-620.7559"/>
<polygon fill="#000000" stroke="#000000" points="810.5599,-620.7192 807.8871,-610.4671 803.5832,-620.1483 810.5599,-620.7192"/>
</g>
<!-- leaf_23 -->
<g id="node24" class="node">
<title>leaf_23</title>
<polygon fill="none" stroke="#c0c0c0" points="2101.5,-697.1017 1756.5,-697.1017 1756.5,-423.3004 2101.5,-423.3004 2101.5,-697.1017"/>
<text text-anchor="middle" x="1929" y="-681.7012" font-family="Inconsolata" font-size="14.00" fill="#000000">local I = lpeg.Cp()</text>
<text text-anchor="middle" x="1929" y="-650.3012" font-family="Inconsolata" font-size="14.00" fill="#000000">local function &#160;anyP(p)</text>
<text text-anchor="middle" x="1929" y="-634.9011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;return lpeg.P{ I * p * I + 1 * lpeg.V(1) }</text>
<text text-anchor="middle" x="1929" y="-619.5011" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="1929" y="-556.1011" font-family="Inconsolata" font-size="14.00" fill="#000000">local Ru = makerange</text>
<text text-anchor="middle" x="1929" y="-508.701" font-family="Inconsolata" font-size="14.00" fill="#000000">return { R = Ru,</text>
<text text-anchor="middle" x="1929" y="-493.301" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;Csp = Csp,</text>
<text text-anchor="middle" x="1929" y="-477.901" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;anyP = anyP,</text>
<text text-anchor="middle" x="1929" y="-462.501" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;match = lpeg.match,</text>
<text text-anchor="middle" x="1929" y="-447.1009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;split = split,</text>
<text text-anchor="middle" x="1929" y="-431.7009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;spanner = spanner }</text>
</g>
<!-- codeblock_22&#45;&gt;leaf_23 -->
<g id="edge23" class="edge">
<title>codeblock_22&#45;&gt;leaf_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1929,-1165.1854C1929,-1098.4332 1929,-863.9208 1929,-707.2478"/>
<polygon fill="#000000" stroke="#000000" points="1932.5001,-707.0432 1929,-697.0432 1925.5001,-707.0432 1932.5001,-707.0432"/>
</g>
</g>
</svg>