<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: hierarchy Pages: 1 -->
<svg width="621pt" height="3716pt"
 viewBox="0.00 0.00 621.00 3715.61" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3711.6061)">
<title>hierarchy</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-3711.6061 617,-3711.6061 617,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="104" cy="-3689.6061" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="104" y="-3685.4061" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 227</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="104" cy="-3617.6061" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="104" y="-3613.4061" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;227</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M104,-3671.4374C104,-3663.737 104,-3654.5804 104,-3646.0227"/>
<polygon fill="#000000" stroke="#000000" points="107.5001,-3646.0193 104,-3636.0193 100.5001,-3646.0194 107.5001,-3646.0193"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-3545.6061" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-3541.4061" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">0 : </text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M85.3604,-3600.1769C74.8008,-3590.3029 61.4962,-3577.8623 50.258,-3567.3538"/>
<polygon fill="#000000" stroke="#000000" points="52.5617,-3564.7161 42.8669,-3560.4427 47.7807,-3569.8291 52.5617,-3564.7161"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="104" cy="-3545.6061" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="104" y="-3541.4061" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M104,-3599.4374C104,-3591.737 104,-3582.5804 104,-3574.0227"/>
<polygon fill="#000000" stroke="#000000" points="107.5001,-3574.0193 104,-3564.0193 100.5001,-3574.0194 107.5001,-3574.0193"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="317" cy="-3545.6061" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="317" y="-3541.4061" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 2&#45;228</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M145.5742,-3603.5528C179.2486,-3592.1699 226.9272,-3576.0532 263.4563,-3563.7053"/>
<polygon fill="#000000" stroke="#000000" points="264.6116,-3567.0094 272.9642,-3560.4914 262.3699,-3560.3781 264.6116,-3567.0094"/>
</g>
<!-- leaf_5 -->
<g id="node6" class="node">
<title>leaf_5</title>
<polygon fill="none" stroke="#c0c0c0" points="89,-1763.803 35,-1763.803 35,-1727.803 89,-1727.803 89,-1763.803"/>
</g>
<!-- prose_3&#45;&gt;leaf_5 -->
<g id="edge5" class="edge">
<title>prose_3&#45;&gt;leaf_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M101.5939,-3527.6419C100.2919,-3517.1539 98.7919,-3503.6539 98,-3491.6061 52.2247,-2795.2139 59.6651,-1939.5217 61.6288,-1774.1835"/>
<polygon fill="#000000" stroke="#000000" points="65.132,-1773.9324 61.7547,-1763.8903 58.1325,-1773.8467 65.132,-1773.9324"/>
</g>
<!-- leaf_6 -->
<g id="node7" class="node">
<title>leaf_6</title>
<polygon fill="none" stroke="#c0c0c0" points="613,-3491.4091 107,-3491.4091 107,-.197 613,-.197 613,-3491.4091"/>
<text text-anchor="middle" x="360" y="-3476.4061" font-family="Inconsolata" font-size="14.00" fill="#000000">local L = require( &quot;lpeg&quot; )</text>
<text text-anchor="middle" x="360" y="-3445.006" font-family="Inconsolata" font-size="14.00" fill="#000000">local assert = assert</text>
<text text-anchor="middle" x="360" y="-3429.606" font-family="Inconsolata" font-size="14.00" fill="#000000">local string, io = assert( string ), assert( io )</text>
<text text-anchor="middle" x="360" y="-3414.206" font-family="Inconsolata" font-size="14.00" fill="#000000">local V = string.sub( assert( _VERSION ), &#45;4 )</text>
<text text-anchor="middle" x="360" y="-3398.8059" font-family="Inconsolata" font-size="14.00" fill="#000000">local _G = assert( _G )</text>
<text text-anchor="middle" x="360" y="-3383.4059" font-family="Inconsolata" font-size="14.00" fill="#000000">local error = assert( error )</text>
<text text-anchor="middle" x="360" y="-3368.0059" font-family="Inconsolata" font-size="14.00" fill="#000000">local pairs = assert( pairs )</text>
<text text-anchor="middle" x="360" y="-3352.6058" font-family="Inconsolata" font-size="14.00" fill="#000000">local next = assert( next )</text>
<text text-anchor="middle" x="360" y="-3337.2058" font-family="Inconsolata" font-size="14.00" fill="#000000">local type = assert( type )</text>
<text text-anchor="middle" x="360" y="-3321.8058" font-family="Inconsolata" font-size="14.00" fill="#000000">local tostring = assert( tostring )</text>
<text text-anchor="middle" x="360" y="-3306.4057" font-family="Inconsolata" font-size="14.00" fill="#000000">local setmetatable = assert( setmetatable )</text>
<text text-anchor="middle" x="360" y="-3291.0057" font-family="Inconsolata" font-size="14.00" fill="#000000">local setfenv = setfenv</text>
<text text-anchor="middle" x="360" y="-3275.6057" font-family="Inconsolata" font-size="14.00" fill="#000000">local getfenv = getfenv</text>
<text text-anchor="middle" x="360" y="-3260.2056" font-family="Inconsolata" font-size="14.00" fill="#000000">if V == &quot; 5.1&quot; then</text>
<text text-anchor="middle" x="360" y="-3244.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert( setfenv )</text>
<text text-anchor="middle" x="360" y="-3229.4056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert( getfenv )</text>
<text text-anchor="middle" x="360" y="-3214.0056" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-3166.6055" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; module table</text>
<text text-anchor="middle" x="360" y="-3151.2055" font-family="Inconsolata" font-size="14.00" fill="#000000">local epnf = {}</text>
<text text-anchor="middle" x="360" y="-3103.8055" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; maximum of two numbers while avoiding math lib as a dependency</text>
<text text-anchor="middle" x="360" y="-3088.4054" font-family="Inconsolata" font-size="14.00" fill="#000000">local function max( a, b )</text>
<text text-anchor="middle" x="360" y="-3073.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if a &lt; b then return b else return a end</text>
<text text-anchor="middle" x="360" y="-3057.6054" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-3010.2053" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; get the line which p points into, the line number and the position</text>
<text text-anchor="middle" x="360" y="-2994.8053" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; of the beginning of the line</text>
<text text-anchor="middle" x="360" y="-2979.4053" font-family="Inconsolata" font-size="14.00" fill="#000000">local function getline( s, p )</text>
<text text-anchor="middle" x="360" y="-2964.0052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lno, sol = 1, 1</text>
<text text-anchor="middle" x="360" y="-2948.6052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for i = 1, p do</text>
<text text-anchor="middle" x="360" y="-2933.2052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if string.sub( s, i, i ) == &quot;\n&quot; then</text>
<text text-anchor="middle" x="360" y="-2917.8051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;lno = lno + 1</text>
<text text-anchor="middle" x="360" y="-2902.4051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;sol = i + 1</text>
<text text-anchor="middle" x="360" y="-2887.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-2871.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-2856.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local eol = #s</text>
<text text-anchor="middle" x="360" y="-2840.805" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for i = sol, #s do</text>
<text text-anchor="middle" x="360" y="-2825.405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if string.sub( s, i, i ) == &quot;\n&quot; then</text>
<text text-anchor="middle" x="360" y="-2810.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;eol = i &#45; 1</text>
<text text-anchor="middle" x="360" y="-2794.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;break</text>
<text text-anchor="middle" x="360" y="-2779.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-2763.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-2748.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return string.sub( s, sol, eol ), lno, sol</text>
<text text-anchor="middle" x="360" y="-2733.0048" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-2685.6047" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; raise an error during semantic validation of the ast</text>
<text text-anchor="middle" x="360" y="-2670.2047" font-family="Inconsolata" font-size="14.00" fill="#000000">local function raise_error( n, msg, s, p )</text>
<text text-anchor="middle" x="360" y="-2654.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local line, lno, sol = getline( s, p )</text>
<text text-anchor="middle" x="360" y="-2639.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert( p &lt;= #s )</text>
<text text-anchor="middle" x="360" y="-2624.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local clen = max( 70, p+10&#45;sol )</text>
<text text-anchor="middle" x="360" y="-2608.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if #line &gt; clen then</text>
<text text-anchor="middle" x="360" y="-2593.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;line = string.sub( line, 1, clen ) .. &quot;...&quot;</text>
<text text-anchor="middle" x="360" y="-2577.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-2562.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local marker = string.rep( &quot; &quot;, p&#45;sol ) .. &quot;^&quot;</text>
<text text-anchor="middle" x="360" y="-2547.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;error( n..&quot;:&quot;..lno..&quot;: &quot;..msg..&quot;\n&quot;..line..&quot;\n&quot;..marker, 0 )</text>
<text text-anchor="middle" x="360" y="-2531.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-2484.2044" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; parse&#45;error reporting function</text>
<text text-anchor="middle" x="360" y="-2468.8044" font-family="Inconsolata" font-size="14.00" fill="#000000">local function parse_error( s, p, n, e )</text>
<text text-anchor="middle" x="360" y="-2453.4043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if p &lt;= #s then</text>
<text text-anchor="middle" x="360" y="-2438.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local msg = &quot;parse error&quot;</text>
<text text-anchor="middle" x="360" y="-2422.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if e then msg = msg .. &quot;, &quot; .. e end</text>
<text text-anchor="middle" x="360" y="-2407.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;raise_error( n, msg, s, p )</text>
<text text-anchor="middle" x="360" y="-2391.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else &#45;&#45; parse error at end of input</text>
<text text-anchor="middle" x="360" y="-2376.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local _,lno = string.gsub( s, &quot;\n&quot;, &quot;\n&quot; )</text>
<text text-anchor="middle" x="360" y="-2361.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if string.sub( s, &#45;1, &#45;1 ) ~= &quot;\n&quot; then lno = lno + 1 end</text>
<text text-anchor="middle" x="360" y="-2345.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local msg = &quot;: parse error at &lt;eof&gt;&quot;</text>
<text text-anchor="middle" x="360" y="-2330.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if e then msg = msg .. &quot;, &quot; .. e end</text>
<text text-anchor="middle" x="360" y="-2314.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error( n..&quot;:&quot;..lno..msg, 0 )</text>
<text text-anchor="middle" x="360" y="-2299.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-2284.004" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-2236.604" font-family="Inconsolata" font-size="14.00" fill="#000000">local function make_ast_node( id, pos, t, pos_b, str )</text>
<text text-anchor="middle" x="360" y="-2221.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t.id = id</text>
<text text-anchor="middle" x="360" y="-2205.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t.pos = pos</text>
<text text-anchor="middle" x="360" y="-2190.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t.pos_b = pos_b</text>
<text text-anchor="middle" x="360" y="-2175.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t.str = string.sub(str,pos, pos_b &#45; 1)</text>
<text text-anchor="middle" x="360" y="-2143.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="360" y="-2128.2038" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-2080.8037" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; some useful/common lpeg patterns</text>
<text text-anchor="middle" x="360" y="-2065.4037" font-family="Inconsolata" font-size="14.00" fill="#000000">local L_Cp = L.Cp()</text>
<text text-anchor="middle" x="360" y="-2050.0037" font-family="Inconsolata" font-size="14.00" fill="#000000">local L_Carg_1 = L.Carg( 1 )</text>
<text text-anchor="middle" x="360" y="-2034.6037" font-family="Inconsolata" font-size="14.00" fill="#000000">local function E( msg )</text>
<text text-anchor="middle" x="360" y="-2019.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return L.Cmt( L_Carg_1 * L.Cc( msg ), parse_error )</text>
<text text-anchor="middle" x="360" y="-2003.8036" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-1988.4036" font-family="Inconsolata" font-size="14.00" fill="#000000">local function EOF( msg )</text>
<text text-anchor="middle" x="360" y="-1973.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return &#45;L.P( 1 ) + E( msg )</text>
<text text-anchor="middle" x="360" y="-1957.6035" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-1942.2035" font-family="Inconsolata" font-size="14.00" fill="#000000">local letter = L.R( &quot;az&quot;, &quot;AZ&quot; ) + L.P&quot;_&quot;</text>
<text text-anchor="middle" x="360" y="-1926.8034" font-family="Inconsolata" font-size="14.00" fill="#000000">local digit = L.R&quot;09&quot;</text>
<text text-anchor="middle" x="360" y="-1911.4034" font-family="Inconsolata" font-size="14.00" fill="#000000">local ID = L.C( letter * (letter+digit)^0 )</text>
<text text-anchor="middle" x="360" y="-1896.0034" font-family="Inconsolata" font-size="14.00" fill="#000000">local function W( s )</text>
<text text-anchor="middle" x="360" y="-1880.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return L.P( s ) * &#45;(letter+digit)</text>
<text text-anchor="middle" x="360" y="-1865.2033" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-1849.8033" font-family="Inconsolata" font-size="14.00" fill="#000000">local WS = L.S&quot; \r\n\t\f\v&quot;</text>
<text text-anchor="middle" x="360" y="-1802.4032" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; setup an environment where you can easily define lpeg grammars</text>
<text text-anchor="middle" x="360" y="-1787.0032" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; with lots of syntax sugar</text>
<text text-anchor="middle" x="360" y="-1771.6032" font-family="Inconsolata" font-size="14.00" fill="#000000">function epnf.define( func, g, e )</text>
<text text-anchor="middle" x="360" y="-1756.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;g = g or {}</text>
<text text-anchor="middle" x="360" y="-1740.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if e == nil then</text>
<text text-anchor="middle" x="360" y="-1725.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;e = V == &quot; 5.1&quot; and getfenv( func ) or _G</text>
<text text-anchor="middle" x="360" y="-1710.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-1694.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local suppressed = {}</text>
<text text-anchor="middle" x="360" y="-1679.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local env = {}</text>
<text text-anchor="middle" x="360" y="-1663.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local env_index = {</text>
<text text-anchor="middle" x="360" y="-1648.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;START = function( name ) g[ 1 ] = name end,</text>
<text text-anchor="middle" x="360" y="-1633.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;SUPPRESS = function( ... )</text>
<text text-anchor="middle" x="360" y="-1617.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;suppressed = {}</text>
<text text-anchor="middle" x="360" y="-1602.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for i = 1, select( &#39;#&#39;, ... ) do</text>
<text text-anchor="middle" x="360" y="-1586.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;suppressed[ select( i, ... ) ] = true</text>
<text text-anchor="middle" x="360" y="-1571.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-1556.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end,</text>
<text text-anchor="middle" x="360" y="-1540.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;E = E,</text>
<text text-anchor="middle" x="360" y="-1525.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;EOF = EOF,</text>
<text text-anchor="middle" x="360" y="-1509.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;ID = ID,</text>
<text text-anchor="middle" x="360" y="-1494.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;W = W,</text>
<text text-anchor="middle" x="360" y="-1479.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;WS = WS,</text>
<text text-anchor="middle" x="360" y="-1463.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;}</text>
<text text-anchor="middle" x="360" y="-1448.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; copy lpeg shortcuts</text>
<text text-anchor="middle" x="360" y="-1432.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for k,v in pairs( L ) do</text>
<text text-anchor="middle" x="360" y="-1417.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if string.match( k, &quot;^%u%w*$&quot; ) then</text>
<text text-anchor="middle" x="360" y="-1402.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;env_index[ k ] = v</text>
<text text-anchor="middle" x="360" y="-1386.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-1371.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-1355.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable( env_index, { __index = e } )</text>
<text text-anchor="middle" x="360" y="-1340.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable( env, {</text>
<text text-anchor="middle" x="360" y="-1325.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;__index = env_index,</text>
<text text-anchor="middle" x="360" y="-1309.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;__newindex = function( _, name, val )</text>
<text text-anchor="middle" x="360" y="-1294.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if suppressed[ name ] then</text>
<text text-anchor="middle" x="360" y="-1278.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;g[ name ] = val</text>
<text text-anchor="middle" x="360" y="-1263.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="360" y="-1248.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;g[ name ] = (L.Cc( name ) </text>
<text text-anchor="middle" x="360" y="-1232.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* L_Cp </text>
<text text-anchor="middle" x="360" y="-1217.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* L.Ct( val )</text>
<text text-anchor="middle" x="360" y="-1201.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* L_Cp</text>
<text text-anchor="middle" x="360" y="-1186.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* L.Carg(1)) / make_ast_node</text>
<text text-anchor="middle" x="360" y="-1171.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-1155.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-1140.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;} )</text>
<text text-anchor="middle" x="360" y="-1124.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; call passed function with custom environment (5.1&#45; and 5.2&#45;style)</text>
<text text-anchor="middle" x="360" y="-1109.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if V == &quot; 5.1&quot; then</text>
<text text-anchor="middle" x="360" y="-1094.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;setfenv( func, env )</text>
<text text-anchor="middle" x="360" y="-1078.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-1063.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;func( env )</text>
<text text-anchor="middle" x="360" y="-1047.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert( g[ 1 ] and g[ g[ 1 ] ], &quot;no start rule defined&quot; )</text>
<text text-anchor="middle" x="360" y="-1032.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return g</text>
<text text-anchor="middle" x="360" y="-1017.0017" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-969.6016" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; apply a given grammar to a string and return the ast. also allows</text>
<text text-anchor="middle" x="360" y="-954.2016" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; to set the name of the string for error messages</text>
<text text-anchor="middle" x="360" y="-938.8016" font-family="Inconsolata" font-size="14.00" fill="#000000">function epnf.parse( g, name, input, ... )</text>
<text text-anchor="middle" x="360" y="-923.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return L.match( L.P( g ), input, 1, name, ... ), name, input</text>
<text text-anchor="middle" x="360" y="-908.0015" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-860.6015" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; apply a given grammar to the contents of a file and return the ast</text>
<text text-anchor="middle" x="360" y="-845.2014" font-family="Inconsolata" font-size="14.00" fill="#000000">function epnf.parsefile( g, fname, ... )</text>
<text text-anchor="middle" x="360" y="-829.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local f = assert( io.open( fname, &quot;r&quot; ) )</text>
<text text-anchor="middle" x="360" y="-814.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local a,n,i = epnf.parse( g, fname, assert( f:read&quot;*a&quot; ), ... )</text>
<text text-anchor="middle" x="360" y="-799.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;f:close()</text>
<text text-anchor="middle" x="360" y="-783.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return a,n,i</text>
<text text-anchor="middle" x="360" y="-768.2013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-720.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; apply a given grammar to a string and return the ast. automatically</text>
<text text-anchor="middle" x="360" y="-705.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; picks a sensible name for error messages</text>
<text text-anchor="middle" x="360" y="-690.0012" font-family="Inconsolata" font-size="14.00" fill="#000000">function epnf.parsestring( g, str, ... )</text>
<text text-anchor="middle" x="360" y="-674.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local s = string.sub( str, 1, 20 )</text>
<text text-anchor="middle" x="360" y="-659.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if #s &lt; #str then s = s .. &quot;...&quot; end</text>
<text text-anchor="middle" x="360" y="-643.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local name = &quot;[\&quot;&quot; .. string.gsub( s, &quot;\n&quot;, &quot;\\n&quot; ) .. &quot;\&quot;]&quot;</text>
<text text-anchor="middle" x="360" y="-628.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return epnf.parse( g, name, str, ... )</text>
<text text-anchor="middle" x="360" y="-613.001" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-565.601" font-family="Inconsolata" font-size="14.00" fill="#000000">local function write( ... ) return io.stderr:write( ... ) end</text>
<text text-anchor="middle" x="360" y="-550.201" font-family="Inconsolata" font-size="14.00" fill="#000000">local function dump_ast( node, prefix )</text>
<text text-anchor="middle" x="360" y="-534.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if type( node ) == &quot;table&quot; then</text>
<text text-anchor="middle" x="360" y="-519.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;write( &quot;{&quot; )</text>
<text text-anchor="middle" x="360" y="-504.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if next( node ) ~= nil then</text>
<text text-anchor="middle" x="360" y="-488.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;write( &quot;\n&quot; )</text>
<text text-anchor="middle" x="360" y="-473.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if type( node.id ) == &quot;string&quot; and</text>
<text text-anchor="middle" x="360" y="-457.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;type( node.pos ) == &quot;number&quot; then</text>
<text text-anchor="middle" x="360" y="-442.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;write( prefix, &quot; &#160;id = &quot;, node.id,</text>
<text text-anchor="middle" x="360" y="-427.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;, &#160;pos = &quot;, tostring( node.pos ), &quot;\n&quot; )</text>
<text text-anchor="middle" x="360" y="-411.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-396.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;for k,v in pairs( node ) do</text>
<text text-anchor="middle" x="360" y="-380.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if k ~= &quot;id&quot; and k ~= &quot;pos&quot; then</text>
<text text-anchor="middle" x="360" y="-365.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write( prefix, &quot; &#160;&quot;, tostring( k ), &quot; = &quot; )</text>
<text text-anchor="middle" x="360" y="-350.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dump_ast( v, prefix..&quot; &#160;&quot; )</text>
<text text-anchor="middle" x="360" y="-334.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-319.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-303.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="360" y="-288.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;write( prefix, &quot;}\n&quot; )</text>
<text text-anchor="middle" x="360" y="-273.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="360" y="-257.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;write( tostring( node ), &quot;\n&quot; )</text>
<text text-anchor="middle" x="360" y="-242.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="360" y="-226.8003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-195.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; write a string representation of the given ast to stderr for</text>
<text text-anchor="middle" x="360" y="-180.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; debugging</text>
<text text-anchor="middle" x="360" y="-164.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">function epnf.dumpast( node )</text>
<text text-anchor="middle" x="360" y="-149.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return dump_ast( node, &quot;&quot; )</text>
<text text-anchor="middle" x="360" y="-133.8002" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="360" y="-86.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; export a function for reporting errors during ast validation</text>
<text text-anchor="middle" x="360" y="-71.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">epnf.raise = raise_error</text>
<text text-anchor="middle" x="360" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; return module table</text>
<text text-anchor="middle" x="360" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">return epnf</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_6 -->
<g id="edge6" class="edge">
<title>codeblock_4&#45;&gt;leaf_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M317.4326,-3527.5008C317.5957,-3520.6731 317.803,-3511.9978 318.0509,-3501.6177"/>
<polygon fill="#000000" stroke="#000000" points="321.5501,-3501.6906 318.2901,-3491.6098 314.5521,-3501.5233 321.5501,-3501.6906"/>
</g>
</g>
</svg>