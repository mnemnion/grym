digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 99"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-75"]


section_1 -> { header_2 prose_3 section_4 section_5 section_6 section_7}
{rank=same; header_2 prose_3 section_4 section_5 section_6 section_7}

header_2 [label="1 : Spec"]

prose_3 [label="prose"]

section_4 [label="section: 6-26"]

section_5 [label="section: 27-67"]

section_6 [label="section: 68-75"]

section_7 [label="section: 76-99"]


header_2 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Spec"]
prose_3 -> { raw_9}
{rank=same; raw_9}

raw_9 [label="raw"]


raw_9 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  A small test harness to exercise our fresh Node class.
"]
section_4 -> { header_11 prose_12 codeblock_13 codeblock_14}
{rank=same; header_11 prose_12 codeblock_13 codeblock_14}

header_11 [label="3 : includes"]

prose_12 [label="prose"]

codeblock_13 [label="code block 8-21"]

codeblock_14 [label="code block 23-25"]


header_11 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** includes"]
prose_12 -> { raw_16}
{rank=same; raw_16}

raw_16 [label="raw"]


raw_16 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_13 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local u = require \"util\"
local m = require \"grym/morphemes\"

local Grammar = require \"node/grammar\"
local Node = require \"node/node\"
local pnf = require \"node/define\"
local L = require \"lpeg\"
local P = L.P
local V = L.V
local C = L.C

"]
codeblock_14 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Spec = {}"]
section_5 -> { header_20 prose_21 prose_22 codeblock_23}
{rank=same; header_20 prose_21 prose_22 codeblock_23}

header_20 [label="2 : Trivial Grammar"]

prose_21 [label="prose"]

prose_22 [label="prose"]

codeblock_23 [label="code block 33-66"]


header_20 -> leaf_24
leaf_24  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** Trivial Grammar"]
prose_21 -> { raw_25}
{rank=same; raw_25}

raw_25 [label="raw"]


raw_25 -> leaf_26
leaf_26  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This should succeed under all circumstances.
"]
prose_22 -> { raw_27}
{rank=same; raw_27}

raw_27 [label="raw"]


raw_27 -> leaf_28
leaf_28  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I'd have to guess what it will return currently. 
"]
codeblock_23 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function epsilon(_ENV)
  START \"any\"
  any = V\"anything\" + V\"other\"
  anything = P(1)
  other = P(1)^1
end 

local function a(_ENV)
  START \"A\"
  A = P\"a\" + P\"A\"
end

local function ab(_ENV)
  START \"AB\"
  AB = V\"B\" + V\"A\"  
  A = P\"a\" + P\"A\"
  B = V\"bmatch\" + (V\"A\" * V\"bmatch\")
  bmatch = P\"b\" + P\"B\"
end

local function clu_gm(_ENV)
  local WS = P(m._ + m.NL)^0
  START \"clu\"
  SUPPRESS \"form\"
  clu = V\"form\"^1
  form = (V\"number\" * WS)
       + (V\"atom\" * WS) 
       + (V\"expr\" * WS)
  expr = m.pal * WS * V\"form\"^0 * WS * m.par
  atom = m.symbol
  number = m.number
end"]
section_6 -> { header_30 prose_31 codeblock_32}
{rank=same; header_30 prose_31 codeblock_32}

header_30 [label="2 : Easy mode"]

prose_31 [label="prose"]

codeblock_32 [label="code block 70-74"]


header_30 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="pec.trivial ="]
prose_31 -> { raw_34}
{rank=same; raw_34}

raw_34 [label="raw"]


raw_34 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_32 -> leaf_36
leaf_36  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Spec.trivial = Grammar(epsilon)
Spec.a = Grammar(a)
Spec.clu = Grammar(clu_gm)"]
section_7 -> { header_37 prose_38 codeblock_39 codeblock_40 codeblock_41}
{rank=same; header_37 prose_38 codeblock_39 codeblock_40 codeblock_41}

header_37 [label="2 : With metas"]

prose_38 [label="prose"]

codeblock_39 [label="code block 78-91"]

codeblock_40 [label="code block 93-95"]

codeblock_41 [label="code block 97-99"]


header_37 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
local metas ="]
prose_38 -> { raw_43}
{rank=same; raw_43}

raw_43 [label="raw"]


raw_43 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_39 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
local metas = {}

local AMt, amt = u.inherit(Node)

local function Anew(A, t, str)
  local a = setmetatable(t, AMt)
  a.id = \"A\"  
  return a
end

metas[\"A\"] = u.export(amt, Anew)"]
codeblock_40 -> leaf_46
leaf_46  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Spec.ab = Grammar(ab, metas)"]
codeblock_41 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="return Spec"]

}
