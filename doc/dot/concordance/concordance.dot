digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 247"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-14"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 prose_5 section_6}
{rank=same; header_2 prose_3 prose_4 prose_5 section_6}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

prose_4 [label="prose"]

prose_5 [label="prose"]

section_6 [label="section: 15-245"]


// END RANK section_1

header_2 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}
{rank=same; raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}

raw_8 [label="raw"]

prespace_9 [label="prespace"]

bold_10 [label="bold"]

raw_11 [label="raw"]

prespace_12 [label="prespace"]

literal_13 [label="literal"]

raw_14 [label="raw"]


// END RANK prose_3

raw_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_8

prespace_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_9

bold_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_10

raw_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_11

prespace_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_12

literal_13 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_13

raw_14 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_14

prose_4 -> { raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}
{rank=same; raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}

raw_22 [label="raw"]

prespace_23 [label="prespace"]

literal_24 [label="literal"]

raw_25 [label="raw"]

prespace_26 [label="prespace"]

literal_27 [label="literal"]

raw_28 [label="raw"]


// END RANK prose_4

raw_22 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This describes two distinct"]
// END RANK raw_22

prespace_23 -> leaf_30
leaf_30  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_23

literal_24 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="SQLite"]
// END RANK literal_24

raw_25 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" databases, one held in common throughout"]
// END RANK raw_25

prespace_26 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_26

literal_27 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
// END RANK literal_27

raw_28 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and another which is personal and depends on the documents on the
computer in question.
"]
// END RANK raw_28

prose_5 -> { raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}
{rank=same; raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}

raw_36 [label="raw"]

prespace_37 [label="prespace"]

literal_38 [label="literal"]

raw_39 [label="raw"]

prespace_40 [label="prespace"]

literal_41 [label="literal"]

raw_42 [label="raw"]

prespace_43 [label="prespace"]

literal_44 [label="literal"]

raw_45 [label="raw"]

prespace_46 [label="prespace"]

literal_47 [label="literal"]

raw_48 [label="raw"]


// END RANK prose_5

raw_36 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are merged and queried in common, so the schema are interleaved.  The
basic distinction is that"]
// END RANK raw_36

prespace_37 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_37

literal_38 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table"]
// END RANK literal_38

raw_39 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_39

prespace_40 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_40

literal_41 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.cyclopedia"]
// END RANK literal_41

raw_42 -> leaf_55
leaf_55  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", and"]
// END RANK raw_42

prespace_43 -> leaf_56
leaf_56  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_43

literal_44 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table_in"]
// END RANK literal_44

raw_45 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
is in"]
// END RANK raw_45

prespace_46 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_46

literal_47 -> leaf_60
leaf_60  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.concordance"]
// END RANK literal_47

raw_48 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".

"]
// END RANK raw_48

section_6 -> { header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}
{rank=same; header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}

header_62 [label="2 : SQL for concordance"]

prose_63 [label="prose"]

prose_64 [label="prose"]

section_65 [label="section: 24-73"]

section_66 [label="section: 74-118"]

section_67 [label="section: 119-159"]

section_68 [label="section: 160-210"]

section_69 [label="section: 211-218"]

section_70 [label="section: 219-224"]

section_71 [label="section: 225-231"]

section_72 [label="section: 232-233"]

section_73 [label="section: 234-235"]

section_74 [label="section: 236-238"]

section_75 [label="section: 239-241"]

section_76 [label="section: 242-243"]

section_77 [label="section: 244-245"]

section_78 [label="section: 246-247"]


// END RANK section_6

header_62 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_62

prose_63 -> { raw_80 prespace_81 literal_82 raw_83}
{rank=same; raw_80 prespace_81 literal_82 raw_83}

raw_80 [label="raw"]

prespace_81 [label="prespace"]

literal_82 [label="literal"]

raw_83 [label="raw"]


// END RANK prose_63

raw_80 -> leaf_84
leaf_84  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_80

prespace_81 -> leaf_85
leaf_85  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_81

literal_82 -> leaf_86
leaf_86  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_82

raw_83 -> leaf_87
leaf_87  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_83

prose_64 -> { raw_88}
{rank=same; raw_88}

raw_88 [label="raw"]


// END RANK prose_64

raw_88 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[~/concordance/concordance]] is found at [[sql-strip.lua]
[~~/etc/sql-strip.lua]].
"]
// END RANK raw_88

section_65 -> { header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100 prose_101}
{rank=same; header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100 prose_101}

header_90 [label="3 : codepoint"]

prose_91 [label="prose"]

prose_92 [label="prose"]

prose_93 [label="prose"]

codeblock_94 [label="code block 35-46"]

prose_95 [label="prose"]

prose_96 [label="prose"]

prose_97 [label="prose"]

prose_98 [label="prose"]

prose_99 [label="prose"]

prose_100 [label="prose"]

prose_101 [label="prose"]


// END RANK section_65

header_90 -> leaf_102
leaf_102  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_90

prose_91 -> { raw_103 prespace_104 literal_105 raw_106 prespace_107 literal_108 raw_109}
{rank=same; raw_103 prespace_104 literal_105 raw_106 prespace_107 literal_108 raw_109}

raw_103 [label="raw"]

prespace_104 [label="prespace"]

literal_105 [label="literal"]

raw_106 [label="raw"]

prespace_107 [label="prespace"]

literal_108 [label="literal"]

raw_109 [label="raw"]


// END RANK prose_91

raw_103 -> leaf_110
leaf_110  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_103

prespace_104 -> leaf_111
leaf_111  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_104

literal_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_105

raw_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_106

prespace_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_107

literal_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_108

raw_109 -> leaf_116
leaf_116  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_109

prose_92 -> { raw_117}
{rank=same; raw_117}

raw_117 [label="raw"]


// END RANK prose_92

raw_117 -> leaf_118
leaf_118  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_117

prose_93 -> { raw_119 prespace_120 literal_121 raw_122 prespace_123 literal_124 raw_125 prespace_126 literal_127 raw_128}
{rank=same; raw_119 prespace_120 literal_121 raw_122 prespace_123 literal_124 raw_125 prespace_126 literal_127 raw_128}

raw_119 [label="raw"]

prespace_120 [label="prespace"]

literal_121 [label="literal"]

raw_122 [label="raw"]

prespace_123 [label="prespace"]

literal_124 [label="literal"]

raw_125 [label="raw"]

prespace_126 [label="prespace"]

literal_127 [label="literal"]

raw_128 [label="raw"]


// END RANK prose_93

raw_119 -> leaf_129
leaf_129  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_119

prespace_120 -> leaf_130
leaf_130  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_120

literal_121 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_121

raw_122 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_122

prespace_123 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_123

literal_124 -> leaf_134
leaf_134  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_124

raw_125 -> leaf_135
leaf_135  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_125

prespace_126 -> leaf_136
leaf_136  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_126

literal_127 -> leaf_137
leaf_137  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_127

raw_128 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_128

codeblock_94 -> leaf_139
leaf_139  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING NOT NULL DEFAULT 'official',
   destription STRING NOT NULL,
);
]]"]
// END RANK codeblock_94

prose_95 -> { raw_140}
{rank=same; raw_140}

raw_140 [label="raw"]


// END RANK prose_95

raw_140 -> leaf_141
leaf_141  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_140

prose_96 -> { raw_142 prespace_143 literal_144 raw_145 prespace_146 literal_147 raw_148}
{rank=same; raw_142 prespace_143 literal_144 raw_145 prespace_146 literal_147 raw_148}

raw_142 [label="raw"]

prespace_143 [label="prespace"]

literal_144 [label="literal"]

raw_145 [label="raw"]

prespace_146 [label="prespace"]

literal_147 [label="literal"]

raw_148 [label="raw"]


// END RANK prose_96

raw_142 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_142

prespace_143 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_143

literal_144 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_144

raw_145 -> leaf_152
leaf_152  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_145

prespace_146 -> leaf_153
leaf_153  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_146

literal_147 -> leaf_154
leaf_154  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_147

raw_148 -> leaf_155
leaf_155  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_148

prose_97 -> { raw_156}
{rank=same; raw_156}

raw_156 [label="raw"]


// END RANK prose_97

raw_156 -> leaf_157
leaf_157  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_156

prose_98 -> { raw_158 prespace_159 literal_160 raw_161}
{rank=same; raw_158 prespace_159 literal_160 raw_161}

raw_158 [label="raw"]

prespace_159 [label="prespace"]

literal_160 [label="literal"]

raw_161 [label="raw"]


// END RANK prose_98

raw_158 -> leaf_162
leaf_162  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_158

prespace_159 -> leaf_163
leaf_163  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_159

literal_160 -> leaf_164
leaf_164  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_160

raw_161 -> leaf_165
leaf_165  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_161

prose_99 -> { raw_166 prespace_167 literal_168 raw_169}
{rank=same; raw_166 prespace_167 literal_168 raw_169}

raw_166 [label="raw"]

prespace_167 [label="prespace"]

literal_168 [label="literal"]

raw_169 [label="raw"]


// END RANK prose_99

raw_166 -> leaf_170
leaf_170  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_166

prespace_167 -> leaf_171
leaf_171  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_167

literal_168 -> leaf_172
leaf_172  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_168

raw_169 -> leaf_173
leaf_173  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_169

prose_100 -> { raw_174}
{rank=same; raw_174}

raw_174 [label="raw"]


// END RANK prose_100

raw_174 -> leaf_175
leaf_175  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - version      :  Some schema come with versions, many do not. Example, the
                     code for 'a' in ASCII/utf will never change, so that
                     version is 'official'.
"]
// END RANK raw_174

prose_101 -> { raw_176 prespace_177 literal_178 raw_179 prespace_180 literal_181 raw_182}
{rank=same; raw_176 prespace_177 literal_178 raw_179 prespace_180 literal_181 raw_182}

raw_176 [label="raw"]

prespace_177 [label="prespace"]

literal_178 [label="literal"]

raw_179 [label="raw"]

prespace_180 [label="prespace"]

literal_181 [label="literal"]

raw_182 [label="raw"]


// END RANK prose_101

raw_176 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_176

prespace_177 -> leaf_184
leaf_184  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_177

literal_178 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_178

raw_179 -> leaf_186
leaf_186  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E». ¶
                     Note the use of double guillemets: «»,
                     they are required. ¶
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_179

prespace_180 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_180

literal_181 -> leaf_188
leaf_188  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_181

raw_182 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".¶
"]
// END RANK raw_182

section_66 -> { header_190 prose_191 codeblock_192 prose_193 prose_194 prose_195 prose_196 prose_197 prose_198 prose_199 prose_200 prose_201}
{rank=same; header_190 prose_191 codeblock_192 prose_193 prose_194 prose_195 prose_196 prose_197 prose_198 prose_199 prose_200 prose_201}

header_190 [label="3 : codepoint_in"]

prose_191 [label="prose"]

codeblock_192 [label="code block 79-98"]

prose_193 [label="prose"]

prose_194 [label="prose"]

prose_195 [label="prose"]

prose_196 [label="prose"]

prose_197 [label="prose"]

prose_198 [label="prose"]

prose_199 [label="prose"]

prose_200 [label="prose"]

prose_201 [label="prose"]


// END RANK section_66

header_190 -> leaf_202
leaf_202  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_190

prose_191 -> { raw_203 prespace_204 literal_205 raw_206}
{rank=same; raw_203 prespace_204 literal_205 raw_206}

raw_203 [label="raw"]

prespace_204 [label="prespace"]

literal_205 [label="literal"]

raw_206 [label="raw"]


// END RANK prose_191

raw_203 -> leaf_207
leaf_207  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_203

prespace_204 -> leaf_208
leaf_208  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_204

literal_205 -> leaf_209
leaf_209  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_205

raw_206 -> leaf_210
leaf_210  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_206

codeblock_192 -> leaf_211
leaf_211  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   codepoint INTEGER NOT NULL,
   doc INTEGER NOT NULL,
   document INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_192

prose_193 -> { raw_212}
{rank=same; raw_212}

raw_212 [label="raw"]


// END RANK prose_193

raw_212 -> leaf_213
leaf_213  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_212

prose_194 -> { raw_214}
{rank=same; raw_214}

raw_214 [label="raw"]


// END RANK prose_194

raw_214 -> leaf_215
leaf_215  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_214

prose_195 -> { raw_216}
{rank=same; raw_216}

raw_216 [label="raw"]


// END RANK prose_195

raw_216 -> leaf_217
leaf_217  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_216

prose_196 -> { raw_218}
{rank=same; raw_218}

raw_218 [label="raw"]


// END RANK prose_196

raw_218 -> leaf_219
leaf_219  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_218

prose_197 -> { raw_220}
{rank=same; raw_220}

raw_220 [label="raw"]


// END RANK prose_197

raw_220 -> leaf_221
leaf_221  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_220

prose_198 -> { raw_222}
{rank=same; raw_222}

raw_222 [label="raw"]


// END RANK prose_198

raw_222 -> leaf_223
leaf_223  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_222

prose_199 -> { raw_224}
{rank=same; raw_224}

raw_224 [label="raw"]


// END RANK prose_199

raw_224 -> leaf_225
leaf_225  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  Foreign key to the codepoint entry.
"]
// END RANK raw_224

prose_200 -> { raw_226}
{rank=same; raw_226}

raw_226 [label="raw"]


// END RANK prose_200

raw_226 -> leaf_227
leaf_227  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_226

prose_201 -> { raw_228}
{rank=same; raw_228}

raw_228 [label="raw"]


// END RANK prose_201

raw_228 -> leaf_229
leaf_229  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.
"]
// END RANK raw_228

section_67 -> { header_230 prose_231 prose_232 codeblock_233 prose_234 prose_235 prose_236 prose_237 prose_238}
{rank=same; header_230 prose_231 prose_232 codeblock_233 prose_234 prose_235 prose_236 prose_237 prose_238}

header_230 [label="3 : word"]

prose_231 [label="prose"]

prose_232 [label="prose"]

codeblock_233 [label="code block 128-140"]

prose_234 [label="prose"]

prose_235 [label="prose"]

prose_236 [label="prose"]

prose_237 [label="prose"]

prose_238 [label="prose"]


// END RANK section_67

header_230 -> leaf_239
leaf_239  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_230

prose_231 -> { raw_240 prespace_241 literal_242 raw_243}
{rank=same; raw_240 prespace_241 literal_242 raw_243}

raw_240 [label="raw"]

prespace_241 [label="prespace"]

literal_242 [label="literal"]

raw_243 [label="raw"]


// END RANK prose_231

raw_240 -> leaf_244
leaf_244  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

A"]
// END RANK raw_240

prespace_241 -> leaf_245
leaf_245  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_241

literal_242 -> leaf_246
leaf_246  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_242

raw_243 -> leaf_247
leaf_247  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is what is says, an entry for a single word.
"]
// END RANK raw_243

prose_232 -> { raw_248}
{rank=same; raw_248}

raw_248 [label="raw"]


// END RANK prose_232

raw_248 -> leaf_249
leaf_249  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that this concept is very much differently defined for different
languages, but it's coherent and modular enough to work with them smoothly,
granting that the name itself will be inaccurate when considering, say,
Semitic roots.
"]
// END RANK raw_248

codeblock_233 -> leaf_250
leaf_250  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word STRING UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling BLOB NOT NULL ON CONFLICT DO NOTHING,
   thesaurus INTEGER,
   FOREIGN KEY thesaurus
      REFERENCES thesaurus (thesaurus_id)
);
]]"]
// END RANK codeblock_233

prose_234 -> { raw_251}
{rank=same; raw_251}

raw_251 [label="raw"]


// END RANK prose_234

raw_251 -> leaf_252
leaf_252  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_251

prose_235 -> { raw_253 prespace_254 bold_255 raw_256}
{rank=same; raw_253 prespace_254 bold_255 raw_256}

raw_253 [label="raw"]

prespace_254 [label="prespace"]

bold_255 [label="bold"]

raw_256 [label="raw"]


// END RANK prose_235

raw_253 -> leaf_257
leaf_257  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word : A"]
// END RANK raw_253

prespace_254 -> leaf_258
leaf_258  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_254

bold_255 -> leaf_259
leaf_259  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_255

raw_256 -> leaf_260
leaf_260  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
"]
// END RANK raw_256

prose_236 -> { raw_261}
{rank=same; raw_261}

raw_261 [label="raw"]


// END RANK prose_236

raw_261 -> leaf_262
leaf_262  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - spelling : JSON array of the numeric codepoints specifying the spelling.
"]
// END RANK raw_261

prose_237 -> { raw_263}
{rank=same; raw_263}

raw_263 [label="raw"]


// END RANK prose_237

raw_263 -> leaf_264
leaf_264  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - thesaurus :  Key to a thesaurus entry for the word.
                  The thesaurus will have dictionary fields and is intended
                  for translation across languages as well as within them.
                  Basically a personal wiktionary.

"]
// END RANK raw_263

prose_238 -> { raw_265 prespace_266 literal_267 raw_268}
{rank=same; raw_265 prespace_266 literal_267 raw_268}

raw_265 [label="raw"]

prespace_266 [label="prespace"]

literal_267 [label="literal"]

raw_268 [label="raw"]


// END RANK prose_238

raw_265 -> leaf_269
leaf_269  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
word is fairly straightforward to populate as we go, although the exact
rules for what constitutes a word and what punctuation and whitespace vary
somewhat, the differences are well defined by the"]
// END RANK raw_265

prespace_266 -> leaf_270
leaf_270  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_266

literal_267 -> leaf_271
leaf_271  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_267

raw_268 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" standard, wo we merely
 aad new ones as we find them.

"]
// END RANK raw_268

section_68 -> { header_273 prose_274 codeblock_275 prose_276 prose_277 prose_278 prose_279 prose_280 prose_281 prose_282 prose_283 prose_284 prose_285}
{rank=same; header_273 prose_274 codeblock_275 prose_276 prose_277 prose_278 prose_279 prose_280 prose_281 prose_282 prose_283 prose_284 prose_285}

header_273 [label="3 : word_in"]

prose_274 [label="prose"]

codeblock_275 [label="code block 164-183"]

prose_276 [label="prose"]

prose_277 [label="prose"]

prose_278 [label="prose"]

prose_279 [label="prose"]

prose_280 [label="prose"]

prose_281 [label="prose"]

prose_282 [label="prose"]

prose_283 [label="prose"]

prose_284 [label="prose"]

prose_285 [label="prose"]


// END RANK section_68

header_273 -> leaf_286
leaf_286  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_273

prose_274 -> { raw_287 prespace_288 literal_289 raw_290}
{rank=same; raw_287 prespace_288 literal_289 raw_290}

raw_287 [label="raw"]

prespace_288 [label="prespace"]

literal_289 [label="literal"]

raw_290 [label="raw"]


// END RANK prose_274

raw_287 -> leaf_291
leaf_291  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Table representing a single word in a given"]
// END RANK raw_287

prespace_288 -> leaf_292
leaf_292  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_288

literal_289 -> leaf_293
leaf_293  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_289

raw_290 -> leaf_294
leaf_294  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_290

codeblock_275 -> leaf_295
leaf_295  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word_repr STRING NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   word INTEGER,
   doc INTEGER,
   document INTEGER,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREIGN KEY doc
      REFERENCE doc (doc_id)
   FOREIGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_275

prose_276 -> { raw_296}
{rank=same; raw_296}

raw_296 [label="raw"]


// END RANK prose_276

raw_296 -> leaf_297
leaf_297  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_296

prose_277 -> { raw_298 prespace_299 bold_300 raw_301}
{rank=same; raw_298 prespace_299 bold_300 raw_301}

raw_298 [label="raw"]

prespace_299 [label="prespace"]

bold_300 [label="bold"]

raw_301 [label="raw"]


// END RANK prose_277

raw_298 -> leaf_302
leaf_302  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word_repr :  A"]
// END RANK raw_298

prespace_299 -> leaf_303
leaf_303  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_299

bold_300 -> leaf_304
leaf_304  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_300

raw_301 -> leaf_305
leaf_305  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
                  Important because we don't consider zebra and zebras two
                  different words.
"]
// END RANK raw_301

prose_278 -> { raw_306}
{rank=same; raw_306}

raw_306 [label="raw"]


// END RANK prose_278

raw_306 -> leaf_307
leaf_307  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_306

prose_279 -> { raw_308}
{rank=same; raw_308}

raw_308 [label="raw"]


// END RANK prose_279

raw_308 -> leaf_309
leaf_309  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_308

prose_280 -> { raw_310}
{rank=same; raw_310}

raw_310 [label="raw"]


// END RANK prose_280

raw_310 -> leaf_311
leaf_311  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_310

prose_281 -> { raw_312}
{rank=same; raw_312}

raw_312 [label="raw"]


// END RANK prose_281

raw_312 -> leaf_313
leaf_313  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_312

prose_282 -> { raw_314}
{rank=same; raw_314}

raw_314 [label="raw"]


// END RANK prose_282

raw_314 -> leaf_315
leaf_315  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word      :  Foreign key to the word entry.
"]
// END RANK raw_314

prose_283 -> { raw_316}
{rank=same; raw_316}

raw_316 [label="raw"]


// END RANK prose_283

raw_316 -> leaf_317
leaf_317  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_316

prose_284 -> { raw_318}
{rank=same; raw_318}

raw_318 [label="raw"]


// END RANK prose_284

raw_318 -> leaf_319
leaf_319  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.

"]
// END RANK raw_318

prose_285 -> { raw_320}
{rank=same; raw_320}

raw_320 [label="raw"]


// END RANK prose_285

raw_320 -> leaf_321
leaf_321  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This table should be deduplicated between editions of documents to save
storage space; adding one word should cause one line's worth of changes.

"]
// END RANK raw_320

section_69 -> { header_322 prose_323}
{rank=same; header_322 prose_323}

header_322 [label="3 : phrase"]

prose_323 [label="prose"]


// END RANK section_69

header_322 -> leaf_324
leaf_324  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_322

prose_323 -> { raw_325 prespace_326 literal_327 raw_328}
{rank=same; raw_325 prespace_326 literal_327 raw_328}

raw_325 [label="raw"]

prespace_326 [label="prespace"]

literal_327 [label="literal"]

raw_328 [label="raw"]


// END RANK prose_323

raw_325 -> leaf_329
leaf_329  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_325

prespace_326 -> leaf_330
leaf_330  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_326

literal_327 -> leaf_331
leaf_331  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_327

raw_328 -> leaf_332
leaf_332  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_328

section_70 -> { header_333 prose_334 prose_335}
{rank=same; header_333 prose_334 prose_335}

header_333 [label="3 : phrase_in"]

prose_334 [label="prose"]

prose_335 [label="prose"]


// END RANK section_70

header_333 -> leaf_336
leaf_336  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_333

prose_334 -> { raw_337}
{rank=same; raw_337}

raw_337 [label="raw"]


// END RANK prose_334

raw_337 -> leaf_338
leaf_338  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Lorem ipsum dolor sit amet.
"]
// END RANK raw_337

prose_335 -> { raw_339}
{rank=same; raw_339}

raw_339 [label="raw"]


// END RANK prose_335

raw_339 -> leaf_340
leaf_340  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Lorem ipsum dolor sit amet.
"]
// END RANK raw_339

section_71 -> { header_341 prose_342}
{rank=same; header_341 prose_342}

header_341 [label="3 : line"]

prose_342 [label="prose"]


// END RANK section_71

header_341 -> leaf_343
leaf_343  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_341

prose_342 -> { raw_344 prespace_345 literal_346 raw_347 prespace_348 literal_349 raw_350 prespace_351 literal_352 raw_353 prespace_354 literal_355 raw_356}
{rank=same; raw_344 prespace_345 literal_346 raw_347 prespace_348 literal_349 raw_350 prespace_351 literal_352 raw_353 prespace_354 literal_355 raw_356}

raw_344 [label="raw"]

prespace_345 [label="prespace"]

literal_346 [label="literal"]

raw_347 [label="raw"]

prespace_348 [label="prespace"]

literal_349 [label="literal"]

raw_350 [label="raw"]

prespace_351 [label="prespace"]

literal_352 [label="literal"]

raw_353 [label="raw"]

prespace_354 [label="prespace"]

literal_355 [label="literal"]

raw_356 [label="raw"]


// END RANK prose_342

raw_344 -> leaf_357
leaf_357  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Starting with"]
// END RANK raw_344

prespace_345 -> leaf_358
leaf_358  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_345

literal_346 -> leaf_359
leaf_359  [color=Gray,shape=rectangle,fontname=Inconsolata,label="line"]
// END RANK literal_346

raw_347 -> leaf_360
leaf_360  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" these are all part of a personal"]
// END RANK raw_347

prespace_348 -> leaf_361
leaf_361  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_348

literal_349 -> leaf_362
leaf_362  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.concordance"]
// END RANK literal_349

raw_350 -> leaf_363
leaf_363  [color=Gray,shape=rectangle,fontname=Inconsolata,label=",
except [[section][@#section]], which only uses the section header and can be
used to cross-reference any two sections with the same name, such as"]
// END RANK raw_350

prespace_351 -> leaf_364
leaf_364  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_351

literal_352 -> leaf_365
leaf_365  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Introduction"]
// END RANK literal_352

raw_353 -> leaf_366
leaf_366  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or"]
// END RANK raw_353

prespace_354 -> leaf_367
leaf_367  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_354

literal_355 -> leaf_368
leaf_368  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Rationale"]
// END RANK literal_355

raw_356 -> leaf_369
leaf_369  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_356

section_72 -> { header_370 prose_371}
{rank=same; header_370 prose_371}

header_370 [label="3 : line_in"]

prose_371 [label="prose"]


// END RANK section_72

header_370 -> leaf_372
leaf_372  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_370

prose_371 -> { raw_373}
{rank=same; raw_373}

raw_373 [label="raw"]


// END RANK prose_371

raw_373 -> leaf_374
leaf_374  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_373

section_73 -> { header_375 prose_376}
{rank=same; header_375 prose_376}

header_375 [label="3 : sentence"]

prose_376 [label="prose"]


// END RANK section_73

header_375 -> leaf_377
leaf_377  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_375

prose_376 -> { raw_378}
{rank=same; raw_378}

raw_378 [label="raw"]


// END RANK prose_376

raw_378 -> leaf_379
leaf_379  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_378

section_74 -> { header_380 prose_381}
{rank=same; header_380 prose_381}

header_380 [label="3 : sentence_in"]

prose_381 [label="prose"]


// END RANK section_74

header_380 -> leaf_382
leaf_382  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_380

prose_381 -> { raw_383}
{rank=same; raw_383}

raw_383 [label="raw"]


// END RANK prose_381

raw_383 -> leaf_384
leaf_384  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_383

section_75 -> { header_385 prose_386}
{rank=same; header_385 prose_386}

header_385 [label="3 : block"]

prose_386 [label="prose"]


// END RANK section_75

header_385 -> leaf_387
leaf_387  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_385

prose_386 -> { raw_388}
{rank=same; raw_388}

raw_388 [label="raw"]


// END RANK prose_386

raw_388 -> leaf_389
leaf_389  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_388

section_76 -> { header_390 prose_391}
{rank=same; header_390 prose_391}

header_390 [label="3 : block_in"]

prose_391 [label="prose"]


// END RANK section_76

header_390 -> leaf_392
leaf_392  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_390

prose_391 -> { raw_393}
{rank=same; raw_393}

raw_393 [label="raw"]


// END RANK prose_391

raw_393 -> leaf_394
leaf_394  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_393

section_77 -> { header_395 prose_396}
{rank=same; header_395 prose_396}

header_395 [label="3 : section"]

prose_396 [label="prose"]


// END RANK section_77

header_395 -> leaf_397
leaf_397  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_395

prose_396 -> { raw_398}
{rank=same; raw_398}

raw_398 [label="raw"]


// END RANK prose_396

raw_398 -> leaf_399
leaf_399  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_398

section_78 -> { header_400 prose_401}
{rank=same; header_400 prose_401}

header_400 [label="3 : section_in"]

prose_401 [label="prose"]


// END RANK section_78

header_400 -> leaf_402
leaf_402  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_400

prose_401 -> { raw_403}
{rank=same; raw_403}

raw_403 [label="raw"]


// END RANK prose_401

raw_403 -> leaf_404
leaf_404  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_403


}
