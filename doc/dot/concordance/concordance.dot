digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 233"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-5"]


// END RANK doc_0

section_1 -> { header_2 prose_3 section_4}
{rank=same; header_2 prose_3 section_4}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

section_4 [label="section: 6-231"]


// END RANK section_1

header_2 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}
{rank=same; raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}

raw_6 [label="raw"]

prespace_7 [label="prespace"]

bold_8 [label="bold"]

raw_9 [label="raw"]

prespace_10 [label="prespace"]

literal_11 [label="literal"]

raw_12 [label="raw"]


// END RANK prose_3

raw_6 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_6

prespace_7 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_7

bold_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_8

raw_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_9

prespace_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_10

literal_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_11

raw_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_12

section_4 -> { header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}
{rank=same; header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}

header_20 [label="2 : SQL for concordance"]

prose_21 [label="prose"]

prose_22 [label="prose"]

section_23 [label="section: 15-67"]

section_24 [label="section: 68-112"]

section_25 [label="section: 113-153"]

section_26 [label="section: 154-204"]

section_27 [label="section: 205-212"]

section_28 [label="section: 213-215"]

section_29 [label="section: 216-217"]

section_30 [label="section: 218-219"]

section_31 [label="section: 220-221"]

section_32 [label="section: 222-224"]

section_33 [label="section: 225-227"]

section_34 [label="section: 228-229"]

section_35 [label="section: 230-231"]

section_36 [label="section: 232-233"]


// END RANK section_4

header_20 -> leaf_37
leaf_37  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_20

prose_21 -> { raw_38 prespace_39 literal_40 raw_41}
{rank=same; raw_38 prespace_39 literal_40 raw_41}

raw_38 [label="raw"]

prespace_39 [label="prespace"]

literal_40 [label="literal"]

raw_41 [label="raw"]


// END RANK prose_21

raw_38 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_38

prespace_39 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_39

literal_40 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_40

raw_41 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_41

prose_22 -> { raw_46}
{rank=same; raw_46}

raw_46 [label="raw"]


// END RANK prose_22

raw_46 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[@concordance/concordance]] is found at [[sql-strip.lua]
[@/etc/sql-strip.lua]].
"]
// END RANK raw_46

section_23 -> { header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}
{rank=same; header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}

header_48 [label="3 : codepoint"]

prose_49 [label="prose"]

prose_50 [label="prose"]

prose_51 [label="prose"]

codeblock_52 [label="code block 26-39"]

prose_53 [label="prose"]

prose_54 [label="prose"]

prose_55 [label="prose"]

prose_56 [label="prose"]

prose_57 [label="prose"]

prose_58 [label="prose"]

prose_59 [label="prose"]

prose_60 [label="prose"]

prose_61 [label="prose"]


// END RANK section_23

header_48 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_48

prose_49 -> { raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}
{rank=same; raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}

raw_63 [label="raw"]

prespace_64 [label="prespace"]

literal_65 [label="literal"]

raw_66 [label="raw"]

prespace_67 [label="prespace"]

literal_68 [label="literal"]

raw_69 [label="raw"]


// END RANK prose_49

raw_63 -> leaf_70
leaf_70  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_63

prespace_64 -> leaf_71
leaf_71  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_64

literal_65 -> leaf_72
leaf_72  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_65

raw_66 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_66

prespace_67 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_67

literal_68 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_68

raw_69 -> leaf_76
leaf_76  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_69

prose_50 -> { raw_77}
{rank=same; raw_77}

raw_77 [label="raw"]


// END RANK prose_50

raw_77 -> leaf_78
leaf_78  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_77

prose_51 -> { raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}
{rank=same; raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}

raw_79 [label="raw"]

prespace_80 [label="prespace"]

literal_81 [label="literal"]

raw_82 [label="raw"]

prespace_83 [label="prespace"]

literal_84 [label="literal"]

raw_85 [label="raw"]

prespace_86 [label="prespace"]

literal_87 [label="literal"]

raw_88 [label="raw"]


// END RANK prose_51

raw_79 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_79

prespace_80 -> leaf_90
leaf_90  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_80

literal_81 -> leaf_91
leaf_91  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_81

raw_82 -> leaf_92
leaf_92  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_82

prespace_83 -> leaf_93
leaf_93  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_83

literal_84 -> leaf_94
leaf_94  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_84

raw_85 -> leaf_95
leaf_95  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_85

prespace_86 -> leaf_96
leaf_96  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_86

literal_87 -> leaf_97
leaf_97  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_87

raw_88 -> leaf_98
leaf_98  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_88

codeblock_52 -> leaf_99
leaf_99  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING UNIQUE NOT NULL,
   destription STRING NOT NULL,
   FOREIGN KEY version
      REFERENCES versin (version_ID)
);
]]"]
// END RANK codeblock_52

prose_53 -> { raw_100}
{rank=same; raw_100}

raw_100 [label="raw"]


// END RANK prose_53

raw_100 -> leaf_101
leaf_101  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_100

prose_54 -> { raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}
{rank=same; raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}

raw_102 [label="raw"]

prespace_103 [label="prespace"]

literal_104 [label="literal"]

raw_105 [label="raw"]

prespace_106 [label="prespace"]

literal_107 [label="literal"]

raw_108 [label="raw"]


// END RANK prose_54

raw_102 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_102

prespace_103 -> leaf_110
leaf_110  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_103

literal_104 -> leaf_111
leaf_111  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_104

raw_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_105

prespace_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_106

literal_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_107

raw_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_108

prose_55 -> { raw_116}
{rank=same; raw_116}

raw_116 [label="raw"]


// END RANK prose_55

raw_116 -> leaf_117
leaf_117  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_116

prose_56 -> { raw_118 prespace_119 literal_120 raw_121}
{rank=same; raw_118 prespace_119 literal_120 raw_121}

raw_118 [label="raw"]

prespace_119 [label="prespace"]

literal_120 [label="literal"]

raw_121 [label="raw"]


// END RANK prose_56

raw_118 -> leaf_122
leaf_122  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_118

prespace_119 -> leaf_123
leaf_123  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_119

literal_120 -> leaf_124
leaf_124  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_120

raw_121 -> leaf_125
leaf_125  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_121

prose_57 -> { raw_126 prespace_127 literal_128 raw_129}
{rank=same; raw_126 prespace_127 literal_128 raw_129}

raw_126 [label="raw"]

prespace_127 [label="prespace"]

literal_128 [label="literal"]

raw_129 [label="raw"]


// END RANK prose_57

raw_126 -> leaf_130
leaf_130  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_126

prespace_127 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_127

literal_128 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_128

raw_129 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_129

prose_58 -> { raw_134 prespace_135 literal_136 raw_137}
{rank=same; raw_134 prespace_135 literal_136 raw_137}

raw_134 [label="raw"]

prespace_135 [label="prespace"]

literal_136 [label="literal"]

raw_137 [label="raw"]


// END RANK prose_58

raw_134 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_134

prespace_135 -> leaf_139
leaf_139  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_135

literal_136 -> leaf_140
leaf_140  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_136

raw_137 -> leaf_141
leaf_141  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E».
"]
// END RANK raw_137

prose_59 -> { raw_142}
{rank=same; raw_142}

raw_142 [label="raw"]


// END RANK prose_59

raw_142 -> leaf_143
leaf_143  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Note the use of double guillemets: «», they are required.
"]
// END RANK raw_142

prose_60 -> { raw_144 prespace_145 literal_146 raw_147}
{rank=same; raw_144 prespace_145 literal_146 raw_147}

raw_144 [label="raw"]

prespace_145 [label="prespace"]

literal_146 [label="literal"]

raw_147 [label="raw"]


// END RANK prose_60

raw_144 -> leaf_148
leaf_148  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_144

prespace_145 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_145

literal_146 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_146

raw_147 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_147

prose_61 -> { raw_152 prespace_153 literal_154 raw_155}
{rank=same; raw_152 prespace_153 literal_154 raw_155}

raw_152 [label="raw"]

prespace_153 [label="prespace"]

literal_154 [label="literal"]

raw_155 [label="raw"]


// END RANK prose_61

raw_152 -> leaf_156
leaf_156  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - version      :  Foreign key to a"]
// END RANK raw_152

prespace_153 -> leaf_157
leaf_157  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_153

literal_154 -> leaf_158
leaf_158  [color=Gray,shape=rectangle,fontname=Inconsolata,label="version"]
// END RANK literal_154

raw_155 -> leaf_159
leaf_159  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" table. Not sure we actually
                     need this come to think of it.

"]
// END RANK raw_155

section_24 -> { header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169 prose_170 prose_171}
{rank=same; header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169 prose_170 prose_171}

header_160 [label="3 : codepoint_in"]

prose_161 [label="prose"]

codeblock_162 [label="code block 73-92"]

prose_163 [label="prose"]

prose_164 [label="prose"]

prose_165 [label="prose"]

prose_166 [label="prose"]

prose_167 [label="prose"]

prose_168 [label="prose"]

prose_169 [label="prose"]

prose_170 [label="prose"]

prose_171 [label="prose"]


// END RANK section_24

header_160 -> leaf_172
leaf_172  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_160

prose_161 -> { raw_173 prespace_174 literal_175 raw_176}
{rank=same; raw_173 prespace_174 literal_175 raw_176}

raw_173 [label="raw"]

prespace_174 [label="prespace"]

literal_175 [label="literal"]

raw_176 [label="raw"]


// END RANK prose_161

raw_173 -> leaf_177
leaf_177  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_173

prespace_174 -> leaf_178
leaf_178  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_174

literal_175 -> leaf_179
leaf_179  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_175

raw_176 -> leaf_180
leaf_180  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_176

codeblock_162 -> leaf_181
leaf_181  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   codepoint INTEGER NOT NULL,
   doc INTEGER NOT NULL,
   document INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_162

prose_163 -> { raw_182}
{rank=same; raw_182}

raw_182 [label="raw"]


// END RANK prose_163

raw_182 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_182

prose_164 -> { raw_184}
{rank=same; raw_184}

raw_184 [label="raw"]


// END RANK prose_164

raw_184 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_184

prose_165 -> { raw_186}
{rank=same; raw_186}

raw_186 [label="raw"]


// END RANK prose_165

raw_186 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_186

prose_166 -> { raw_188}
{rank=same; raw_188}

raw_188 [label="raw"]


// END RANK prose_166

raw_188 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_188

prose_167 -> { raw_190}
{rank=same; raw_190}

raw_190 [label="raw"]


// END RANK prose_167

raw_190 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_190

prose_168 -> { raw_192}
{rank=same; raw_192}

raw_192 [label="raw"]


// END RANK prose_168

raw_192 -> leaf_193
leaf_193  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_192

prose_169 -> { raw_194}
{rank=same; raw_194}

raw_194 [label="raw"]


// END RANK prose_169

raw_194 -> leaf_195
leaf_195  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  Foreign key to the codepoint entry.
"]
// END RANK raw_194

prose_170 -> { raw_196}
{rank=same; raw_196}

raw_196 [label="raw"]


// END RANK prose_170

raw_196 -> leaf_197
leaf_197  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_196

prose_171 -> { raw_198}
{rank=same; raw_198}

raw_198 [label="raw"]


// END RANK prose_171

raw_198 -> leaf_199
leaf_199  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.
"]
// END RANK raw_198

section_25 -> { header_200 prose_201 prose_202 codeblock_203 prose_204 prose_205 prose_206 prose_207 prose_208}
{rank=same; header_200 prose_201 prose_202 codeblock_203 prose_204 prose_205 prose_206 prose_207 prose_208}

header_200 [label="3 : word"]

prose_201 [label="prose"]

prose_202 [label="prose"]

codeblock_203 [label="code block 122-134"]

prose_204 [label="prose"]

prose_205 [label="prose"]

prose_206 [label="prose"]

prose_207 [label="prose"]

prose_208 [label="prose"]


// END RANK section_25

header_200 -> leaf_209
leaf_209  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_200

prose_201 -> { raw_210 prespace_211 literal_212 raw_213}
{rank=same; raw_210 prespace_211 literal_212 raw_213}

raw_210 [label="raw"]

prespace_211 [label="prespace"]

literal_212 [label="literal"]

raw_213 [label="raw"]


// END RANK prose_201

raw_210 -> leaf_214
leaf_214  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

A"]
// END RANK raw_210

prespace_211 -> leaf_215
leaf_215  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_211

literal_212 -> leaf_216
leaf_216  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_212

raw_213 -> leaf_217
leaf_217  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is what is says, an entry for a single word.
"]
// END RANK raw_213

prose_202 -> { raw_218}
{rank=same; raw_218}

raw_218 [label="raw"]


// END RANK prose_202

raw_218 -> leaf_219
leaf_219  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that this concept is very much differently defined for different
languages, but it's coherent and modular enough to work with them smoothly,
granting that the name itself will be inaccurate when considering, say,
Semitic roots.
"]
// END RANK raw_218

codeblock_203 -> leaf_220
leaf_220  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word STRING UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling BLOB NOT NULL ON CONFLICT DO NOTHING,
   thesaurus INTEGER,
   FOREIGN KEY thesaurus
      REFERENCES thesaurus (thesaurus_id)
);
]]"]
// END RANK codeblock_203

prose_204 -> { raw_221}
{rank=same; raw_221}

raw_221 [label="raw"]


// END RANK prose_204

raw_221 -> leaf_222
leaf_222  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_221

prose_205 -> { raw_223 prespace_224 bold_225 raw_226}
{rank=same; raw_223 prespace_224 bold_225 raw_226}

raw_223 [label="raw"]

prespace_224 [label="prespace"]

bold_225 [label="bold"]

raw_226 [label="raw"]


// END RANK prose_205

raw_223 -> leaf_227
leaf_227  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word : A"]
// END RANK raw_223

prespace_224 -> leaf_228
leaf_228  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_224

bold_225 -> leaf_229
leaf_229  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_225

raw_226 -> leaf_230
leaf_230  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
"]
// END RANK raw_226

prose_206 -> { raw_231}
{rank=same; raw_231}

raw_231 [label="raw"]


// END RANK prose_206

raw_231 -> leaf_232
leaf_232  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - spelling : JSON array of the numeric codepoints specifying the spelling.
"]
// END RANK raw_231

prose_207 -> { raw_233}
{rank=same; raw_233}

raw_233 [label="raw"]


// END RANK prose_207

raw_233 -> leaf_234
leaf_234  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - thesaurus :  Key to a thesaurus entry for the word.
                  The thesaurus will have dictionary fields and is intended
                  for translation across languages as well as within them.
                  Basically a personal wiktionary.

"]
// END RANK raw_233

prose_208 -> { raw_235 prespace_236 literal_237 raw_238}
{rank=same; raw_235 prespace_236 literal_237 raw_238}

raw_235 [label="raw"]

prespace_236 [label="prespace"]

literal_237 [label="literal"]

raw_238 [label="raw"]


// END RANK prose_208

raw_235 -> leaf_239
leaf_239  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
word is fairly straightforward to populate as we go, although the exact
rules for what constitutes a word and what punctuation and whitespace vary
somewhat, the differences are well defined by the"]
// END RANK raw_235

prespace_236 -> leaf_240
leaf_240  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_236

literal_237 -> leaf_241
leaf_241  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_237

raw_238 -> leaf_242
leaf_242  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" standard, wo we merely
 aad new ones as we find them.

"]
// END RANK raw_238

section_26 -> { header_243 prose_244 codeblock_245 prose_246 prose_247 prose_248 prose_249 prose_250 prose_251 prose_252 prose_253 prose_254 prose_255}
{rank=same; header_243 prose_244 codeblock_245 prose_246 prose_247 prose_248 prose_249 prose_250 prose_251 prose_252 prose_253 prose_254 prose_255}

header_243 [label="3 : word_in"]

prose_244 [label="prose"]

codeblock_245 [label="code block 158-177"]

prose_246 [label="prose"]

prose_247 [label="prose"]

prose_248 [label="prose"]

prose_249 [label="prose"]

prose_250 [label="prose"]

prose_251 [label="prose"]

prose_252 [label="prose"]

prose_253 [label="prose"]

prose_254 [label="prose"]

prose_255 [label="prose"]


// END RANK section_26

header_243 -> leaf_256
leaf_256  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_243

prose_244 -> { raw_257 prespace_258 literal_259 raw_260}
{rank=same; raw_257 prespace_258 literal_259 raw_260}

raw_257 [label="raw"]

prespace_258 [label="prespace"]

literal_259 [label="literal"]

raw_260 [label="raw"]


// END RANK prose_244

raw_257 -> leaf_261
leaf_261  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Table representing a single word in a given"]
// END RANK raw_257

prespace_258 -> leaf_262
leaf_262  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_258

literal_259 -> leaf_263
leaf_263  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_259

raw_260 -> leaf_264
leaf_264  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_260

codeblock_245 -> leaf_265
leaf_265  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word_repr STRING NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   word INTEGER,
   doc INTEGER,
   document INTEGER,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREIGN KEY doc
      REFERENCE doc (doc_id)
   FOREIGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_245

prose_246 -> { raw_266}
{rank=same; raw_266}

raw_266 [label="raw"]


// END RANK prose_246

raw_266 -> leaf_267
leaf_267  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_266

prose_247 -> { raw_268 prespace_269 bold_270 raw_271}
{rank=same; raw_268 prespace_269 bold_270 raw_271}

raw_268 [label="raw"]

prespace_269 [label="prespace"]

bold_270 [label="bold"]

raw_271 [label="raw"]


// END RANK prose_247

raw_268 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word_repr :  A"]
// END RANK raw_268

prespace_269 -> leaf_273
leaf_273  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_269

bold_270 -> leaf_274
leaf_274  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_270

raw_271 -> leaf_275
leaf_275  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
                  Important because we don't consider zebra and zebras two
                  different words.
"]
// END RANK raw_271

prose_248 -> { raw_276}
{rank=same; raw_276}

raw_276 [label="raw"]


// END RANK prose_248

raw_276 -> leaf_277
leaf_277  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_276

prose_249 -> { raw_278}
{rank=same; raw_278}

raw_278 [label="raw"]


// END RANK prose_249

raw_278 -> leaf_279
leaf_279  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_278

prose_250 -> { raw_280}
{rank=same; raw_280}

raw_280 [label="raw"]


// END RANK prose_250

raw_280 -> leaf_281
leaf_281  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_280

prose_251 -> { raw_282}
{rank=same; raw_282}

raw_282 [label="raw"]


// END RANK prose_251

raw_282 -> leaf_283
leaf_283  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_282

prose_252 -> { raw_284}
{rank=same; raw_284}

raw_284 [label="raw"]


// END RANK prose_252

raw_284 -> leaf_285
leaf_285  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word      :  Foreign key to the word entry.
"]
// END RANK raw_284

prose_253 -> { raw_286}
{rank=same; raw_286}

raw_286 [label="raw"]


// END RANK prose_253

raw_286 -> leaf_287
leaf_287  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_286

prose_254 -> { raw_288}
{rank=same; raw_288}

raw_288 [label="raw"]


// END RANK prose_254

raw_288 -> leaf_289
leaf_289  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.

"]
// END RANK raw_288

prose_255 -> { raw_290}
{rank=same; raw_290}

raw_290 [label="raw"]


// END RANK prose_255

raw_290 -> leaf_291
leaf_291  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This table should be deduplicated between editions of documents to save
storage space; adding one word should cause one line's worth of changes.

"]
// END RANK raw_290

section_27 -> { header_292 prose_293}
{rank=same; header_292 prose_293}

header_292 [label="3 : phrase"]

prose_293 [label="prose"]


// END RANK section_27

header_292 -> leaf_294
leaf_294  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_292

prose_293 -> { raw_295 prespace_296 literal_297 raw_298}
{rank=same; raw_295 prespace_296 literal_297 raw_298}

raw_295 [label="raw"]

prespace_296 [label="prespace"]

literal_297 [label="literal"]

raw_298 [label="raw"]


// END RANK prose_293

raw_295 -> leaf_299
leaf_299  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_295

prespace_296 -> leaf_300
leaf_300  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_296

literal_297 -> leaf_301
leaf_301  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_297

raw_298 -> leaf_302
leaf_302  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_298

section_28 -> { header_303 prose_304}
{rank=same; header_303 prose_304}

header_303 [label="3 : phrase_in"]

prose_304 [label="prose"]


// END RANK section_28

header_303 -> leaf_305
leaf_305  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_303

prose_304 -> { raw_306}
{rank=same; raw_306}

raw_306 [label="raw"]


// END RANK prose_304

raw_306 -> leaf_307
leaf_307  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_306

section_29 -> { header_308 prose_309}
{rank=same; header_308 prose_309}

header_308 [label="3 : line"]

prose_309 [label="prose"]


// END RANK section_29

header_308 -> leaf_310
leaf_310  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_308

prose_309 -> { raw_311}
{rank=same; raw_311}

raw_311 [label="raw"]


// END RANK prose_309

raw_311 -> leaf_312
leaf_312  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_311

section_30 -> { header_313 prose_314}
{rank=same; header_313 prose_314}

header_313 [label="3 : line_in"]

prose_314 [label="prose"]


// END RANK section_30

header_313 -> leaf_315
leaf_315  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_313

prose_314 -> { raw_316}
{rank=same; raw_316}

raw_316 [label="raw"]


// END RANK prose_314

raw_316 -> leaf_317
leaf_317  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_316

section_31 -> { header_318 prose_319}
{rank=same; header_318 prose_319}

header_318 [label="3 : sentence"]

prose_319 [label="prose"]


// END RANK section_31

header_318 -> leaf_320
leaf_320  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_318

prose_319 -> { raw_321}
{rank=same; raw_321}

raw_321 [label="raw"]


// END RANK prose_319

raw_321 -> leaf_322
leaf_322  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_321

section_32 -> { header_323 prose_324}
{rank=same; header_323 prose_324}

header_323 [label="3 : sentence_in"]

prose_324 [label="prose"]


// END RANK section_32

header_323 -> leaf_325
leaf_325  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_323

prose_324 -> { raw_326}
{rank=same; raw_326}

raw_326 [label="raw"]


// END RANK prose_324

raw_326 -> leaf_327
leaf_327  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_326

section_33 -> { header_328 prose_329}
{rank=same; header_328 prose_329}

header_328 [label="3 : block"]

prose_329 [label="prose"]


// END RANK section_33

header_328 -> leaf_330
leaf_330  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_328

prose_329 -> { raw_331}
{rank=same; raw_331}

raw_331 [label="raw"]


// END RANK prose_329

raw_331 -> leaf_332
leaf_332  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_331

section_34 -> { header_333 prose_334}
{rank=same; header_333 prose_334}

header_333 [label="3 : block_in"]

prose_334 [label="prose"]


// END RANK section_34

header_333 -> leaf_335
leaf_335  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_333

prose_334 -> { raw_336}
{rank=same; raw_336}

raw_336 [label="raw"]


// END RANK prose_334

raw_336 -> leaf_337
leaf_337  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_336

section_35 -> { header_338 prose_339}
{rank=same; header_338 prose_339}

header_338 [label="3 : section"]

prose_339 [label="prose"]


// END RANK section_35

header_338 -> leaf_340
leaf_340  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_338

prose_339 -> { raw_341}
{rank=same; raw_341}

raw_341 [label="raw"]


// END RANK prose_339

raw_341 -> leaf_342
leaf_342  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_341

section_36 -> { header_343 prose_344}
{rank=same; header_343 prose_344}

header_343 [label="3 : section_in"]

prose_344 [label="prose"]


// END RANK section_36

header_343 -> leaf_345
leaf_345  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_343

prose_344 -> { raw_346}
{rank=same; raw_346}

raw_346 [label="raw"]


// END RANK prose_344

raw_346 -> leaf_347
leaf_347  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_346


}
