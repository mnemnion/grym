digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 198"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-5"]


// END RANK doc_0

section_1 -> { header_2 prose_3 section_4}
{rank=same; header_2 prose_3 section_4}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

section_4 [label="section: 6-196"]


// END RANK section_1

header_2 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}
{rank=same; raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}

raw_6 [label="raw"]

prespace_7 [label="prespace"]

bold_8 [label="bold"]

raw_9 [label="raw"]

prespace_10 [label="prespace"]

literal_11 [label="literal"]

raw_12 [label="raw"]


// END RANK prose_3

raw_6 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_6

prespace_7 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_7

bold_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_8

raw_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_9

prespace_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_10

literal_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_11

raw_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_12

section_4 -> { header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}
{rank=same; header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}

header_20 [label="2 : SQL for concordance"]

prose_21 [label="prose"]

prose_22 [label="prose"]

section_23 [label="section: 15-67"]

section_24 [label="section: 68-105"]

section_25 [label="section: 106-146"]

section_26 [label="section: 147-169"]

section_27 [label="section: 170-177"]

section_28 [label="section: 178-180"]

section_29 [label="section: 181-182"]

section_30 [label="section: 183-184"]

section_31 [label="section: 185-186"]

section_32 [label="section: 187-189"]

section_33 [label="section: 190-192"]

section_34 [label="section: 193-194"]

section_35 [label="section: 195-196"]

section_36 [label="section: 197-198"]


// END RANK section_4

header_20 -> leaf_37
leaf_37  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_20

prose_21 -> { raw_38 prespace_39 literal_40 raw_41}
{rank=same; raw_38 prespace_39 literal_40 raw_41}

raw_38 [label="raw"]

prespace_39 [label="prespace"]

literal_40 [label="literal"]

raw_41 [label="raw"]


// END RANK prose_21

raw_38 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_38

prespace_39 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_39

literal_40 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_40

raw_41 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_41

prose_22 -> { raw_46}
{rank=same; raw_46}

raw_46 [label="raw"]


// END RANK prose_22

raw_46 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[@concordance/concordance]] is found at [[sql-strip.lua]
[@/etc/sql-strip.lua]].
"]
// END RANK raw_46

section_23 -> { header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}
{rank=same; header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}

header_48 [label="3 : codepoint"]

prose_49 [label="prose"]

prose_50 [label="prose"]

prose_51 [label="prose"]

codeblock_52 [label="code block 26-39"]

prose_53 [label="prose"]

prose_54 [label="prose"]

prose_55 [label="prose"]

prose_56 [label="prose"]

prose_57 [label="prose"]

prose_58 [label="prose"]

prose_59 [label="prose"]

prose_60 [label="prose"]

prose_61 [label="prose"]


// END RANK section_23

header_48 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_48

prose_49 -> { raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}
{rank=same; raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}

raw_63 [label="raw"]

prespace_64 [label="prespace"]

literal_65 [label="literal"]

raw_66 [label="raw"]

prespace_67 [label="prespace"]

literal_68 [label="literal"]

raw_69 [label="raw"]


// END RANK prose_49

raw_63 -> leaf_70
leaf_70  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_63

prespace_64 -> leaf_71
leaf_71  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_64

literal_65 -> leaf_72
leaf_72  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_65

raw_66 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_66

prespace_67 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_67

literal_68 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_68

raw_69 -> leaf_76
leaf_76  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_69

prose_50 -> { raw_77}
{rank=same; raw_77}

raw_77 [label="raw"]


// END RANK prose_50

raw_77 -> leaf_78
leaf_78  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_77

prose_51 -> { raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}
{rank=same; raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}

raw_79 [label="raw"]

prespace_80 [label="prespace"]

literal_81 [label="literal"]

raw_82 [label="raw"]

prespace_83 [label="prespace"]

literal_84 [label="literal"]

raw_85 [label="raw"]

prespace_86 [label="prespace"]

literal_87 [label="literal"]

raw_88 [label="raw"]


// END RANK prose_51

raw_79 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_79

prespace_80 -> leaf_90
leaf_90  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_80

literal_81 -> leaf_91
leaf_91  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_81

raw_82 -> leaf_92
leaf_92  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_82

prespace_83 -> leaf_93
leaf_93  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_83

literal_84 -> leaf_94
leaf_94  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_84

raw_85 -> leaf_95
leaf_95  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_85

prespace_86 -> leaf_96
leaf_96  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_86

literal_87 -> leaf_97
leaf_97  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_87

raw_88 -> leaf_98
leaf_98  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_88

codeblock_52 -> leaf_99
leaf_99  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING UNIQUE NOT NULL,
   destription STRING NOT NULL,
   FOREIGN KEY version
      REFERENCES versin (version_ID)
);
]]"]
// END RANK codeblock_52

prose_53 -> { raw_100}
{rank=same; raw_100}

raw_100 [label="raw"]


// END RANK prose_53

raw_100 -> leaf_101
leaf_101  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_100

prose_54 -> { raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}
{rank=same; raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}

raw_102 [label="raw"]

prespace_103 [label="prespace"]

literal_104 [label="literal"]

raw_105 [label="raw"]

prespace_106 [label="prespace"]

literal_107 [label="literal"]

raw_108 [label="raw"]


// END RANK prose_54

raw_102 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_102

prespace_103 -> leaf_110
leaf_110  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_103

literal_104 -> leaf_111
leaf_111  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_104

raw_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_105

prespace_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_106

literal_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_107

raw_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_108

prose_55 -> { raw_116}
{rank=same; raw_116}

raw_116 [label="raw"]


// END RANK prose_55

raw_116 -> leaf_117
leaf_117  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_116

prose_56 -> { raw_118 prespace_119 literal_120 raw_121}
{rank=same; raw_118 prespace_119 literal_120 raw_121}

raw_118 [label="raw"]

prespace_119 [label="prespace"]

literal_120 [label="literal"]

raw_121 [label="raw"]


// END RANK prose_56

raw_118 -> leaf_122
leaf_122  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_118

prespace_119 -> leaf_123
leaf_123  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_119

literal_120 -> leaf_124
leaf_124  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_120

raw_121 -> leaf_125
leaf_125  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_121

prose_57 -> { raw_126 prespace_127 literal_128 raw_129}
{rank=same; raw_126 prespace_127 literal_128 raw_129}

raw_126 [label="raw"]

prespace_127 [label="prespace"]

literal_128 [label="literal"]

raw_129 [label="raw"]


// END RANK prose_57

raw_126 -> leaf_130
leaf_130  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_126

prespace_127 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_127

literal_128 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_128

raw_129 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_129

prose_58 -> { raw_134 prespace_135 literal_136 raw_137}
{rank=same; raw_134 prespace_135 literal_136 raw_137}

raw_134 [label="raw"]

prespace_135 [label="prespace"]

literal_136 [label="literal"]

raw_137 [label="raw"]


// END RANK prose_58

raw_134 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_134

prespace_135 -> leaf_139
leaf_139  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_135

literal_136 -> leaf_140
leaf_140  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_136

raw_137 -> leaf_141
leaf_141  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E».
"]
// END RANK raw_137

prose_59 -> { raw_142}
{rank=same; raw_142}

raw_142 [label="raw"]


// END RANK prose_59

raw_142 -> leaf_143
leaf_143  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Note the use of double guillemets: «», they are required.
"]
// END RANK raw_142

prose_60 -> { raw_144 prespace_145 literal_146 raw_147}
{rank=same; raw_144 prespace_145 literal_146 raw_147}

raw_144 [label="raw"]

prespace_145 [label="prespace"]

literal_146 [label="literal"]

raw_147 [label="raw"]


// END RANK prose_60

raw_144 -> leaf_148
leaf_148  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_144

prespace_145 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_145

literal_146 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_146

raw_147 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_147

prose_61 -> { raw_152 prespace_153 literal_154 raw_155}
{rank=same; raw_152 prespace_153 literal_154 raw_155}

raw_152 [label="raw"]

prespace_153 [label="prespace"]

literal_154 [label="literal"]

raw_155 [label="raw"]


// END RANK prose_61

raw_152 -> leaf_156
leaf_156  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - version      :  Foreign key to a"]
// END RANK raw_152

prespace_153 -> leaf_157
leaf_157  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_153

literal_154 -> leaf_158
leaf_158  [color=Gray,shape=rectangle,fontname=Inconsolata,label="version"]
// END RANK literal_154

raw_155 -> leaf_159
leaf_159  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" table. Not sure we actually
                     need this come to think of it.

"]
// END RANK raw_155

section_24 -> { header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169}
{rank=same; header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169}

header_160 [label="3 : codepoint_in"]

prose_161 [label="prose"]

codeblock_162 [label="code block 73-88"]

prose_163 [label="prose"]

prose_164 [label="prose"]

prose_165 [label="prose"]

prose_166 [label="prose"]

prose_167 [label="prose"]

prose_168 [label="prose"]

prose_169 [label="prose"]


// END RANK section_24

header_160 -> leaf_170
leaf_170  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_160

prose_161 -> { raw_171 prespace_172 literal_173 raw_174}
{rank=same; raw_171 prespace_172 literal_173 raw_174}

raw_171 [label="raw"]

prespace_172 [label="prespace"]

literal_173 [label="literal"]

raw_174 [label="raw"]


// END RANK prose_161

raw_171 -> leaf_175
leaf_175  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_171

prespace_172 -> leaf_176
leaf_176  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_172

literal_173 -> leaf_177
leaf_177  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_173

raw_174 -> leaf_178
leaf_178  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_174

codeblock_162 -> leaf_179
leaf_179  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codepoint UNIQUE NOT NULL,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_162

prose_163 -> { raw_180}
{rank=same; raw_180}

raw_180 [label="raw"]


// END RANK prose_163

raw_180 -> leaf_181
leaf_181  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_180

prose_164 -> { raw_182}
{rank=same; raw_182}

raw_182 [label="raw"]


// END RANK prose_164

raw_182 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  The codepoint in question
"]
// END RANK raw_182

prose_165 -> { raw_184}
{rank=same; raw_184}

raw_184 [label="raw"]


// END RANK prose_165

raw_184 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_184

prose_166 -> { raw_186}
{rank=same; raw_186}

raw_186 [label="raw"]


// END RANK prose_166

raw_186 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_186

prose_167 -> { raw_188}
{rank=same; raw_188}

raw_188 [label="raw"]


// END RANK prose_167

raw_188 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_188

prose_168 -> { raw_190}
{rank=same; raw_190}

raw_190 [label="raw"]


// END RANK prose_168

raw_190 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_190

prose_169 -> { raw_192}
{rank=same; raw_192}

raw_192 [label="raw"]


// END RANK prose_169

raw_192 -> leaf_193
leaf_193  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.

"]
// END RANK raw_192

section_25 -> { header_194 prose_195 prose_196 codeblock_197 prose_198 prose_199 prose_200 prose_201 prose_202 prose_203}
{rank=same; header_194 prose_195 prose_196 codeblock_197 prose_198 prose_199 prose_200 prose_201 prose_202 prose_203}

header_194 [label="3 : word"]

prose_195 [label="prose"]

prose_196 [label="prose"]

codeblock_197 [label="code block 115-127"]

prose_198 [label="prose"]

prose_199 [label="prose"]

prose_200 [label="prose"]

prose_201 [label="prose"]

prose_202 [label="prose"]

prose_203 [label="prose"]


// END RANK section_25

header_194 -> leaf_204
leaf_204  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_194

prose_195 -> { raw_205 prespace_206 literal_207 raw_208}
{rank=same; raw_205 prespace_206 literal_207 raw_208}

raw_205 [label="raw"]

prespace_206 [label="prespace"]

literal_207 [label="literal"]

raw_208 [label="raw"]


// END RANK prose_195

raw_205 -> leaf_209
leaf_209  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

A"]
// END RANK raw_205

prespace_206 -> leaf_210
leaf_210  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_206

literal_207 -> leaf_211
leaf_211  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_207

raw_208 -> leaf_212
leaf_212  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is what is says, an entry for a single word.
"]
// END RANK raw_208

prose_196 -> { raw_213}
{rank=same; raw_213}

raw_213 [label="raw"]


// END RANK prose_196

raw_213 -> leaf_214
leaf_214  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that this concept is very much differently defined for different
languages, but it's coherent and modular enough to work with them smoothly,
granting that the name itself will be inaccurate when considering, say,
Semitic roots.
"]
// END RANK raw_213

codeblock_197 -> leaf_215
leaf_215  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word STRING UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling BLOB NOT NULL ON CONFLICT DO NOTHING,
   thesaurus INTEGER,
   FOREIGN KEY thesaurus
      REFERENCES thesaurus (thesaurus_id)
);
]]"]
// END RANK codeblock_197

prose_198 -> { raw_216}
{rank=same; raw_216}

raw_216 [label="raw"]


// END RANK prose_198

raw_216 -> leaf_217
leaf_217  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_216

prose_199 -> { raw_218 prespace_219 bold_220 raw_221}
{rank=same; raw_218 prespace_219 bold_220 raw_221}

raw_218 [label="raw"]

prespace_219 [label="prespace"]

bold_220 [label="bold"]

raw_221 [label="raw"]


// END RANK prose_199

raw_218 -> leaf_222
leaf_222  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word : A"]
// END RANK raw_218

prespace_219 -> leaf_223
leaf_223  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_219

bold_220 -> leaf_224
leaf_224  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_220

raw_221 -> leaf_225
leaf_225  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
"]
// END RANK raw_221

prose_200 -> { raw_226}
{rank=same; raw_226}

raw_226 [label="raw"]


// END RANK prose_200

raw_226 -> leaf_227
leaf_227  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - spelling : JSON array of the numeric codepoints specifying the spelling.
"]
// END RANK raw_226

prose_201 -> { raw_228}
{rank=same; raw_228}

raw_228 [label="raw"]


// END RANK prose_201

raw_228 -> leaf_229
leaf_229  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - thesaurus :  Key to a thesaurus entry for the word.
                  The thesaurus will have dictionary fields and is intended
                  for translation across languages as well as within them
"]
// END RANK raw_228

prose_202 -> { raw_230}
{rank=same; raw_230}

raw_230 [label="raw"]


// END RANK prose_202

raw_230 -> leaf_231
leaf_231  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                  Basically a personal wiktionary.
"]
// END RANK raw_230

prose_203 -> { raw_232 prespace_233 literal_234 raw_235}
{rank=same; raw_232 prespace_233 literal_234 raw_235}

raw_232 [label="raw"]

prespace_233 [label="prespace"]

literal_234 [label="literal"]

raw_235 [label="raw"]


// END RANK prose_203

raw_232 -> leaf_236
leaf_236  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
word is fairly straightforward to populate as we go, although the exact
rules for what constitutes a word and what punctuation and whitespace vary
somewhat, the differences are well defined by the"]
// END RANK raw_232

prespace_233 -> leaf_237
leaf_237  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_233

literal_234 -> leaf_238
leaf_238  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_234

raw_235 -> leaf_239
leaf_239  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" standard, wo we merely
 aad new ones as we find them.

"]
// END RANK raw_235

section_26 -> { header_240 prose_241 codeblock_242}
{rank=same; header_240 prose_241 codeblock_242}

header_240 [label="3 : word_in"]

prose_241 [label="prose"]

codeblock_242 [label="code block 149-164"]


// END RANK section_26

header_240 -> leaf_243
leaf_243  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_240

prose_241 -> { raw_244}
{rank=same; raw_244}

raw_244 [label="raw"]


// END RANK prose_241

raw_244 -> leaf_245
leaf_245  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_244

codeblock_242 -> leaf_246
leaf_246  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word UNIQUE NOT NULL,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_242

section_27 -> { header_247 prose_248}
{rank=same; header_247 prose_248}

header_247 [label="3 : phrase"]

prose_248 [label="prose"]


// END RANK section_27

header_247 -> leaf_249
leaf_249  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_247

prose_248 -> { raw_250 prespace_251 literal_252 raw_253}
{rank=same; raw_250 prespace_251 literal_252 raw_253}

raw_250 [label="raw"]

prespace_251 [label="prespace"]

literal_252 [label="literal"]

raw_253 [label="raw"]


// END RANK prose_248

raw_250 -> leaf_254
leaf_254  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_250

prespace_251 -> leaf_255
leaf_255  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_251

literal_252 -> leaf_256
leaf_256  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_252

raw_253 -> leaf_257
leaf_257  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_253

section_28 -> { header_258 prose_259}
{rank=same; header_258 prose_259}

header_258 [label="3 : phrase_in"]

prose_259 [label="prose"]


// END RANK section_28

header_258 -> leaf_260
leaf_260  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_258

prose_259 -> { raw_261}
{rank=same; raw_261}

raw_261 [label="raw"]


// END RANK prose_259

raw_261 -> leaf_262
leaf_262  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_261

section_29 -> { header_263 prose_264}
{rank=same; header_263 prose_264}

header_263 [label="3 : line"]

prose_264 [label="prose"]


// END RANK section_29

header_263 -> leaf_265
leaf_265  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_263

prose_264 -> { raw_266}
{rank=same; raw_266}

raw_266 [label="raw"]


// END RANK prose_264

raw_266 -> leaf_267
leaf_267  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_266

section_30 -> { header_268 prose_269}
{rank=same; header_268 prose_269}

header_268 [label="3 : line_in"]

prose_269 [label="prose"]


// END RANK section_30

header_268 -> leaf_270
leaf_270  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_268

prose_269 -> { raw_271}
{rank=same; raw_271}

raw_271 [label="raw"]


// END RANK prose_269

raw_271 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_271

section_31 -> { header_273 prose_274}
{rank=same; header_273 prose_274}

header_273 [label="3 : sentence"]

prose_274 [label="prose"]


// END RANK section_31

header_273 -> leaf_275
leaf_275  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_273

prose_274 -> { raw_276}
{rank=same; raw_276}

raw_276 [label="raw"]


// END RANK prose_274

raw_276 -> leaf_277
leaf_277  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_276

section_32 -> { header_278 prose_279}
{rank=same; header_278 prose_279}

header_278 [label="3 : sentence_in"]

prose_279 [label="prose"]


// END RANK section_32

header_278 -> leaf_280
leaf_280  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_278

prose_279 -> { raw_281}
{rank=same; raw_281}

raw_281 [label="raw"]


// END RANK prose_279

raw_281 -> leaf_282
leaf_282  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_281

section_33 -> { header_283 prose_284}
{rank=same; header_283 prose_284}

header_283 [label="3 : block"]

prose_284 [label="prose"]


// END RANK section_33

header_283 -> leaf_285
leaf_285  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_283

prose_284 -> { raw_286}
{rank=same; raw_286}

raw_286 [label="raw"]


// END RANK prose_284

raw_286 -> leaf_287
leaf_287  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_286

section_34 -> { header_288 prose_289}
{rank=same; header_288 prose_289}

header_288 [label="3 : block_in"]

prose_289 [label="prose"]


// END RANK section_34

header_288 -> leaf_290
leaf_290  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_288

prose_289 -> { raw_291}
{rank=same; raw_291}

raw_291 [label="raw"]


// END RANK prose_289

raw_291 -> leaf_292
leaf_292  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_291

section_35 -> { header_293 prose_294}
{rank=same; header_293 prose_294}

header_293 [label="3 : section"]

prose_294 [label="prose"]


// END RANK section_35

header_293 -> leaf_295
leaf_295  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_293

prose_294 -> { raw_296}
{rank=same; raw_296}

raw_296 [label="raw"]


// END RANK prose_294

raw_296 -> leaf_297
leaf_297  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_296

section_36 -> { header_298 prose_299}
{rank=same; header_298 prose_299}

header_298 [label="3 : section_in"]

prose_299 [label="prose"]


// END RANK section_36

header_298 -> leaf_300
leaf_300  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_298

prose_299 -> { raw_301}
{rank=same; raw_301}

raw_301 [label="raw"]


// END RANK prose_299

raw_301 -> leaf_302
leaf_302  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_301


}
