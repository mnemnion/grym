digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 177"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-5"]


// END RANK doc_0

section_1 -> { header_2 prose_3 section_4}
{rank=same; header_2 prose_3 section_4}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

section_4 [label="section: 6-175"]


// END RANK section_1

header_2 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}
{rank=same; raw_6 prespace_7 bold_8 raw_9 prespace_10 literal_11 raw_12}

raw_6 [label="raw"]

prespace_7 [label="prespace"]

bold_8 [label="bold"]

raw_9 [label="raw"]

prespace_10 [label="prespace"]

literal_11 [label="literal"]

raw_12 [label="raw"]


// END RANK prose_3

raw_6 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_6

prespace_7 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_7

bold_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_8

raw_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_9

prespace_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_10

literal_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_11

raw_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_12

section_4 -> { header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}
{rank=same; header_20 prose_21 prose_22 section_23 section_24 section_25 section_26 section_27 section_28 section_29 section_30 section_31 section_32 section_33 section_34 section_35 section_36}

header_20 [label="2 : SQL for concordance"]

prose_21 [label="prose"]

prose_22 [label="prose"]

section_23 [label="section: 15-67"]

section_24 [label="section: 68-105"]

section_25 [label="section: 106-125"]

section_26 [label="section: 126-148"]

section_27 [label="section: 149-156"]

section_28 [label="section: 157-159"]

section_29 [label="section: 160-161"]

section_30 [label="section: 162-163"]

section_31 [label="section: 164-165"]

section_32 [label="section: 166-168"]

section_33 [label="section: 169-171"]

section_34 [label="section: 172-173"]

section_35 [label="section: 174-175"]

section_36 [label="section: 176-177"]


// END RANK section_4

header_20 -> leaf_37
leaf_37  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_20

prose_21 -> { raw_38 prespace_39 literal_40 raw_41}
{rank=same; raw_38 prespace_39 literal_40 raw_41}

raw_38 [label="raw"]

prespace_39 [label="prespace"]

literal_40 [label="literal"]

raw_41 [label="raw"]


// END RANK prose_21

raw_38 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_38

prespace_39 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_39

literal_40 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_40

raw_41 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_41

prose_22 -> { raw_46}
{rank=same; raw_46}

raw_46 [label="raw"]


// END RANK prose_22

raw_46 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[@concordance/concordance]] is found at [[sql-strip.lua]
[@/etc/sql-strip.lua]].
"]
// END RANK raw_46

section_23 -> { header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}
{rank=same; header_48 prose_49 prose_50 prose_51 codeblock_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}

header_48 [label="3 : codepoint"]

prose_49 [label="prose"]

prose_50 [label="prose"]

prose_51 [label="prose"]

codeblock_52 [label="code block 26-39"]

prose_53 [label="prose"]

prose_54 [label="prose"]

prose_55 [label="prose"]

prose_56 [label="prose"]

prose_57 [label="prose"]

prose_58 [label="prose"]

prose_59 [label="prose"]

prose_60 [label="prose"]

prose_61 [label="prose"]


// END RANK section_23

header_48 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_48

prose_49 -> { raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}
{rank=same; raw_63 prespace_64 literal_65 raw_66 prespace_67 literal_68 raw_69}

raw_63 [label="raw"]

prespace_64 [label="prespace"]

literal_65 [label="literal"]

raw_66 [label="raw"]

prespace_67 [label="prespace"]

literal_68 [label="literal"]

raw_69 [label="raw"]


// END RANK prose_49

raw_63 -> leaf_70
leaf_70  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_63

prespace_64 -> leaf_71
leaf_71  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_64

literal_65 -> leaf_72
leaf_72  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_65

raw_66 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_66

prespace_67 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_67

literal_68 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_68

raw_69 -> leaf_76
leaf_76  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_69

prose_50 -> { raw_77}
{rank=same; raw_77}

raw_77 [label="raw"]


// END RANK prose_50

raw_77 -> leaf_78
leaf_78  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_77

prose_51 -> { raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}
{rank=same; raw_79 prespace_80 literal_81 raw_82 prespace_83 literal_84 raw_85 prespace_86 literal_87 raw_88}

raw_79 [label="raw"]

prespace_80 [label="prespace"]

literal_81 [label="literal"]

raw_82 [label="raw"]

prespace_83 [label="prespace"]

literal_84 [label="literal"]

raw_85 [label="raw"]

prespace_86 [label="prespace"]

literal_87 [label="literal"]

raw_88 [label="raw"]


// END RANK prose_51

raw_79 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_79

prespace_80 -> leaf_90
leaf_90  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_80

literal_81 -> leaf_91
leaf_91  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_81

raw_82 -> leaf_92
leaf_92  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_82

prespace_83 -> leaf_93
leaf_93  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_83

literal_84 -> leaf_94
leaf_94  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_84

raw_85 -> leaf_95
leaf_95  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_85

prespace_86 -> leaf_96
leaf_96  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_86

literal_87 -> leaf_97
leaf_97  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_87

raw_88 -> leaf_98
leaf_98  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_88

codeblock_52 -> leaf_99
leaf_99  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING UNIQUE NOT NULL,
   destription STRING NOT NULL,
   FOREIGN KEY version
      REFERENCES versin (version_ID)
);
]]"]
// END RANK codeblock_52

prose_53 -> { raw_100}
{rank=same; raw_100}

raw_100 [label="raw"]


// END RANK prose_53

raw_100 -> leaf_101
leaf_101  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_100

prose_54 -> { raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}
{rank=same; raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}

raw_102 [label="raw"]

prespace_103 [label="prespace"]

literal_104 [label="literal"]

raw_105 [label="raw"]

prespace_106 [label="prespace"]

literal_107 [label="literal"]

raw_108 [label="raw"]


// END RANK prose_54

raw_102 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_102

prespace_103 -> leaf_110
leaf_110  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_103

literal_104 -> leaf_111
leaf_111  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_104

raw_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_105

prespace_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_106

literal_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_107

raw_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_108

prose_55 -> { raw_116}
{rank=same; raw_116}

raw_116 [label="raw"]


// END RANK prose_55

raw_116 -> leaf_117
leaf_117  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_116

prose_56 -> { raw_118 prespace_119 literal_120 raw_121}
{rank=same; raw_118 prespace_119 literal_120 raw_121}

raw_118 [label="raw"]

prespace_119 [label="prespace"]

literal_120 [label="literal"]

raw_121 [label="raw"]


// END RANK prose_56

raw_118 -> leaf_122
leaf_122  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_118

prespace_119 -> leaf_123
leaf_123  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_119

literal_120 -> leaf_124
leaf_124  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_120

raw_121 -> leaf_125
leaf_125  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_121

prose_57 -> { raw_126 prespace_127 literal_128 raw_129}
{rank=same; raw_126 prespace_127 literal_128 raw_129}

raw_126 [label="raw"]

prespace_127 [label="prespace"]

literal_128 [label="literal"]

raw_129 [label="raw"]


// END RANK prose_57

raw_126 -> leaf_130
leaf_130  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_126

prespace_127 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_127

literal_128 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_128

raw_129 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_129

prose_58 -> { raw_134 prespace_135 literal_136 raw_137}
{rank=same; raw_134 prespace_135 literal_136 raw_137}

raw_134 [label="raw"]

prespace_135 [label="prespace"]

literal_136 [label="literal"]

raw_137 [label="raw"]


// END RANK prose_58

raw_134 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_134

prespace_135 -> leaf_139
leaf_139  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_135

literal_136 -> leaf_140
leaf_140  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_136

raw_137 -> leaf_141
leaf_141  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E».
"]
// END RANK raw_137

prose_59 -> { raw_142}
{rank=same; raw_142}

raw_142 [label="raw"]


// END RANK prose_59

raw_142 -> leaf_143
leaf_143  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Note the use of double guillemets: «», they are required.
"]
// END RANK raw_142

prose_60 -> { raw_144 prespace_145 literal_146 raw_147}
{rank=same; raw_144 prespace_145 literal_146 raw_147}

raw_144 [label="raw"]

prespace_145 [label="prespace"]

literal_146 [label="literal"]

raw_147 [label="raw"]


// END RANK prose_60

raw_144 -> leaf_148
leaf_148  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_144

prespace_145 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_145

literal_146 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_146

raw_147 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_147

prose_61 -> { raw_152 prespace_153 literal_154 raw_155}
{rank=same; raw_152 prespace_153 literal_154 raw_155}

raw_152 [label="raw"]

prespace_153 [label="prespace"]

literal_154 [label="literal"]

raw_155 [label="raw"]


// END RANK prose_61

raw_152 -> leaf_156
leaf_156  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - version      :  Foreign key to a"]
// END RANK raw_152

prespace_153 -> leaf_157
leaf_157  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_153

literal_154 -> leaf_158
leaf_158  [color=Gray,shape=rectangle,fontname=Inconsolata,label="version"]
// END RANK literal_154

raw_155 -> leaf_159
leaf_159  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" table. Not sure we actually
                     need this come to think of it.

"]
// END RANK raw_155

section_24 -> { header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169}
{rank=same; header_160 prose_161 codeblock_162 prose_163 prose_164 prose_165 prose_166 prose_167 prose_168 prose_169}

header_160 [label="3 : codepoint_in"]

prose_161 [label="prose"]

codeblock_162 [label="code block 73-88"]

prose_163 [label="prose"]

prose_164 [label="prose"]

prose_165 [label="prose"]

prose_166 [label="prose"]

prose_167 [label="prose"]

prose_168 [label="prose"]

prose_169 [label="prose"]


// END RANK section_24

header_160 -> leaf_170
leaf_170  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_160

prose_161 -> { raw_171 prespace_172 literal_173 raw_174}
{rank=same; raw_171 prespace_172 literal_173 raw_174}

raw_171 [label="raw"]

prespace_172 [label="prespace"]

literal_173 [label="literal"]

raw_174 [label="raw"]


// END RANK prose_161

raw_171 -> leaf_175
leaf_175  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_171

prespace_172 -> leaf_176
leaf_176  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_172

literal_173 -> leaf_177
leaf_177  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_173

raw_174 -> leaf_178
leaf_178  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_174

codeblock_162 -> leaf_179
leaf_179  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_codepoint = [[
CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codepoint UNIQUE NOT NULL,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_162

prose_163 -> { raw_180}
{rank=same; raw_180}

raw_180 [label="raw"]


// END RANK prose_163

raw_180 -> leaf_181
leaf_181  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_180

prose_164 -> { raw_182}
{rank=same; raw_182}

raw_182 [label="raw"]


// END RANK prose_164

raw_182 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  The codepoint in question
"]
// END RANK raw_182

prose_165 -> { raw_184}
{rank=same; raw_184}

raw_184 [label="raw"]


// END RANK prose_165

raw_184 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_184

prose_166 -> { raw_186}
{rank=same; raw_186}

raw_186 [label="raw"]


// END RANK prose_166

raw_186 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_186

prose_167 -> { raw_188}
{rank=same; raw_188}

raw_188 [label="raw"]


// END RANK prose_167

raw_188 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_188

prose_168 -> { raw_190}
{rank=same; raw_190}

raw_190 [label="raw"]


// END RANK prose_168

raw_190 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_190

prose_169 -> { raw_192}
{rank=same; raw_192}

raw_192 [label="raw"]


// END RANK prose_169

raw_192 -> leaf_193
leaf_193  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.

"]
// END RANK raw_192

section_25 -> { header_194 prose_195 codeblock_196}
{rank=same; header_194 prose_195 codeblock_196}

header_194 [label="3 : word"]

prose_195 [label="prose"]

codeblock_196 [label="code block 108-118"]


// END RANK section_25

header_194 -> leaf_197
leaf_197  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_194

prose_195 -> { raw_198}
{rank=same; raw_198}

raw_198 [label="raw"]


// END RANK prose_195

raw_198 -> leaf_199
leaf_199  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_198

codeblock_196 -> leaf_200
leaf_200  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling STRING -- #Todo correct
   NOT NULL ON CONFLICT DO NOTHING,
);
]]"]
// END RANK codeblock_196

section_26 -> { header_201 prose_202 codeblock_203}
{rank=same; header_201 prose_202 codeblock_203}

header_201 [label="3 : word_in"]

prose_202 [label="prose"]

codeblock_203 [label="code block 128-143"]


// END RANK section_26

header_201 -> leaf_204
leaf_204  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_201

prose_202 -> { raw_205}
{rank=same; raw_205}

raw_205 [label="raw"]


// END RANK prose_202

raw_205 -> leaf_206
leaf_206  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_205

codeblock_203 -> leaf_207
leaf_207  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local create_word = [[
CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word UNIQUE NOT NULL,
   document UNIQUE, NOT NULL,
   wid INTEGER NOT NULL,
   span INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREGN KEY document
      REFERENCES document (document_id),
]]"]
// END RANK codeblock_203

section_27 -> { header_208 prose_209}
{rank=same; header_208 prose_209}

header_208 [label="3 : phrase"]

prose_209 [label="prose"]


// END RANK section_27

header_208 -> leaf_210
leaf_210  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_208

prose_209 -> { raw_211 prespace_212 literal_213 raw_214}
{rank=same; raw_211 prespace_212 literal_213 raw_214}

raw_211 [label="raw"]

prespace_212 [label="prespace"]

literal_213 [label="literal"]

raw_214 [label="raw"]


// END RANK prose_209

raw_211 -> leaf_215
leaf_215  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_211

prespace_212 -> leaf_216
leaf_216  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_212

literal_213 -> leaf_217
leaf_217  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_213

raw_214 -> leaf_218
leaf_218  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_214

section_28 -> { header_219 prose_220}
{rank=same; header_219 prose_220}

header_219 [label="3 : phrase_in"]

prose_220 [label="prose"]


// END RANK section_28

header_219 -> leaf_221
leaf_221  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_219

prose_220 -> { raw_222}
{rank=same; raw_222}

raw_222 [label="raw"]


// END RANK prose_220

raw_222 -> leaf_223
leaf_223  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_222

section_29 -> { header_224 prose_225}
{rank=same; header_224 prose_225}

header_224 [label="3 : line"]

prose_225 [label="prose"]


// END RANK section_29

header_224 -> leaf_226
leaf_226  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_224

prose_225 -> { raw_227}
{rank=same; raw_227}

raw_227 [label="raw"]


// END RANK prose_225

raw_227 -> leaf_228
leaf_228  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_227

section_30 -> { header_229 prose_230}
{rank=same; header_229 prose_230}

header_229 [label="3 : line_in"]

prose_230 [label="prose"]


// END RANK section_30

header_229 -> leaf_231
leaf_231  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_229

prose_230 -> { raw_232}
{rank=same; raw_232}

raw_232 [label="raw"]


// END RANK prose_230

raw_232 -> leaf_233
leaf_233  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_232

section_31 -> { header_234 prose_235}
{rank=same; header_234 prose_235}

header_234 [label="3 : sentence"]

prose_235 [label="prose"]


// END RANK section_31

header_234 -> leaf_236
leaf_236  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_234

prose_235 -> { raw_237}
{rank=same; raw_237}

raw_237 [label="raw"]


// END RANK prose_235

raw_237 -> leaf_238
leaf_238  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_237

section_32 -> { header_239 prose_240}
{rank=same; header_239 prose_240}

header_239 [label="3 : sentence_in"]

prose_240 [label="prose"]


// END RANK section_32

header_239 -> leaf_241
leaf_241  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_239

prose_240 -> { raw_242}
{rank=same; raw_242}

raw_242 [label="raw"]


// END RANK prose_240

raw_242 -> leaf_243
leaf_243  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_242

section_33 -> { header_244 prose_245}
{rank=same; header_244 prose_245}

header_244 [label="3 : block"]

prose_245 [label="prose"]


// END RANK section_33

header_244 -> leaf_246
leaf_246  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_244

prose_245 -> { raw_247}
{rank=same; raw_247}

raw_247 [label="raw"]


// END RANK prose_245

raw_247 -> leaf_248
leaf_248  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_247

section_34 -> { header_249 prose_250}
{rank=same; header_249 prose_250}

header_249 [label="3 : block_in"]

prose_250 [label="prose"]


// END RANK section_34

header_249 -> leaf_251
leaf_251  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_249

prose_250 -> { raw_252}
{rank=same; raw_252}

raw_252 [label="raw"]


// END RANK prose_250

raw_252 -> leaf_253
leaf_253  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_252

section_35 -> { header_254 prose_255}
{rank=same; header_254 prose_255}

header_254 [label="3 : section"]

prose_255 [label="prose"]


// END RANK section_35

header_254 -> leaf_256
leaf_256  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_254

prose_255 -> { raw_257}
{rank=same; raw_257}

raw_257 [label="raw"]


// END RANK prose_255

raw_257 -> leaf_258
leaf_258  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_257

section_36 -> { header_259 prose_260}
{rank=same; header_259 prose_260}

header_259 [label="3 : section_in"]

prose_260 [label="prose"]


// END RANK section_36

header_259 -> leaf_261
leaf_261  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_259

prose_260 -> { raw_262}
{rank=same; raw_262}

raw_262 [label="raw"]


// END RANK prose_260

raw_262 -> leaf_263
leaf_263  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_262


}
