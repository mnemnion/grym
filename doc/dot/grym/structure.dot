digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 54"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-34"]


section_1 -> { header_2}
{rank=same; header_2}

header_2 [label="1 : Structure Module"]


codeblock_3 -> leaf_6
leaf_6  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Node = require \"peg/node\"
local u = require \"../lib/util\"

local Hashline = require \"grym/hashline\"
local Handleline = require \"grym/handleline\""]
section_4 -> { header_7}
{rank=same; header_7}

header_7 [label="2 : Metatable for Structures"]


codeblock_8 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local S, s = u.inherit(Node)

function S.dotLabel(structure)
    -- This is a shim and will break.
    if structure.temp_id then 
        return structure.temp_id
    else
        return \"structure\"
    end
end"]
section_5 -> { header_10}
{rank=same; header_10}

header_10 [label="2 : Constructor module"]


codeblock_11 -> leaf_12
leaf_12  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function new(Structure, line, line_id)
    local structure = setmetatable({}, S)
    structure.id = \"structure\"
    if line_id == \"hashline\" then
        structure[1] = Hashline(line)
    elseif line_id == \"handleline\" then
        structure[1] = Handleline(line)
    end

    return structure
end


return u.export(s, new)"]

}
