digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 29"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-29"]


section_1 -> { header_2 block_3 codeblock_4}
{rank=same; header_2 block_3 codeblock_4}

header_2 [label="1 : Handleline module"]

block_3 [label="block 1-4"]

codeblock_4 [label="code block 5-28"]


header_2 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
block_3 -> leaf_6
leaf_6  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   A minimalist Node container for a handle line.
"]
codeblock_4 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Node = require \"peg/node\"
local u = require \"../lib/util\"

local Handle = require \"grym/handle\"

local H, h = u.inherit(Node)

local function toMarkdown(handleline)
  return handleline.__VALUE
end

local function new(Handleline, line)
    local handleline = setmetatable({}, H)
    handleline.__VALUE = line
    handleline.id = \"handleline\"
    handleline[1] = Handle(line)

    return handleline
end


return u.export(h, new)"]

}
