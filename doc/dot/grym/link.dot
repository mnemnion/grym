digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 80"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-18"]


section_1 -> { header_2 prose_3 codeblock_4 codeblock_5 section_6}
{rank=same; header_2 prose_3 codeblock_4 codeblock_5 section_6}

header_2 [label="1 : Link module"]

prose_3 [label="prose"]

codeblock_4 [label="code block 3-11"]

codeblock_5 [label="code block 14-17"]

section_6 [label="section: 19-75"]


prose_3 -> { raw_7}
{rank=same; raw_7}

raw_7 [label="raw"]


raw_7 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_4 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local L = require \"lpeg\"

local m = require \"grym/morphemes\"
local u = require \"util\"
local s = require \"status\" ()

local Node = require \"node/node\""]
codeblock_5 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Li, li = u.inherit(Node)
Li.id = \"link\""]
section_6 -> { header_11 prose_12 section_13 section_14 section_15}
{rank=same; header_11 prose_12 section_13 section_14 section_15}

header_11 [label="2 : Transformers"]

prose_12 [label="prose"]

section_13 [label="section: 21-31"]

section_14 [label="section: 32-75"]

section_15 [label="section: 76-80"]


prose_12 -> { raw_16}
{rank=same; raw_16}

raw_16 [label="raw"]


raw_16 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
section_13 -> { header_18 prose_19 codeblock_20}
{rank=same; header_18 prose_19 codeblock_20}

header_18 [label="3 : toMarkdown"]

prose_19 [label="prose"]

codeblock_20 [label="code block 23-30"]


prose_19 -> { raw_21}
{rank=same; raw_21}

raw_21 [label="raw"]


raw_21 -> leaf_22
leaf_22  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_20 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Li.toMarkdown(link)
  url = link.url or \"\"
  prose = link.prose or \"\"
  return \"[\" .. prose .. \"]\"
      .. \"(\" .. url .. \")\"
end"]
section_14 -> { header_24 prose_25 codeblock_26 codeblock_27 codeblock_28 codeblock_29}
{rank=same; header_24 prose_25 codeblock_26 codeblock_27 codeblock_28 codeblock_29}

header_24 [label="3 : dotLabel"]

prose_25 [label="prose"]

codeblock_26 [label="code block 34-38"]

codeblock_27 [label="code block 40-53"]

codeblock_28 [label="code block 57-65"]

codeblock_29 [label="code block 68-74"]


prose_25 -> { raw_30}
{rank=same; raw_30}

raw_30 [label="raw"]


raw_30 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_26 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Li.dotLabel(link)
  return \"link: \" .. (link.prose or \"\")
end"]
codeblock_27 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Li.parse(link, line)
  -- This only parses double links, expand
  local WS, sel, ser = m.WS, m.sel, m.ser
  local link_content = L.match(L.Ct(sel * WS * sel * L.C(m.link_prose)
                * ser * WS * sel * L.C(m.url) * WS * ser * WS * ser),
                line)
  if link_content then
    link.prose = link_content[1] or \"\"
    link.url   = link_content[2] or \"\"
  end
  return link
end"]
codeblock_28 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function new(Link, line)
  local link = setmetatable({},Li)
  link.id = \"link\"
  link.val = line -- refine this
  link:parse(line)
  return link
end"]
codeblock_29 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function linkbuild(link, str)
  s:verb(\"   ~~ built a link\")
  setmetatable(link, Li)
  return Li.parse(link, str:sub(link.first, link.last))
end"]
section_15 -> { header_36 prose_37 codeblock_38}
{rank=same; header_36 prose_37 codeblock_38}

header_36 [label="3 : export"]

prose_37 [label="prose"]

codeblock_38 [label="code block 78-80"]


prose_37 -> { raw_39}
{rank=same; raw_39}

raw_39 [label="raw"]


raw_39 -> leaf_40
leaf_40  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
codeblock_38 -> leaf_41
leaf_41  [color=Gray,shape=rectangle,fontname=Inconsolata,label="return linkbuild"]

}
