digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 86"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-29"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 prose_5 prose_6 codeblock_7 codeblock_8 section_9}
{rank=same; header_2 prose_3 prose_4 prose_5 prose_6 codeblock_7 codeblock_8 section_9}

header_2 [label="1 : Directory"]

prose_3 [label="prose"]

prose_4 [label="prose"]

prose_5 [label="prose"]

prose_6 [label="prose"]

codeblock_7 [label="code block 13-19"]

codeblock_8 [label="code block 21-28"]

section_9 [label="section: 30-86"]


// END RANK section_1

header_2 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Directory"]
// END RANK header_2

prose_3 -> { raw_11 prespace_12 literal_13 raw_14}
{rank=same; raw_11 prespace_12 literal_13 raw_14}

raw_11 [label="raw"]

prespace_12 [label="prespace"]

literal_13 [label="literal"]

raw_14 [label="raw"]


// END RANK prose_3

raw_11 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_11

prespace_12 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_12

literal_13 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
// END RANK literal_13

raw_14 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is going to have a certain attitude toward directories.
"]
// END RANK raw_14

prose_4 -> { raw_19 prespace_20 literal_21 raw_22}
{rank=same; raw_19 prespace_20 literal_21 raw_22}

raw_19 [label="raw"]

prespace_20 [label="prespace"]

literal_21 [label="literal"]

raw_22 [label="raw"]


// END RANK prose_4

raw_19 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The"]
// END RANK raw_19

prespace_20 -> leaf_24
leaf_24  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_20

literal_21 -> leaf_25
leaf_25  [color=Gray,shape=rectangle,fontname=Inconsolata,label="orb"]
// END RANK literal_21

raw_22 -> leaf_26
leaf_26  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory module will emulate and prototype that attitude.
"]
// END RANK raw_22

prose_5 -> { raw_27}
{rank=same; raw_27}

raw_27 [label="raw"]


// END RANK prose_5

raw_27 -> leaf_28
leaf_28  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- [ ] #todo  Add and use raw \"lfs\" dependency, since we already need it
"]
// END RANK raw_27

prose_6 -> { raw_29 prespace_30 literal_31 raw_32}
{rank=same; raw_29 prespace_30 literal_31 raw_32}

raw_29 [label="raw"]

prespace_30 [label="prespace"]

literal_31 [label="literal"]

raw_32 [label="raw"]


// END RANK prose_6

raw_29 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- [ ] #todo  And this is the wrong place to put it but, phase out penlight.
             All I use is strict and wrappers around"]
// END RANK raw_29

prespace_30 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_30

literal_31 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label="lfs"]
// END RANK literal_31

raw_32 -> leaf_36
leaf_36  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_32

codeblock_7 -> leaf_37
leaf_37  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local Dir = {}
Dir.isDir = Dir
Dir.it = require \"core/check\"

local __Dirs = {} -- Cache to keep each Dir unique by Path"]
// END RANK codeblock_7

codeblock_8 -> leaf_38
leaf_38  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local pl_path = require \"pl.path\" -- Favor lfs directly
local lfs = require \"lfs\"
local attributes = lfs.attributes
local Path = require \"walk/path\"
local isdir  = pl_path.isdir
local mkdir = lfs.mkdir"]
// END RANK codeblock_8

section_9 -> { header_39 prose_40 codeblock_41 codeblock_42 codeblock_43 codeblock_44 codeblock_45}
{rank=same; header_39 prose_40 codeblock_41 codeblock_42 codeblock_43 codeblock_44 codeblock_45}

header_39 [label="3 : Dir:exists()"]

prose_40 [label="prose"]

codeblock_41 [label="code block 32-36"]

codeblock_42 [label="code block 38-53"]

codeblock_43 [label="code block 56-60"]

codeblock_44 [label="code block 63-82"]

codeblock_45 [label="code block 84-86"]


// END RANK section_9

header_39 -> leaf_46
leaf_46  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** Dir:exists()"]
// END RANK header_39

prose_40 -> { raw_47}
{rank=same; raw_47}

raw_47 [label="raw"]


// END RANK prose_40

raw_47 -> leaf_48
leaf_48  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_47

codeblock_41 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Dir.exists(dir)
  return isdir(dir.path.str)
end"]
// END RANK codeblock_41

codeblock_42 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Dir.mkdir(dir)
  if dir:exists() then
    return false
  else
    local success, msg, code = mkdir(dir.path.str)
    if success then
      return success
    else
      code = tostring(code)
      s:complain(\"mkdir failure # \" .. code, msg, dir)
      return false
    end
  end
end"]
// END RANK codeblock_42

codeblock_43 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function Dir.attributes(dir)
  return attributes(dir.path.str)
end"]
// END RANK codeblock_43

codeblock_44 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label="function new(__, path)
  if __Dirs[path] then
    return __Dirs[path]
  end
  local dir = setmetatable({}, {__index = Dir})
  local path_str = \"\"
  if path.isPath then
    assert(path.isDir, \"fatal: \" .. tostring(path) .. \" is not a directory\")
    dir.path = path
  else
    local new_path = Path(path)
    assert(new_path.isDir, \"fatal: \" .. tostring(path) .. \" is not a directory\")
    dir.path = new_path
  end
  __Dirs[path] = dir

  return dir
end"]
// END RANK codeblock_44

codeblock_45 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label="return setmetatable({}, {__call = new, __index = Dir})"]
// END RANK codeblock_45


}
