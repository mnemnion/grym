digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 86"]


doc_0 -> { section_1 section_2}
{rank=same; section_1 section_2}

section_1 [label="section: 1-17"]

section_2 [label="section: 18-54"]


section_1 -> { header_3 prose_4 prose_5 prose_6 prose_7 prose_8}
{rank=same; header_3 prose_4 prose_5 prose_6 prose_7 prose_8}

header_3 [label="1 : grym"]

prose_4 [label="prose"]

prose_5 [label="prose"]

prose_6 [label="prose"]

prose_7 [label="prose"]

prose_8 [label="prose"]


header_3 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_4 -> { raw_10}
{rank=same; raw_10}

raw_10 [label="raw"]


raw_10 -> leaf_11
leaf_11  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  =grym= is the command-line utility for bootstrapping the Grimoire language.
"]
prose_5 -> { raw_12}
{rank=same; raw_12}

raw_12 [label="raw"]


raw_12 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It works in a reasonably-familiar, Unixey sort of way, as a command-line tool.
"]
prose_6 -> { raw_14}
{rank=same; raw_14}

raw_14 [label="raw"]


raw_14 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Unlike most such tools I produce, it doesn't take from =stdin= or write to
=stdout=.  Instead it will happily make major changes to your files, sweeping
entire subdirectories, by default.
"]
prose_7 -> { raw_16}
{rank=same; raw_16}

raw_16 [label="raw"]


raw_16 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Not unlike =git= in that singular respect, except it's harder to persuade =git=
to mangle things.  We'll include a few simple sanity checks. 
"]
prose_8 -> { raw_18}
{rank=same; raw_18}

raw_18 [label="raw"]


raw_18 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Like =git=, =grym= is mostly invoked with secondary commands.

"]
section_2 -> { header_20 prose_21 section_22 section_23 section_24 section_25 section_26 section_27}
{rank=same; header_20 prose_21 section_22 section_23 section_24 section_25 section_26 section_27}

header_20 [label="1 : grym [a-z]+"]

prose_21 [label="prose"]

section_22 [label="section: 21-25"]

section_23 [label="section: 26-30"]

section_24 [label="section: 31-35"]

section_25 [label="section: 36-44"]

section_26 [label="section: 45-54"]

section_27 [label="section: 55-86"]


header_20 -> leaf_28
leaf_28  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_21 -> { raw_29}
{rank=same; raw_29}

raw_29 [label="raw"]


raw_29 -> leaf_30
leaf_30  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
section_22 -> { header_31 prose_32}
{rank=same; header_31 prose_32}

header_31 [label="3 : grym knit"]

prose_32 [label="prose"]


header_31 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_32 -> { raw_34}
{rank=same; raw_34}

raw_34 [label="raw"]


raw_34 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This generates =/src/= from =/org/=.

"]
section_23 -> { header_36 prose_37}
{rank=same; header_36 prose_37}

header_36 [label="3 : grym weave"]

prose_37 [label="prose"]


header_36 -> leaf_38
leaf_38  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_37 -> { raw_39}
{rank=same; raw_39}

raw_39 [label="raw"]


raw_39 -> leaf_40
leaf_40  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This generates =/doc/= from =/org/=.

"]
section_24 -> { header_41 prose_42}
{rank=same; header_41 prose_42}

header_41 [label="3 : grym unravel"]

prose_42 [label="prose"]


header_41 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_42 -> { raw_44}
{rank=same; raw_44}

raw_44 [label="raw"]


raw_44 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This regenerates =/org/= from =/src/=.

"]
section_25 -> { header_46 prose_47 prose_48}
{rank=same; header_46 prose_47 prose_48}

header_46 [label="3 : grym invert"]

prose_47 [label="prose"]

prose_48 [label="prose"]


header_46 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_47 -> { raw_50}
{rank=same; raw_50}

raw_50 [label="raw"]


raw_50 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This takes a directory called =/src/= and creates an =/org/= from it, as 
best it's able. 
"]
prose_48 -> { raw_52}
{rank=same; raw_52}

raw_52 [label="raw"]


raw_52 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This being a rough-and-ready kind of operation, if we find anything at all
in =/org/= before we start, we'll copy it over somewhere temporary. 

"]
section_26 -> { header_54 prose_55 prose_56}
{rank=same; header_54 prose_55 prose_56}

header_54 [label="3 : grym init"]

prose_55 [label="prose"]

prose_56 [label="prose"]


header_54 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_55 -> { raw_58}
{rank=same; raw_58}

raw_58 [label="raw"]


raw_58 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This checks for the codex directory structure and if it finds one writes a 
=.grym= file in the home directory.  This will almost certainly turn into a 
directory, the question is whether that =.git= style organization is under
=.bridge= or both that and =.grym=.
"]
prose_56 -> { raw_60}
{rank=same; raw_60}

raw_60 [label="raw"]


raw_60 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I want to give it a chance to just be a config file. 

"]
section_27 -> { header_62 prose_63 prose_64 prose_65 prose_66 prose_67 prose_68}
{rank=same; header_62 prose_63 prose_64 prose_65 prose_66 prose_67 prose_68}

header_62 [label="2 : Considerations"]

prose_63 [label="prose"]

prose_64 [label="prose"]

prose_65 [label="prose"]

prose_66 [label="prose"]

prose_67 [label="prose"]

prose_68 [label="prose"]


header_62 -> leaf_69
leaf_69  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
prose_63 -> { raw_70}
{rank=same; raw_70}

raw_70 [label="raw"]


raw_70 -> leaf_71
leaf_71  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  One of the early philosophical decisions in Grimoire: it will do things to
your source files, in-place.  The first example is filtering, also the first
step.
"]
prose_64 -> { raw_72}
{rank=same; raw_72}

raw_72 [label="raw"]


raw_72 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Any file that Grimoire opens will have tabs replaced with two space marks,
all trailing whitespace pruned, \"\\r\" excised where encountered, and any
line consisting only of what Unicode considers spacemarks is replaced with \"\". 
"]
prose_65 -> { raw_74}
{rank=same; raw_74}

raw_74 [label="raw"]


raw_74 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The line between formatting and linting is blurry but in general Grimoire wants
things to be a certain way and isn't shy about making it so.  A rule like
two spaces to begin a sentence allows for trivial sentence-counting and 
navigation, and the number of phrases like \"Dr.\" in the English language is 
finite.
"]
prose_66 -> { raw_76}
{rank=same; raw_76}

raw_76 [label="raw"]


raw_76 -> leaf_77
leaf_77  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Preceding each section with two blank lines, and starting the first 
paragraph with two spaces of indentation, gives a good flow to the document
which computers and humans can both follow.
"]
prose_67 -> { raw_78}
{rank=same; raw_78}

raw_78 [label="raw"]


raw_78 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Asking for the pure-prose content of a line to stretch no more than 77 
columns is a reasonable standard for reading monospaced text.  In nearly all
languages, two characters to begin a comment and one for leading whitespace
allows this convention to fit in the 80-column standard. 
"]
prose_68 -> { raw_80}
{rank=same; raw_80}

raw_80 [label="raw"]


raw_80 -> leaf_81
leaf_81  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
To support this I intend to allow links to have newlines in them which are
filtered out during weaving.  Grimoire succeeds when it's readable by anyone
who speaks the language used in the document. 



"]

}
