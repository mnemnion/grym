digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 86"]


doc_0 -> { section_1 section_2}
{rank=same; section_1 section_2}

section_1 [label="section: 1-17"]

section_2 [label="section: 18-54"]


section_1 -> { header_3 prose_4 prose_5 prose_6 prose_7 prose_8}
{rank=same; header_3 prose_4 prose_5 prose_6 prose_7 prose_8}

header_3 [label="1 : grym"]

prose_4 [label="prose"]

prose_5 [label="prose"]

prose_6 [label="prose"]

prose_7 [label="prose"]

prose_8 [label="prose"]


prose_4 -> { raw_9}
{rank=same; raw_9}

raw_9 [label="raw"]


raw_9 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  =grym= is the command-line utility for bootstrapping the Grimoire language.
"]
prose_5 -> { raw_11}
{rank=same; raw_11}

raw_11 [label="raw"]


raw_11 -> leaf_12
leaf_12  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It works in a reasonably-familiar, Unixey sort of way, as a command-line tool.
"]
prose_6 -> { raw_13}
{rank=same; raw_13}

raw_13 [label="raw"]


raw_13 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Unlike most such tools I produce, it doesn't take from =stdin= or write to
=stdout=.  Instead it will happily make major changes to your files, sweeping
entire subdirectories, by default.
"]
prose_7 -> { raw_15}
{rank=same; raw_15}

raw_15 [label="raw"]


raw_15 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Not unlike =git= in that singular respect, except it's harder to persuade =git=
to mangle things.  We'll include a few simple sanity checks. 
"]
prose_8 -> { raw_17}
{rank=same; raw_17}

raw_17 [label="raw"]


raw_17 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Like =git=, =grym= is mostly invoked with secondary commands.

"]
section_2 -> { header_19 prose_20 section_21 section_22 section_23 section_24 section_25 section_26}
{rank=same; header_19 prose_20 section_21 section_22 section_23 section_24 section_25 section_26}

header_19 [label="1 : grym [a-z]+"]

prose_20 [label="prose"]

section_21 [label="section: 21-25"]

section_22 [label="section: 26-30"]

section_23 [label="section: 31-35"]

section_24 [label="section: 36-44"]

section_25 [label="section: 45-54"]

section_26 [label="section: 55-86"]


prose_20 -> { raw_27}
{rank=same; raw_27}

raw_27 [label="raw"]


raw_27 -> leaf_28
leaf_28  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
section_21 -> { header_29 prose_30}
{rank=same; header_29 prose_30}

header_29 [label="3 : grym knit"]

prose_30 [label="prose"]


prose_30 -> { raw_31}
{rank=same; raw_31}

raw_31 [label="raw"]


raw_31 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This generates =/src/= from =/org/=.

"]
section_22 -> { header_33 prose_34}
{rank=same; header_33 prose_34}

header_33 [label="3 : grym weave"]

prose_34 [label="prose"]


prose_34 -> { raw_35}
{rank=same; raw_35}

raw_35 [label="raw"]


raw_35 -> leaf_36
leaf_36  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This generates =/doc/= from =/org/=.

"]
section_23 -> { header_37 prose_38}
{rank=same; header_37 prose_38}

header_37 [label="3 : grym unravel"]

prose_38 [label="prose"]


prose_38 -> { raw_39}
{rank=same; raw_39}

raw_39 [label="raw"]


raw_39 -> leaf_40
leaf_40  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This regenerates =/org/= from =/src/=.

"]
section_24 -> { header_41 prose_42 prose_43}
{rank=same; header_41 prose_42 prose_43}

header_41 [label="3 : grym invert"]

prose_42 [label="prose"]

prose_43 [label="prose"]


prose_42 -> { raw_44}
{rank=same; raw_44}

raw_44 [label="raw"]


raw_44 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This takes a directory called =/src/= and creates an =/org/= from it, as 
best it's able. 
"]
prose_43 -> { raw_46}
{rank=same; raw_46}

raw_46 [label="raw"]


raw_46 -> leaf_47
leaf_47  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This being a rough-and-ready kind of operation, if we find anything at all
in =/org/= before we start, we'll copy it over somewhere temporary. 

"]
section_25 -> { header_48 prose_49 prose_50}
{rank=same; header_48 prose_49 prose_50}

header_48 [label="3 : grym init"]

prose_49 [label="prose"]

prose_50 [label="prose"]


prose_49 -> { raw_51}
{rank=same; raw_51}

raw_51 [label="raw"]


raw_51 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This checks for the codex directory structure and if it finds one writes a 
=.grym= file in the home directory.  This will almost certainly turn into a 
directory, the question is whether that =.git= style organization is under
=.bridge= or both that and =.grym=.
"]
prose_50 -> { raw_53}
{rank=same; raw_53}

raw_53 [label="raw"]


raw_53 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I want to give it a chance to just be a config file. 

"]
section_26 -> { header_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}
{rank=same; header_55 prose_56 prose_57 prose_58 prose_59 prose_60 prose_61}

header_55 [label="2 : Considerations"]

prose_56 [label="prose"]

prose_57 [label="prose"]

prose_58 [label="prose"]

prose_59 [label="prose"]

prose_60 [label="prose"]

prose_61 [label="prose"]


prose_56 -> { raw_62}
{rank=same; raw_62}

raw_62 [label="raw"]


raw_62 -> leaf_63
leaf_63  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  One of the early philosophical decisions in Grimoire: it will do things to
your source files, in-place.  The first example is filtering, also the first
step.
"]
prose_57 -> { raw_64}
{rank=same; raw_64}

raw_64 [label="raw"]


raw_64 -> leaf_65
leaf_65  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Any file that Grimoire opens will have tabs replaced with two space marks,
all trailing whitespace pruned, \"\\r\" excised where encountered, and any
line consisting only of what Unicode considers spacemarks is replaced with \"\". 
"]
prose_58 -> { raw_66}
{rank=same; raw_66}

raw_66 [label="raw"]


raw_66 -> leaf_67
leaf_67  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The line between formatting and linting is blurry but in general Grimoire wants
things to be a certain way and isn't shy about making it so.  A rule like
two spaces to begin a sentence allows for trivial sentence-counting and 
navigation, and the number of phrases like \"Dr.\" in the English language is 
finite.
"]
prose_59 -> { raw_68}
{rank=same; raw_68}

raw_68 [label="raw"]


raw_68 -> leaf_69
leaf_69  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Preceding each section with two blank lines, and starting the first 
paragraph with two spaces of indentation, gives a good flow to the document
which computers and humans can both follow.
"]
prose_60 -> { raw_70}
{rank=same; raw_70}

raw_70 [label="raw"]


raw_70 -> leaf_71
leaf_71  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Asking for the pure-prose content of a line to stretch no more than 77 
columns is a reasonable standard for reading monospaced text.  In nearly all
languages, two characters to begin a comment and one for leading whitespace
allows this convention to fit in the 80-column standard. 
"]
prose_61 -> { raw_72}
{rank=same; raw_72}

raw_72 [label="raw"]


raw_72 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
To support this I intend to allow links to have newlines in them which are
filtered out during weaving.  Grimoire succeeds when it's readable by anyone
who speaks the language used in the document. 



"]

}
