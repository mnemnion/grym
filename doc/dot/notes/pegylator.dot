digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 40"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-35"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 section_5 section_6 section_7}
{rank=same; header_2 prose_3 prose_4 section_5 section_6 section_7}

header_2 [label="1 : Pegylator and the Node class"]

prose_3 [label="prose"]

prose_4 [label="prose"]

section_5 [label="section: 10-13"]

section_6 [label="section: 31-35"]

section_7 [label="section: 36-40"]


// END RANK section_1

header_2 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Pegylator and the Node class"]
// END RANK header_2

prose_3 -> { raw_9 prespace_10 literal_11 raw_12}
{rank=same; raw_9 prespace_10 literal_11 raw_12}

raw_9 [label="raw"]

prespace_10 [label="prespace"]

literal_11 [label="literal"]

raw_12 [label="raw"]


// END RANK prose_3

raw_9 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  Current grym has a nodule of undigested code in the"]
// END RANK raw_9

prespace_10 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_10

literal_11 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/peg"]
// END RANK literal_11

raw_12 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory.
This is early 2015 era stuff, and is built somewhat blindly upon epnf as I
found it on the internet.
"]
// END RANK raw_12

prose_4 -> { raw_17}
{rank=same; raw_17}

raw_17 [label="raw"]


// END RANK prose_4

raw_17 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It needs a substantial refactor. 
"]
// END RANK raw_17

section_5 -> { header_19 prose_20 section_21}
{rank=same; header_19 prose_20 section_21}

header_19 [label="2 : Grammar class"]

prose_20 [label="prose"]

section_21 [label="section: 14-30"]


// END RANK section_5

header_19 -> leaf_22
leaf_22  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** Grammar class"]
// END RANK header_19

prose_20 -> { raw_23}
{rank=same; raw_23}

raw_23 [label="raw"]


// END RANK prose_20

raw_23 -> leaf_24
leaf_24  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This has the verbs:
"]
// END RANK raw_23

section_21 -> { header_25 prose_26 prose_27 prose_28 prose_29}
{rank=same; header_25 prose_26 prose_27 prose_28 prose_29}

header_25 [label="3 : Grammar / new(Grammar, g_func, meta_tables)"]

prose_26 [label="prose"]

prose_27 [label="prose"]

prose_28 [label="prose"]

prose_29 [label="prose"]


// END RANK section_21

header_25 -> leaf_30
leaf_30  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** Grammar / new(Grammar, g_func, meta_tables)"]
// END RANK header_25

prose_26 -> { raw_31}
{rank=same; raw_31}

raw_31 [label="raw"]


// END RANK prose_26

raw_31 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This takes a function, building and returning a grammar over it.
"]
// END RANK raw_31

prose_27 -> { raw_33}
{rank=same; raw_33}

raw_33 [label="raw"]


// END RANK prose_27

raw_33 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
  - #params
    - Grammar :  The __call object
    - g_func  :  The function(_ENV) grammar
    - meta_tables :  A map of rule ids to metatables.  These should themsevles
             inherit from Node.
"]
// END RANK raw_33

prose_28 -> { raw_35}
{rank=same; raw_35}

raw_35 [label="raw"]


// END RANK prose_28

raw_35 -> leaf_36
leaf_36  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The constructor handles building the metatable stack so that the table it returns
works like a function over a string returning a Node. 
"]
// END RANK raw_35

prose_29 -> { raw_37 prespace_38 literal_39 raw_40 link_41 raw_42}
{rank=same; raw_37 prespace_38 literal_39 raw_40 link_41 raw_42}

raw_37 [label="raw"]

prespace_38 [label="prespace"]

literal_39 [label="literal"]

raw_40 [label="raw"]

link_41 [label="link"]

raw_42 [label="raw"]


// END RANK prose_29

raw_37 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Also automated: If a string isn't provided in"]
// END RANK raw_37

prespace_38 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_38

literal_39 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label="meta_tables"]
// END RANK literal_39

raw_40 -> leaf_46
leaf_46  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", the Node metatable
is assigned. I also have some notes on the "]
// END RANK raw_40

link_41 -> { anchortext_47 url_48}
{rank=same; anchortext_47 url_48}

anchortext_47 [label="anchortext"]

url_48 [label="url"]


// END RANK link_41

anchortext_47 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Node class"]
// END RANK anchortext_47

url_48 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label="./node"]
// END RANK url_48

raw_42 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".

"]
// END RANK raw_42

section_6 -> { header_52 prose_53}
{rank=same; header_52 prose_53}

header_52 [label="2 : Node class"]

prose_53 [label="prose"]


// END RANK section_6

header_52 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ode class

  C"]
// END RANK header_52

prose_53 -> { raw_55 link_56 raw_57}
{rank=same; raw_55 link_56 raw_57}

raw_55 [label="raw"]

link_56 [label="link"]

raw_57 [label="raw"]


// END RANK prose_53

raw_55 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  Covered "]
// END RANK raw_55

link_56 -> { anchortext_59 url_60}
{rank=same; anchortext_59 url_60}

anchortext_59 [label="anchortext"]

url_60 [label="url"]


// END RANK link_56

anchortext_59 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label="here"]
// END RANK anchortext_59

url_60 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label="./node"]
// END RANK url_60

raw_57 -> leaf_63
leaf_63  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_57

section_7 -> { header_64 prose_65 prose_66}
{rank=same; header_64 prose_65 prose_66}

header_64 [label="2 : Forest class"]

prose_65 [label="prose"]

prose_66 [label="prose"]


// END RANK section_7

header_64 -> leaf_67
leaf_67  [color=Gray,shape=rectangle,fontname=Inconsolata,label="orest class

  T"]
// END RANK header_64

prose_65 -> { raw_68 prespace_69 literal_70 raw_71}
{rank=same; raw_68 prespace_69 literal_70 raw_71}

raw_68 [label="raw"]

prespace_69 [label="prespace"]

literal_70 [label="literal"]

raw_71 [label="raw"]


// END RANK prose_65

raw_68 -> leaf_72
leaf_72  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This is just an array of Nodes offering a familiar"]
// END RANK raw_68

prespace_69 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_69

literal_70 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label="select"]
// END RANK literal_70

raw_71 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" etc interface.
"]
// END RANK raw_71

prose_66 -> { raw_76}
{rank=same; raw_76}

raw_76 [label="raw"]


// END RANK prose_66

raw_76 -> leaf_77
leaf_77  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are the only classes which should exist once this is cleaned up. "]
// END RANK raw_76


}
