digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 40"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-35"]


section_1 -> { header_2 prose_3 prose_4 section_5 section_6 section_7}
{rank=same; header_2 prose_3 prose_4 section_5 section_6 section_7}

header_2 [label="1 : Pegylator and the Node class"]

prose_3 [label="prose"]

prose_4 [label="prose"]

section_5 [label="section: 10-13"]

section_6 [label="section: 31-35"]

section_7 [label="section: 36-40"]


prose_3 -> { raw_8}
{rank=same; raw_8}

raw_8 [label="raw"]


raw_8 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  Current grym has a nodule of undigested code in the =/peg= directory.
This is early 2015 era stuff, and is built somewhat blindly upon epnf as I
found it on the internet.
"]
prose_4 -> { raw_10}
{rank=same; raw_10}

raw_10 [label="raw"]


raw_10 -> leaf_11
leaf_11  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It needs a substantial refactor. 
"]
section_5 -> { header_12 prose_13 section_14}
{rank=same; header_12 prose_13 section_14}

header_12 [label="2 : Grammar class"]

prose_13 [label="prose"]

section_14 [label="section: 14-30"]


prose_13 -> { raw_15}
{rank=same; raw_15}

raw_15 [label="raw"]


raw_15 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This has the verbs:
"]
section_14 -> { header_17 prose_18 prose_19 prose_20 prose_21}
{rank=same; header_17 prose_18 prose_19 prose_20 prose_21}

header_17 [label="3 : Grammar / new(Grammar, g_func, meta_tables)"]

prose_18 [label="prose"]

prose_19 [label="prose"]

prose_20 [label="prose"]

prose_21 [label="prose"]


prose_18 -> { raw_22}
{rank=same; raw_22}

raw_22 [label="raw"]


raw_22 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This takes a function, building and returning a grammar over it.
"]
prose_19 -> { raw_24}
{rank=same; raw_24}

raw_24 [label="raw"]


raw_24 -> leaf_25
leaf_25  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
  - #params
    - Grammar :  The __call object
    - g_func  :  The function(_ENV) grammar
    - meta_tables :  A map of rule ids to metatables.  These should themsevles
             inherit from Node.
"]
prose_20 -> { raw_26}
{rank=same; raw_26}

raw_26 [label="raw"]


raw_26 -> leaf_27
leaf_27  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The constructor handles building the metatable stack so that the table it returns
works like a function over a string returning a Node. 
"]
prose_21 -> { raw_28}
{rank=same; raw_28}

raw_28 [label="raw"]


raw_28 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Also automated: If a string isn't provided in =meta_tables=, the Node metatable
is assigned. I also have some notes on the [[Node class][./node]].

"]
section_6 -> { header_30 prose_31}
{rank=same; header_30 prose_31}

header_30 [label="2 : Node class"]

prose_31 [label="prose"]


prose_31 -> { raw_32}
{rank=same; raw_32}

raw_32 [label="raw"]


raw_32 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  Covered [[here][./node]]

"]
section_7 -> { header_34 prose_35 prose_36}
{rank=same; header_34 prose_35 prose_36}

header_34 [label="2 : Forest class"]

prose_35 [label="prose"]

prose_36 [label="prose"]


prose_35 -> { raw_37}
{rank=same; raw_37}

raw_37 [label="raw"]


raw_37 -> leaf_38
leaf_38  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This is just an array of Nodes offering a familiar =select= etc interface.
"]
prose_36 -> { raw_39}
{rank=same; raw_39}

raw_39 [label="raw"]


raw_39 -> leaf_40
leaf_40  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are the only classes which should exist once this is cleaned up. "]

}
