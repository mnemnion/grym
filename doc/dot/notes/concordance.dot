digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 234"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-14"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 prose_5 section_6}
{rank=same; header_2 prose_3 prose_4 prose_5 section_6}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

prose_4 [label="prose"]

prose_5 [label="prose"]

section_6 [label="section: 15-232"]


// END RANK section_1

header_2 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}
{rank=same; raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}

raw_8 [label="raw"]

prespace_9 [label="prespace"]

bold_10 [label="bold"]

raw_11 [label="raw"]

prespace_12 [label="prespace"]

literal_13 [label="literal"]

raw_14 [label="raw"]


// END RANK prose_3

raw_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_8

prespace_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_9

bold_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_10

raw_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_11

prespace_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_12

literal_13 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_13

raw_14 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_14

prose_4 -> { raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}
{rank=same; raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}

raw_22 [label="raw"]

prespace_23 [label="prespace"]

literal_24 [label="literal"]

raw_25 [label="raw"]

prespace_26 [label="prespace"]

literal_27 [label="literal"]

raw_28 [label="raw"]


// END RANK prose_4

raw_22 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This describes two distinct"]
// END RANK raw_22

prespace_23 -> leaf_30
leaf_30  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_23

literal_24 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="SQLite"]
// END RANK literal_24

raw_25 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" databases, one held in common throughout"]
// END RANK raw_25

prespace_26 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_26

literal_27 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
// END RANK literal_27

raw_28 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and another which is personal and depends on the documents on the
computer in question.
"]
// END RANK raw_28

prose_5 -> { raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}
{rank=same; raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}

raw_36 [label="raw"]

prespace_37 [label="prespace"]

literal_38 [label="literal"]

raw_39 [label="raw"]

prespace_40 [label="prespace"]

literal_41 [label="literal"]

raw_42 [label="raw"]

prespace_43 [label="prespace"]

literal_44 [label="literal"]

raw_45 [label="raw"]

prespace_46 [label="prespace"]

literal_47 [label="literal"]

raw_48 [label="raw"]


// END RANK prose_5

raw_36 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are merged and queried in common, so the schema are interleaved.  The
basic distinction is that"]
// END RANK raw_36

prespace_37 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_37

literal_38 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table"]
// END RANK literal_38

raw_39 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_39

prespace_40 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_40

literal_41 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.cyclopedia"]
// END RANK literal_41

raw_42 -> leaf_55
leaf_55  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", and"]
// END RANK raw_42

prespace_43 -> leaf_56
leaf_56  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_43

literal_44 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table_in"]
// END RANK literal_44

raw_45 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
is in"]
// END RANK raw_45

prespace_46 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_46

literal_47 -> leaf_60
leaf_60  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.concordance"]
// END RANK literal_47

raw_48 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".

"]
// END RANK raw_48

section_6 -> { header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}
{rank=same; header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}

header_62 [label="2 : SQL for concordance"]

prose_63 [label="prose"]

prose_64 [label="prose"]

section_65 [label="section: 24-74"]

section_66 [label="section: 75-117"]

section_67 [label="section: 118-156"]

section_68 [label="section: 157-205"]

section_69 [label="section: 206-213"]

section_70 [label="section: 214-216"]

section_71 [label="section: 217-218"]

section_72 [label="section: 219-220"]

section_73 [label="section: 221-222"]

section_74 [label="section: 223-225"]

section_75 [label="section: 226-228"]

section_76 [label="section: 229-230"]

section_77 [label="section: 231-232"]

section_78 [label="section: 233-234"]


// END RANK section_6

header_62 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_62

prose_63 -> { raw_80 prespace_81 literal_82 raw_83}
{rank=same; raw_80 prespace_81 literal_82 raw_83}

raw_80 [label="raw"]

prespace_81 [label="prespace"]

literal_82 [label="literal"]

raw_83 [label="raw"]


// END RANK prose_63

raw_80 -> leaf_84
leaf_84  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_80

prespace_81 -> leaf_85
leaf_85  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_81

literal_82 -> leaf_86
leaf_86  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_82

raw_83 -> leaf_87
leaf_87  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_83

prose_64 -> { raw_88}
{rank=same; raw_88}

raw_88 [label="raw"]


// END RANK prose_64

raw_88 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[@concordance/concordance]] is found at [[sql-strip.lua]
[@/etc/sql-strip.lua]].
"]
// END RANK raw_88

section_65 -> { header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100 prose_101 prose_102 prose_103}
{rank=same; header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100 prose_101 prose_102 prose_103}

header_90 [label="3 : codepoint"]

prose_91 [label="prose"]

prose_92 [label="prose"]

prose_93 [label="prose"]

codeblock_94 [label="code block 35-46"]

prose_95 [label="prose"]

prose_96 [label="prose"]

prose_97 [label="prose"]

prose_98 [label="prose"]

prose_99 [label="prose"]

prose_100 [label="prose"]

prose_101 [label="prose"]

prose_102 [label="prose"]

prose_103 [label="prose"]


// END RANK section_65

header_90 -> leaf_104
leaf_104  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_90

prose_91 -> { raw_105 prespace_106 literal_107 raw_108 prespace_109 literal_110 raw_111}
{rank=same; raw_105 prespace_106 literal_107 raw_108 prespace_109 literal_110 raw_111}

raw_105 [label="raw"]

prespace_106 [label="prespace"]

literal_107 [label="literal"]

raw_108 [label="raw"]

prespace_109 [label="prespace"]

literal_110 [label="literal"]

raw_111 [label="raw"]


// END RANK prose_91

raw_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_105

prespace_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_106

literal_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_107

raw_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_108

prespace_109 -> leaf_116
leaf_116  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_109

literal_110 -> leaf_117
leaf_117  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_110

raw_111 -> leaf_118
leaf_118  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_111

prose_92 -> { raw_119}
{rank=same; raw_119}

raw_119 [label="raw"]


// END RANK prose_92

raw_119 -> leaf_120
leaf_120  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_119

prose_93 -> { raw_121 prespace_122 literal_123 raw_124 prespace_125 literal_126 raw_127 prespace_128 literal_129 raw_130}
{rank=same; raw_121 prespace_122 literal_123 raw_124 prespace_125 literal_126 raw_127 prespace_128 literal_129 raw_130}

raw_121 [label="raw"]

prespace_122 [label="prespace"]

literal_123 [label="literal"]

raw_124 [label="raw"]

prespace_125 [label="prespace"]

literal_126 [label="literal"]

raw_127 [label="raw"]

prespace_128 [label="prespace"]

literal_129 [label="literal"]

raw_130 [label="raw"]


// END RANK prose_93

raw_121 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_121

prespace_122 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_122

literal_123 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_123

raw_124 -> leaf_134
leaf_134  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_124

prespace_125 -> leaf_135
leaf_135  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_125

literal_126 -> leaf_136
leaf_136  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_126

raw_127 -> leaf_137
leaf_137  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_127

prespace_128 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_128

literal_129 -> leaf_139
leaf_139  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_129

raw_130 -> leaf_140
leaf_140  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_130

codeblock_94 -> leaf_141
leaf_141  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING UNIQUE NOT NULL,
   destription STRING NOT NULL,
   FOREIGN KEY version
      REFERENCES versin (version_ID)
);"]
// END RANK codeblock_94

prose_95 -> { raw_142}
{rank=same; raw_142}

raw_142 [label="raw"]


// END RANK prose_95

raw_142 -> leaf_143
leaf_143  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_142

prose_96 -> { raw_144 prespace_145 literal_146 raw_147 prespace_148 literal_149 raw_150}
{rank=same; raw_144 prespace_145 literal_146 raw_147 prespace_148 literal_149 raw_150}

raw_144 [label="raw"]

prespace_145 [label="prespace"]

literal_146 [label="literal"]

raw_147 [label="raw"]

prespace_148 [label="prespace"]

literal_149 [label="literal"]

raw_150 [label="raw"]


// END RANK prose_96

raw_144 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_144

prespace_145 -> leaf_152
leaf_152  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_145

literal_146 -> leaf_153
leaf_153  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_146

raw_147 -> leaf_154
leaf_154  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_147

prespace_148 -> leaf_155
leaf_155  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_148

literal_149 -> leaf_156
leaf_156  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_149

raw_150 -> leaf_157
leaf_157  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_150

prose_97 -> { raw_158}
{rank=same; raw_158}

raw_158 [label="raw"]


// END RANK prose_97

raw_158 -> leaf_159
leaf_159  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_158

prose_98 -> { raw_160 prespace_161 literal_162 raw_163}
{rank=same; raw_160 prespace_161 literal_162 raw_163}

raw_160 [label="raw"]

prespace_161 [label="prespace"]

literal_162 [label="literal"]

raw_163 [label="raw"]


// END RANK prose_98

raw_160 -> leaf_164
leaf_164  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_160

prespace_161 -> leaf_165
leaf_165  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_161

literal_162 -> leaf_166
leaf_166  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_162

raw_163 -> leaf_167
leaf_167  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_163

prose_99 -> { raw_168 prespace_169 literal_170 raw_171}
{rank=same; raw_168 prespace_169 literal_170 raw_171}

raw_168 [label="raw"]

prespace_169 [label="prespace"]

literal_170 [label="literal"]

raw_171 [label="raw"]


// END RANK prose_99

raw_168 -> leaf_172
leaf_172  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_168

prespace_169 -> leaf_173
leaf_173  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_169

literal_170 -> leaf_174
leaf_174  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_170

raw_171 -> leaf_175
leaf_175  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_171

prose_100 -> { raw_176 prespace_177 literal_178 raw_179}
{rank=same; raw_176 prespace_177 literal_178 raw_179}

raw_176 [label="raw"]

prespace_177 [label="prespace"]

literal_178 [label="literal"]

raw_179 [label="raw"]


// END RANK prose_100

raw_176 -> leaf_180
leaf_180  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_176

prespace_177 -> leaf_181
leaf_181  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_177

literal_178 -> leaf_182
leaf_182  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_178

raw_179 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E».
"]
// END RANK raw_179

prose_101 -> { raw_184}
{rank=same; raw_184}

raw_184 [label="raw"]


// END RANK prose_101

raw_184 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Note the use of double guillemets: «», they are required.
"]
// END RANK raw_184

prose_102 -> { raw_186 prespace_187 literal_188 raw_189}
{rank=same; raw_186 prespace_187 literal_188 raw_189}

raw_186 [label="raw"]

prespace_187 [label="prespace"]

literal_188 [label="literal"]

raw_189 [label="raw"]


// END RANK prose_102

raw_186 -> leaf_190
leaf_190  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_186

prespace_187 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_187

literal_188 -> leaf_192
leaf_192  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_188

raw_189 -> leaf_193
leaf_193  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_189

prose_103 -> { raw_194 prespace_195 literal_196 raw_197}
{rank=same; raw_194 prespace_195 literal_196 raw_197}

raw_194 [label="raw"]

prespace_195 [label="prespace"]

literal_196 [label="literal"]

raw_197 [label="raw"]


// END RANK prose_103

raw_194 -> leaf_198
leaf_198  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - version      :  Foreign key to a"]
// END RANK raw_194

prespace_195 -> leaf_199
leaf_199  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_195

literal_196 -> leaf_200
leaf_200  [color=Gray,shape=rectangle,fontname=Inconsolata,label="version"]
// END RANK literal_196

raw_197 -> leaf_201
leaf_201  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" table. Not sure we actually
                     need this come to think of it.

"]
// END RANK raw_197

section_66 -> { header_202 prose_203 codeblock_204 prose_205 prose_206 prose_207 prose_208 prose_209 prose_210 prose_211 prose_212 prose_213}
{rank=same; header_202 prose_203 codeblock_204 prose_205 prose_206 prose_207 prose_208 prose_209 prose_210 prose_211 prose_212 prose_213}

header_202 [label="3 : codepoint_in"]

prose_203 [label="prose"]

codeblock_204 [label="code block 80-97"]

prose_205 [label="prose"]

prose_206 [label="prose"]

prose_207 [label="prose"]

prose_208 [label="prose"]

prose_209 [label="prose"]

prose_210 [label="prose"]

prose_211 [label="prose"]

prose_212 [label="prose"]

prose_213 [label="prose"]


// END RANK section_66

header_202 -> leaf_214
leaf_214  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_202

prose_203 -> { raw_215 prespace_216 literal_217 raw_218}
{rank=same; raw_215 prespace_216 literal_217 raw_218}

raw_215 [label="raw"]

prespace_216 [label="prespace"]

literal_217 [label="literal"]

raw_218 [label="raw"]


// END RANK prose_203

raw_215 -> leaf_219
leaf_219  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_215

prespace_216 -> leaf_220
leaf_220  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_216

literal_217 -> leaf_221
leaf_221  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_217

raw_218 -> leaf_222
leaf_222  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_218

codeblock_204 -> leaf_223
leaf_223  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   codepoint INTEGER NOT NULL,
   doc INTEGER NOT NULL,
   document INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
   FOREIGN KEY document
      REFERENCES document (document_id),"]
// END RANK codeblock_204

prose_205 -> { raw_224}
{rank=same; raw_224}

raw_224 [label="raw"]


// END RANK prose_205

raw_224 -> leaf_225
leaf_225  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_224

prose_206 -> { raw_226}
{rank=same; raw_226}

raw_226 [label="raw"]


// END RANK prose_206

raw_226 -> leaf_227
leaf_227  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_226

prose_207 -> { raw_228}
{rank=same; raw_228}

raw_228 [label="raw"]


// END RANK prose_207

raw_228 -> leaf_229
leaf_229  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_228

prose_208 -> { raw_230}
{rank=same; raw_230}

raw_230 [label="raw"]


// END RANK prose_208

raw_230 -> leaf_231
leaf_231  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_230

prose_209 -> { raw_232}
{rank=same; raw_232}

raw_232 [label="raw"]


// END RANK prose_209

raw_232 -> leaf_233
leaf_233  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_232

prose_210 -> { raw_234}
{rank=same; raw_234}

raw_234 [label="raw"]


// END RANK prose_210

raw_234 -> leaf_235
leaf_235  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_234

prose_211 -> { raw_236}
{rank=same; raw_236}

raw_236 [label="raw"]


// END RANK prose_211

raw_236 -> leaf_237
leaf_237  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  Foreign key to the codepoint entry.
"]
// END RANK raw_236

prose_212 -> { raw_238}
{rank=same; raw_238}

raw_238 [label="raw"]


// END RANK prose_212

raw_238 -> leaf_239
leaf_239  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_238

prose_213 -> { raw_240}
{rank=same; raw_240}

raw_240 [label="raw"]


// END RANK prose_213

raw_240 -> leaf_241
leaf_241  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.
"]
// END RANK raw_240

section_67 -> { header_242 prose_243 prose_244 codeblock_245 prose_246 prose_247 prose_248 prose_249 prose_250}
{rank=same; header_242 prose_243 prose_244 codeblock_245 prose_246 prose_247 prose_248 prose_249 prose_250}

header_242 [label="3 : word"]

prose_243 [label="prose"]

prose_244 [label="prose"]

codeblock_245 [label="code block 127-137"]

prose_246 [label="prose"]

prose_247 [label="prose"]

prose_248 [label="prose"]

prose_249 [label="prose"]

prose_250 [label="prose"]


// END RANK section_67

header_242 -> leaf_251
leaf_251  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_242

prose_243 -> { raw_252 prespace_253 literal_254 raw_255}
{rank=same; raw_252 prespace_253 literal_254 raw_255}

raw_252 [label="raw"]

prespace_253 [label="prespace"]

literal_254 [label="literal"]

raw_255 [label="raw"]


// END RANK prose_243

raw_252 -> leaf_256
leaf_256  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

A"]
// END RANK raw_252

prespace_253 -> leaf_257
leaf_257  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_253

literal_254 -> leaf_258
leaf_258  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_254

raw_255 -> leaf_259
leaf_259  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is what is says, an entry for a single word.
"]
// END RANK raw_255

prose_244 -> { raw_260}
{rank=same; raw_260}

raw_260 [label="raw"]


// END RANK prose_244

raw_260 -> leaf_261
leaf_261  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that this concept is very much differently defined for different
languages, but it's coherent and modular enough to work with them smoothly,
granting that the name itself will be inaccurate when considering, say,
Semitic roots.
"]
// END RANK raw_260

codeblock_245 -> leaf_262
leaf_262  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word STRING UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling BLOB NOT NULL ON CONFLICT DO NOTHING,
   thesaurus INTEGER,
   FOREIGN KEY thesaurus
      REFERENCES thesaurus (thesaurus_id)
);"]
// END RANK codeblock_245

prose_246 -> { raw_263}
{rank=same; raw_263}

raw_263 [label="raw"]


// END RANK prose_246

raw_263 -> leaf_264
leaf_264  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_263

prose_247 -> { raw_265 prespace_266 bold_267 raw_268}
{rank=same; raw_265 prespace_266 bold_267 raw_268}

raw_265 [label="raw"]

prespace_266 [label="prespace"]

bold_267 [label="bold"]

raw_268 [label="raw"]


// END RANK prose_247

raw_265 -> leaf_269
leaf_269  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word : A"]
// END RANK raw_265

prespace_266 -> leaf_270
leaf_270  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_266

bold_267 -> leaf_271
leaf_271  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_267

raw_268 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
"]
// END RANK raw_268

prose_248 -> { raw_273}
{rank=same; raw_273}

raw_273 [label="raw"]


// END RANK prose_248

raw_273 -> leaf_274
leaf_274  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - spelling : JSON array of the numeric codepoints specifying the spelling.
"]
// END RANK raw_273

prose_249 -> { raw_275}
{rank=same; raw_275}

raw_275 [label="raw"]


// END RANK prose_249

raw_275 -> leaf_276
leaf_276  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - thesaurus :  Key to a thesaurus entry for the word.
                  The thesaurus will have dictionary fields and is intended
                  for translation across languages as well as within them.
                  Basically a personal wiktionary.

"]
// END RANK raw_275

prose_250 -> { raw_277 prespace_278 literal_279 raw_280}
{rank=same; raw_277 prespace_278 literal_279 raw_280}

raw_277 [label="raw"]

prespace_278 [label="prespace"]

literal_279 [label="literal"]

raw_280 [label="raw"]


// END RANK prose_250

raw_277 -> leaf_281
leaf_281  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
word is fairly straightforward to populate as we go, although the exact
rules for what constitutes a word and what punctuation and whitespace vary
somewhat, the differences are well defined by the"]
// END RANK raw_277

prespace_278 -> leaf_282
leaf_282  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_278

literal_279 -> leaf_283
leaf_283  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_279

raw_280 -> leaf_284
leaf_284  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" standard, wo we merely
 aad new ones as we find them.

"]
// END RANK raw_280

section_68 -> { header_285 prose_286 codeblock_287 prose_288 prose_289 prose_290 prose_291 prose_292 prose_293 prose_294 prose_295 prose_296 prose_297}
{rank=same; header_285 prose_286 codeblock_287 prose_288 prose_289 prose_290 prose_291 prose_292 prose_293 prose_294 prose_295 prose_296 prose_297}

header_285 [label="3 : word_in"]

prose_286 [label="prose"]

codeblock_287 [label="code block 161-178"]

prose_288 [label="prose"]

prose_289 [label="prose"]

prose_290 [label="prose"]

prose_291 [label="prose"]

prose_292 [label="prose"]

prose_293 [label="prose"]

prose_294 [label="prose"]

prose_295 [label="prose"]

prose_296 [label="prose"]

prose_297 [label="prose"]


// END RANK section_68

header_285 -> leaf_298
leaf_298  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_285

prose_286 -> { raw_299 prespace_300 literal_301 raw_302}
{rank=same; raw_299 prespace_300 literal_301 raw_302}

raw_299 [label="raw"]

prespace_300 [label="prespace"]

literal_301 [label="literal"]

raw_302 [label="raw"]


// END RANK prose_286

raw_299 -> leaf_303
leaf_303  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Table representing a single word in a given"]
// END RANK raw_299

prespace_300 -> leaf_304
leaf_304  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_300

literal_301 -> leaf_305
leaf_305  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_301

raw_302 -> leaf_306
leaf_306  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_302

codeblock_287 -> leaf_307
leaf_307  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word_repr STRING NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   word INTEGER,
   doc INTEGER,
   document INTEGER,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREIGN KEY doc
      REFERENCE doc (doc_id)
   FOREIGN KEY document
      REFERENCES document (document_id),"]
// END RANK codeblock_287

prose_288 -> { raw_308}
{rank=same; raw_308}

raw_308 [label="raw"]


// END RANK prose_288

raw_308 -> leaf_309
leaf_309  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_308

prose_289 -> { raw_310 prespace_311 bold_312 raw_313}
{rank=same; raw_310 prespace_311 bold_312 raw_313}

raw_310 [label="raw"]

prespace_311 [label="prespace"]

bold_312 [label="bold"]

raw_313 [label="raw"]


// END RANK prose_289

raw_310 -> leaf_314
leaf_314  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word_repr :  A"]
// END RANK raw_310

prespace_311 -> leaf_315
leaf_315  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_311

bold_312 -> leaf_316
leaf_316  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_312

raw_313 -> leaf_317
leaf_317  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
                  Important because we don't consider zebra and zebras two
                  different words.
"]
// END RANK raw_313

prose_290 -> { raw_318}
{rank=same; raw_318}

raw_318 [label="raw"]


// END RANK prose_290

raw_318 -> leaf_319
leaf_319  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_318

prose_291 -> { raw_320}
{rank=same; raw_320}

raw_320 [label="raw"]


// END RANK prose_291

raw_320 -> leaf_321
leaf_321  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_320

prose_292 -> { raw_322}
{rank=same; raw_322}

raw_322 [label="raw"]


// END RANK prose_292

raw_322 -> leaf_323
leaf_323  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_322

prose_293 -> { raw_324}
{rank=same; raw_324}

raw_324 [label="raw"]


// END RANK prose_293

raw_324 -> leaf_325
leaf_325  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_324

prose_294 -> { raw_326}
{rank=same; raw_326}

raw_326 [label="raw"]


// END RANK prose_294

raw_326 -> leaf_327
leaf_327  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word      :  Foreign key to the word entry.
"]
// END RANK raw_326

prose_295 -> { raw_328}
{rank=same; raw_328}

raw_328 [label="raw"]


// END RANK prose_295

raw_328 -> leaf_329
leaf_329  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_328

prose_296 -> { raw_330}
{rank=same; raw_330}

raw_330 [label="raw"]


// END RANK prose_296

raw_330 -> leaf_331
leaf_331  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.

"]
// END RANK raw_330

prose_297 -> { raw_332}
{rank=same; raw_332}

raw_332 [label="raw"]


// END RANK prose_297

raw_332 -> leaf_333
leaf_333  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This table should be deduplicated between editions of documents to save
storage space; adding one word should cause one line's worth of changes.

"]
// END RANK raw_332

section_69 -> { header_334 prose_335}
{rank=same; header_334 prose_335}

header_334 [label="3 : phrase"]

prose_335 [label="prose"]


// END RANK section_69

header_334 -> leaf_336
leaf_336  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_334

prose_335 -> { raw_337 prespace_338 literal_339 raw_340}
{rank=same; raw_337 prespace_338 literal_339 raw_340}

raw_337 [label="raw"]

prespace_338 [label="prespace"]

literal_339 [label="literal"]

raw_340 [label="raw"]


// END RANK prose_335

raw_337 -> leaf_341
leaf_341  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_337

prespace_338 -> leaf_342
leaf_342  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_338

literal_339 -> leaf_343
leaf_343  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_339

raw_340 -> leaf_344
leaf_344  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_340

section_70 -> { header_345 prose_346}
{rank=same; header_345 prose_346}

header_345 [label="3 : phrase_in"]

prose_346 [label="prose"]


// END RANK section_70

header_345 -> leaf_347
leaf_347  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_345

prose_346 -> { raw_348}
{rank=same; raw_348}

raw_348 [label="raw"]


// END RANK prose_346

raw_348 -> leaf_349
leaf_349  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_348

section_71 -> { header_350 prose_351}
{rank=same; header_350 prose_351}

header_350 [label="3 : line"]

prose_351 [label="prose"]


// END RANK section_71

header_350 -> leaf_352
leaf_352  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_350

prose_351 -> { raw_353}
{rank=same; raw_353}

raw_353 [label="raw"]


// END RANK prose_351

raw_353 -> leaf_354
leaf_354  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_353

section_72 -> { header_355 prose_356}
{rank=same; header_355 prose_356}

header_355 [label="3 : line_in"]

prose_356 [label="prose"]


// END RANK section_72

header_355 -> leaf_357
leaf_357  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_355

prose_356 -> { raw_358}
{rank=same; raw_358}

raw_358 [label="raw"]


// END RANK prose_356

raw_358 -> leaf_359
leaf_359  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_358

section_73 -> { header_360 prose_361}
{rank=same; header_360 prose_361}

header_360 [label="3 : sentence"]

prose_361 [label="prose"]


// END RANK section_73

header_360 -> leaf_362
leaf_362  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_360

prose_361 -> { raw_363}
{rank=same; raw_363}

raw_363 [label="raw"]


// END RANK prose_361

raw_363 -> leaf_364
leaf_364  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_363

section_74 -> { header_365 prose_366}
{rank=same; header_365 prose_366}

header_365 [label="3 : sentence_in"]

prose_366 [label="prose"]


// END RANK section_74

header_365 -> leaf_367
leaf_367  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_365

prose_366 -> { raw_368}
{rank=same; raw_368}

raw_368 [label="raw"]


// END RANK prose_366

raw_368 -> leaf_369
leaf_369  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_368

section_75 -> { header_370 prose_371}
{rank=same; header_370 prose_371}

header_370 [label="3 : block"]

prose_371 [label="prose"]


// END RANK section_75

header_370 -> leaf_372
leaf_372  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_370

prose_371 -> { raw_373}
{rank=same; raw_373}

raw_373 [label="raw"]


// END RANK prose_371

raw_373 -> leaf_374
leaf_374  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_373

section_76 -> { header_375 prose_376}
{rank=same; header_375 prose_376}

header_375 [label="3 : block_in"]

prose_376 [label="prose"]


// END RANK section_76

header_375 -> leaf_377
leaf_377  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_375

prose_376 -> { raw_378}
{rank=same; raw_378}

raw_378 [label="raw"]


// END RANK prose_376

raw_378 -> leaf_379
leaf_379  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_378

section_77 -> { header_380 prose_381}
{rank=same; header_380 prose_381}

header_380 [label="3 : section"]

prose_381 [label="prose"]


// END RANK section_77

header_380 -> leaf_382
leaf_382  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_380

prose_381 -> { raw_383}
{rank=same; raw_383}

raw_383 [label="raw"]


// END RANK prose_381

raw_383 -> leaf_384
leaf_384  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_383

section_78 -> { header_385 prose_386}
{rank=same; header_385 prose_386}

header_385 [label="3 : section_in"]

prose_386 [label="prose"]


// END RANK section_78

header_385 -> leaf_387
leaf_387  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_385

prose_386 -> { raw_388}
{rank=same; raw_388}

raw_388 [label="raw"]


// END RANK prose_386

raw_388 -> leaf_389
leaf_389  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_388


}
