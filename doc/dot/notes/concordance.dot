digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 232"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-14"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 prose_5 section_6}
{rank=same; header_2 prose_3 prose_4 prose_5 section_6}

header_2 [label="1 : Concordance"]

prose_3 [label="prose"]

prose_4 [label="prose"]

prose_5 [label="prose"]

section_6 [label="section: 15-230"]


// END RANK section_1

header_2 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance"]
// END RANK header_2

prose_3 -> { raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}
{rank=same; raw_8 prespace_9 bold_10 raw_11 prespace_12 literal_13 raw_14}

raw_8 [label="raw"]

prespace_9 [label="prespace"]

bold_10 [label="bold"]

raw_11 [label="raw"]

prespace_12 [label="prespace"]

literal_13 [label="literal"]

raw_14 [label="raw"]


// END RANK prose_3

raw_8 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the SQLite for a"]
// END RANK raw_8

prespace_9 -> leaf_16
leaf_16  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_9

bold_10 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="concordance"]
// END RANK bold_10

raw_11 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which is in essence the
co-product of a"]
// END RANK raw_11

prespace_12 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_12

literal_13 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_13

raw_14 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_14

prose_4 -> { raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}
{rank=same; raw_22 prespace_23 literal_24 raw_25 prespace_26 literal_27 raw_28}

raw_22 [label="raw"]

prespace_23 [label="prespace"]

literal_24 [label="literal"]

raw_25 [label="raw"]

prespace_26 [label="prespace"]

literal_27 [label="literal"]

raw_28 [label="raw"]


// END RANK prose_4

raw_22 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This describes two distinct"]
// END RANK raw_22

prespace_23 -> leaf_30
leaf_30  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_23

literal_24 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="SQLite"]
// END RANK literal_24

raw_25 -> leaf_32
leaf_32  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" databases, one held in common throughout"]
// END RANK raw_25

prespace_26 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_26

literal_27 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
// END RANK literal_27

raw_28 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and another which is personal and depends on the documents on the
computer in question.
"]
// END RANK raw_28

prose_5 -> { raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}
{rank=same; raw_36 prespace_37 literal_38 raw_39 prespace_40 literal_41 raw_42 prespace_43 literal_44 raw_45 prespace_46 literal_47 raw_48}

raw_36 [label="raw"]

prespace_37 [label="prespace"]

literal_38 [label="literal"]

raw_39 [label="raw"]

prespace_40 [label="prespace"]

literal_41 [label="literal"]

raw_42 [label="raw"]

prespace_43 [label="prespace"]

literal_44 [label="literal"]

raw_45 [label="raw"]

prespace_46 [label="prespace"]

literal_47 [label="literal"]

raw_48 [label="raw"]


// END RANK prose_5

raw_36 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are merged and queried in common, so the schema are interleaved.  The
basic distinction is that"]
// END RANK raw_36

prespace_37 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_37

literal_38 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table"]
// END RANK literal_38

raw_39 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_39

prespace_40 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_40

literal_41 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.cyclopedia"]
// END RANK literal_41

raw_42 -> leaf_55
leaf_55  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", and"]
// END RANK raw_42

prespace_43 -> leaf_56
leaf_56  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_43

literal_44 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label="table_in"]
// END RANK literal_44

raw_45 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
is in"]
// END RANK raw_45

prespace_46 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_46

literal_47 -> leaf_60
leaf_60  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge.concordance"]
// END RANK literal_47

raw_48 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".

"]
// END RANK raw_48

section_6 -> { header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}
{rank=same; header_62 prose_63 prose_64 section_65 section_66 section_67 section_68 section_69 section_70 section_71 section_72 section_73 section_74 section_75 section_76 section_77 section_78}

header_62 [label="2 : SQL for concordance"]

prose_63 [label="prose"]

prose_64 [label="prose"]

section_65 [label="section: 24-72"]

section_66 [label="section: 73-115"]

section_67 [label="section: 116-154"]

section_68 [label="section: 155-203"]

section_69 [label="section: 204-211"]

section_70 [label="section: 212-214"]

section_71 [label="section: 215-216"]

section_72 [label="section: 217-218"]

section_73 [label="section: 219-220"]

section_74 [label="section: 221-223"]

section_75 [label="section: 224-226"]

section_76 [label="section: 227-228"]

section_77 [label="section: 229-230"]

section_78 [label="section: 231-232"]


// END RANK section_6

header_62 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** SQL for concordance"]
// END RANK header_62

prose_63 -> { raw_80 prespace_81 literal_82 raw_83}
{rank=same; raw_80 prespace_81 literal_82 raw_83}

raw_80 [label="raw"]

prespace_81 [label="prespace"]

literal_82 [label="literal"]

raw_83 [label="raw"]


// END RANK prose_63

raw_80 -> leaf_84
leaf_84  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This file is being handled specially since we lack both transclusion and a way
to handle non-Lua languages in the"]
// END RANK raw_80

prespace_81 -> leaf_85
leaf_85  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_81

literal_82 -> leaf_86
leaf_86  [color=Gray,shape=rectangle,fontname=Inconsolata,label="knit"]
// END RANK literal_82

raw_83 -> leaf_87
leaf_87  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" phase.
"]
// END RANK raw_83

prose_64 -> { raw_88}
{rank=same; raw_88}

raw_88 [label="raw"]


// END RANK prose_64

raw_88 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The luajit script to translate this to [[concordance.orb]
[@concordance/concordance]] is found at [[sql-strip.lua]
[@/etc/sql-strip.lua]].
"]
// END RANK raw_88

section_65 -> { header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100}
{rank=same; header_90 prose_91 prose_92 prose_93 codeblock_94 prose_95 prose_96 prose_97 prose_98 prose_99 prose_100}

header_90 [label="3 : codepoint"]

prose_91 [label="prose"]

prose_92 [label="prose"]

prose_93 [label="prose"]

codeblock_94 [label="code block 35-46"]

prose_95 [label="prose"]

prose_96 [label="prose"]

prose_97 [label="prose"]

prose_98 [label="prose"]

prose_99 [label="prose"]

prose_100 [label="prose"]


// END RANK section_65

header_90 -> leaf_101
leaf_101  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint"]
// END RANK header_90

prose_91 -> { raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}
{rank=same; raw_102 prespace_103 literal_104 raw_105 prespace_106 literal_107 raw_108}

raw_102 [label="raw"]

prespace_103 [label="prespace"]

literal_104 [label="literal"]

raw_105 [label="raw"]

prespace_106 [label="prespace"]

literal_107 [label="literal"]

raw_108 [label="raw"]


// END RANK prose_91

raw_102 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This decribes an"]
// END RANK raw_102

prespace_103 -> leaf_110
leaf_110  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_103

literal_104 -> leaf_111
leaf_111  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ortho"]
// END RANK literal_104

raw_105 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" codepoint in"]
// END RANK raw_105

prespace_106 -> leaf_113
leaf_113  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_106

literal_107 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_107

raw_108 -> leaf_115
leaf_115  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" space.
"]
// END RANK raw_108

prose_92 -> { raw_116}
{rank=same; raw_116}

raw_116 [label="raw"]


// END RANK prose_92

raw_116 -> leaf_117
leaf_117  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Since this descends from Unicode and will stay compatible with that,
it defines a version, so a given codepoint is not unique except within a
version.
"]
// END RANK raw_116

prose_93 -> { raw_118 prespace_119 literal_120 raw_121 prespace_122 literal_123 raw_124 prespace_125 literal_126 raw_127}
{rank=same; raw_118 prespace_119 literal_120 raw_121 prespace_122 literal_123 raw_124 prespace_125 literal_126 raw_127}

raw_118 [label="raw"]

prespace_119 [label="prespace"]

literal_120 [label="literal"]

raw_121 [label="raw"]

prespace_122 [label="prespace"]

literal_123 [label="literal"]

raw_124 [label="raw"]

prespace_125 [label="prespace"]

literal_126 [label="literal"]

raw_127 [label="raw"]


// END RANK prose_93

raw_118 -> leaf_128
leaf_128  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Orb documents will be in"]
// END RANK raw_118

prespace_119 -> leaf_129
leaf_129  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_119

literal_120 -> leaf_130
leaf_130  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_120

raw_121 -> leaf_131
leaf_131  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", no exceptions, but"]
// END RANK raw_121

prespace_122 -> leaf_132
leaf_132  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_122

literal_123 -> leaf_133
leaf_133  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ggg"]
// END RANK literal_123

raw_124 -> leaf_134
leaf_134  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is in"]
// END RANK raw_124

prespace_125 -> leaf_135
leaf_135  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_125

literal_126 -> leaf_136
leaf_136  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Latin-1"]
// END RANK literal_126

raw_127 -> leaf_137
leaf_137  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
encoding, which is quite different.
"]
// END RANK raw_127

codeblock_94 -> leaf_138
leaf_138  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS codepoint (
   codepoint_id INTEGER PRIMARY KEY AUTOINCREMENT,
   codevalue NOT NULL,
   utf INTEGER default 1,
   category STRING NOT NULL DEFAULT 'utf',
   version STRING UNIQUE NOT NULL,
   destription STRING NOT NULL,
   FOREIGN KEY version
      REFERENCES versin (version_ID)
);"]
// END RANK codeblock_94

prose_95 -> { raw_139}
{rank=same; raw_139}

raw_139 [label="raw"]


// END RANK prose_95

raw_139 -> leaf_140
leaf_140  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields :
"]
// END RANK raw_139

prose_96 -> { raw_141 prespace_142 literal_143 raw_144 prespace_145 literal_146 raw_147}
{rank=same; raw_141 prespace_142 literal_143 raw_144 prespace_145 literal_146 raw_147}

raw_141 [label="raw"]

prespace_142 [label="prespace"]

literal_143 [label="literal"]

raw_144 [label="raw"]

prespace_145 [label="prespace"]

literal_146 [label="literal"]

raw_147 [label="raw"]


// END RANK prose_96

raw_141 -> leaf_148
leaf_148  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint_id :  Primary key for codepoint.
                     Note that this includes more code schemes than just
                    "]
// END RANK raw_141

prespace_142 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_142

literal_143 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_143

raw_144 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we intend to represent e.g."]
// END RANK raw_144

prespace_145 -> leaf_152
leaf_152  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_145

literal_146 -> leaf_153
leaf_153  [color=Gray,shape=rectangle,fontname=Inconsolata,label="EBCDIC"]
// END RANK literal_146

raw_147 -> leaf_154
leaf_154  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and =Latin-1.
"]
// END RANK raw_147

prose_97 -> { raw_155}
{rank=same; raw_155}

raw_155 [label="raw"]


// END RANK prose_97

raw_155 -> leaf_156
leaf_156  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codevalue    :  Exact numeric value of a given codepoint.
"]
// END RANK raw_155

prose_98 -> { raw_157 prespace_158 literal_159 raw_160}
{rank=same; raw_157 prespace_158 literal_159 raw_160}

raw_157 [label="raw"]

prespace_158 [label="prespace"]

literal_159 [label="literal"]

raw_160 [label="raw"]


// END RANK prose_98

raw_157 -> leaf_161
leaf_161  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - utf          :  Boolean identifying a codepoint as"]
// END RANK raw_157

prespace_158 -> leaf_162
leaf_162  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_158

literal_159 -> leaf_163
leaf_163  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_159

raw_160 -> leaf_164
leaf_164  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or otherwise.
"]
// END RANK raw_160

prose_99 -> { raw_165 prespace_166 literal_167 raw_168}
{rank=same; raw_165 prespace_166 literal_167 raw_168}

raw_165 [label="raw"]

prespace_166 [label="prespace"]

literal_167 [label="literal"]

raw_168 [label="raw"]


// END RANK prose_99

raw_165 -> leaf_169
leaf_169  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - category     :  This is the actual codepoint category and"]
// END RANK raw_165

prespace_166 -> leaf_170
leaf_170  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_166

literal_167 -> leaf_171
leaf_171  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_167

raw_168 -> leaf_172
leaf_172  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the
                     default.
"]
// END RANK raw_168

prose_100 -> { raw_173 prespace_174 literal_175 raw_176 prespace_177 literal_178 raw_179 prespace_180 literal_181 raw_182}
{rank=same; raw_173 prespace_174 literal_175 raw_176 prespace_177 literal_178 raw_179 prespace_180 literal_181 raw_182}

raw_173 [label="raw"]

prespace_174 [label="prespace"]

literal_175 [label="literal"]

raw_176 [label="raw"]

prespace_177 [label="prespace"]

literal_178 [label="literal"]

raw_179 [label="raw"]

prespace_180 [label="prespace"]

literal_181 [label="literal"]

raw_182 [label="raw"]


// END RANK prose_100

raw_173 -> leaf_183
leaf_183  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - description  :  Somewhat of a misnomer, this is a unique string that
                     defines the codepoint.  In"]
// END RANK raw_173

prespace_174 -> leaf_184
leaf_184  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_174

literal_175 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_175

raw_176 -> leaf_186
leaf_186  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" an example would be
                     «∞ INFINITY utf: U+221E, utf: E2 88 9E». ¶
                     Note the use of double guillemets: «»,
                     they are required. ¶
                     Latin-1 would say something like
                     «¬ NOT SIGN Latin-1: etc» but the not sign and
                     description would all be Latin-1, not"]
// END RANK raw_176

prespace_177 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_177

literal_178 -> leaf_188
leaf_188  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_178

raw_179 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".¶
   - version      :  Foreign key to a"]
// END RANK raw_179

prespace_180 -> leaf_190
leaf_190  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_180

literal_181 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label="version"]
// END RANK literal_181

raw_182 -> leaf_192
leaf_192  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" table. Not sure we actually
                     need this come to think of it.

"]
// END RANK raw_182

section_66 -> { header_193 prose_194 codeblock_195 prose_196 prose_197 prose_198 prose_199 prose_200 prose_201 prose_202 prose_203 prose_204}
{rank=same; header_193 prose_194 codeblock_195 prose_196 prose_197 prose_198 prose_199 prose_200 prose_201 prose_202 prose_203 prose_204}

header_193 [label="3 : codepoint_in"]

prose_194 [label="prose"]

codeblock_195 [label="code block 78-95"]

prose_196 [label="prose"]

prose_197 [label="prose"]

prose_198 [label="prose"]

prose_199 [label="prose"]

prose_200 [label="prose"]

prose_201 [label="prose"]

prose_202 [label="prose"]

prose_203 [label="prose"]

prose_204 [label="prose"]


// END RANK section_66

header_193 -> leaf_205
leaf_205  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** codepoint_in"]
// END RANK header_193

prose_194 -> { raw_206 prespace_207 literal_208 raw_209}
{rank=same; raw_206 prespace_207 literal_208 raw_209}

raw_206 [label="raw"]

prespace_207 [label="prespace"]

literal_208 [label="literal"]

raw_209 [label="raw"]


// END RANK prose_194

raw_206 -> leaf_210
leaf_210  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

This defines the placement of a codepoint within a single"]
// END RANK raw_206

prespace_207 -> leaf_211
leaf_211  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_207

literal_208 -> leaf_212
leaf_212  [color=Gray,shape=rectangle,fontname=Inconsolata,label="document"]
// END RANK literal_208

raw_209 -> leaf_213
leaf_213  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", another
table we'll get to later.
"]
// END RANK raw_209

codeblock_195 -> leaf_214
leaf_214  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS codepoint_in (
   codepoint_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   document UNIQUE, NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   codepoint INTEGER NOT NULL,
   doc INTEGER NOT NULL,
   document INTEGER NOT NULL,
   FOREIGN KEY codepoint
      REFERENCES codepoint (codepoint_id),
   FOREIGN KEY document
      REFERENCES document (document_id),
   FOREIGN KEY document
      REFERENCES document (document_id),"]
// END RANK codeblock_195

prose_196 -> { raw_215}
{rank=same; raw_215}

raw_215 [label="raw"]


// END RANK prose_196

raw_215 -> leaf_216
leaf_216  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_215

prose_197 -> { raw_217}
{rank=same; raw_217}

raw_217 [label="raw"]


// END RANK prose_197

raw_217 -> leaf_218
leaf_218  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Doccument foreign key to one version of a document.
"]
// END RANK raw_217

prose_198 -> { raw_219}
{rank=same; raw_219}

raw_219 [label="raw"]


// END RANK prose_198

raw_219 -> leaf_220
leaf_220  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_219

prose_199 -> { raw_221}
{rank=same; raw_221}

raw_221 [label="raw"]


// END RANK prose_199

raw_221 -> leaf_222
leaf_222  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_221

prose_200 -> { raw_223}
{rank=same; raw_223}

raw_223 [label="raw"]


// END RANK prose_200

raw_223 -> leaf_224
leaf_224  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_223

prose_201 -> { raw_225}
{rank=same; raw_225}

raw_225 [label="raw"]


// END RANK prose_201

raw_225 -> leaf_226
leaf_226  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_225

prose_202 -> { raw_227}
{rank=same; raw_227}

raw_227 [label="raw"]


// END RANK prose_202

raw_227 -> leaf_228
leaf_228  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - codepoint :  Foreign key to the codepoint entry.
"]
// END RANK raw_227

prose_203 -> { raw_229}
{rank=same; raw_229}

raw_229 [label="raw"]


// END RANK prose_203

raw_229 -> leaf_230
leaf_230  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_229

prose_204 -> { raw_231}
{rank=same; raw_231}

raw_231 [label="raw"]


// END RANK prose_204

raw_231 -> leaf_232
leaf_232  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.
"]
// END RANK raw_231

section_67 -> { header_233 prose_234 prose_235 codeblock_236 prose_237 prose_238 prose_239 prose_240 prose_241}
{rank=same; header_233 prose_234 prose_235 codeblock_236 prose_237 prose_238 prose_239 prose_240 prose_241}

header_233 [label="3 : word"]

prose_234 [label="prose"]

prose_235 [label="prose"]

codeblock_236 [label="code block 125-135"]

prose_237 [label="prose"]

prose_238 [label="prose"]

prose_239 [label="prose"]

prose_240 [label="prose"]

prose_241 [label="prose"]


// END RANK section_67

header_233 -> leaf_242
leaf_242  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word"]
// END RANK header_233

prose_234 -> { raw_243 prespace_244 literal_245 raw_246}
{rank=same; raw_243 prespace_244 literal_245 raw_246}

raw_243 [label="raw"]

prespace_244 [label="prespace"]

literal_245 [label="literal"]

raw_246 [label="raw"]


// END RANK prose_234

raw_243 -> leaf_247
leaf_247  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

A"]
// END RANK raw_243

prespace_244 -> leaf_248
leaf_248  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_244

literal_245 -> leaf_249
leaf_249  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_245

raw_246 -> leaf_250
leaf_250  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is what is says, an entry for a single word.
"]
// END RANK raw_246

prose_235 -> { raw_251}
{rank=same; raw_251}

raw_251 [label="raw"]


// END RANK prose_235

raw_251 -> leaf_252
leaf_252  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that this concept is very much differently defined for different
languages, but it's coherent and modular enough to work with them smoothly,
granting that the name itself will be inaccurate when considering, say,
Semitic roots.
"]
// END RANK raw_251

codeblock_236 -> leaf_253
leaf_253  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS word (
   word_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word STRING UNIQUE NOT NULL ON CONFLICT DO NOTHING,
   -- JSON array of codepoint_ids
   spelling BLOB NOT NULL ON CONFLICT DO NOTHING,
   thesaurus INTEGER,
   FOREIGN KEY thesaurus
      REFERENCES thesaurus (thesaurus_id)
);"]
// END RANK codeblock_236

prose_237 -> { raw_254}
{rank=same; raw_254}

raw_254 [label="raw"]


// END RANK prose_237

raw_254 -> leaf_255
leaf_255  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_254

prose_238 -> { raw_256 prespace_257 bold_258 raw_259}
{rank=same; raw_256 prespace_257 bold_258 raw_259}

raw_256 [label="raw"]

prespace_257 [label="prespace"]

bold_258 [label="bold"]

raw_259 [label="raw"]


// END RANK prose_238

raw_256 -> leaf_260
leaf_260  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word : A"]
// END RANK raw_256

prespace_257 -> leaf_261
leaf_261  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_257

bold_258 -> leaf_262
leaf_262  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_258

raw_259 -> leaf_263
leaf_263  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
"]
// END RANK raw_259

prose_239 -> { raw_264}
{rank=same; raw_264}

raw_264 [label="raw"]


// END RANK prose_239

raw_264 -> leaf_265
leaf_265  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - spelling : JSON array of the numeric codepoints specifying the spelling.
"]
// END RANK raw_264

prose_240 -> { raw_266}
{rank=same; raw_266}

raw_266 [label="raw"]


// END RANK prose_240

raw_266 -> leaf_267
leaf_267  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - thesaurus :  Key to a thesaurus entry for the word.
                  The thesaurus will have dictionary fields and is intended
                  for translation across languages as well as within them.
                  Basically a personal wiktionary.

"]
// END RANK raw_266

prose_241 -> { raw_268 prespace_269 literal_270 raw_271}
{rank=same; raw_268 prespace_269 literal_270 raw_271}

raw_268 [label="raw"]

prespace_269 [label="prespace"]

literal_270 [label="literal"]

raw_271 [label="raw"]


// END RANK prose_241

raw_268 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
word is fairly straightforward to populate as we go, although the exact
rules for what constitutes a word and what punctuation and whitespace vary
somewhat, the differences are well defined by the"]
// END RANK raw_268

prespace_269 -> leaf_273
leaf_273  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_269

literal_270 -> leaf_274
leaf_274  [color=Gray,shape=rectangle,fontname=Inconsolata,label="utf"]
// END RANK literal_270

raw_271 -> leaf_275
leaf_275  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" standard, wo we merely
 aad new ones as we find them.

"]
// END RANK raw_271

section_68 -> { header_276 prose_277 codeblock_278 prose_279 prose_280 prose_281 prose_282 prose_283 prose_284 prose_285 prose_286 prose_287 prose_288}
{rank=same; header_276 prose_277 codeblock_278 prose_279 prose_280 prose_281 prose_282 prose_283 prose_284 prose_285 prose_286 prose_287 prose_288}

header_276 [label="3 : word_in"]

prose_277 [label="prose"]

codeblock_278 [label="code block 159-176"]

prose_279 [label="prose"]

prose_280 [label="prose"]

prose_281 [label="prose"]

prose_282 [label="prose"]

prose_283 [label="prose"]

prose_284 [label="prose"]

prose_285 [label="prose"]

prose_286 [label="prose"]

prose_287 [label="prose"]

prose_288 [label="prose"]


// END RANK section_68

header_276 -> leaf_289
leaf_289  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** word_in"]
// END RANK header_276

prose_277 -> { raw_290 prespace_291 literal_292 raw_293}
{rank=same; raw_290 prespace_291 literal_292 raw_293}

raw_290 [label="raw"]

prespace_291 [label="prespace"]

literal_292 [label="literal"]

raw_293 [label="raw"]


// END RANK prose_277

raw_290 -> leaf_294
leaf_294  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Table representing a single word in a given"]
// END RANK raw_290

prespace_291 -> leaf_295
leaf_295  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_291

literal_292 -> leaf_296
leaf_296  [color=Gray,shape=rectangle,fontname=Inconsolata,label="Doc"]
// END RANK literal_292

raw_293 -> leaf_297
leaf_297  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_293

codeblock_278 -> leaf_298
leaf_298  [color=Gray,shape=rectangle,fontname=Inconsolata,label="CREATE TABLE IF NOT EXISTS word_in (
   word_in_id INTEGER PRIMARY KEY AUTOINCREMENT,
   word_repr STRING NOT NULL,
   disp INTEGER NOT NULL,
   wid INTEGER NOT NULL DEFAULT 1,
   line_num INTEGER NOT NULL,
   col_num INTEGER NOT NULL,
   word INTEGER,
   doc INTEGER,
   document INTEGER,
   FOREIGN KEY word
      REFERENCES word (word_id),
   FOREIGN KEY doc
      REFERENCE doc (doc_id)
   FOREIGN KEY document
      REFERENCES document (document_id),"]
// END RANK codeblock_278

prose_279 -> { raw_299}
{rank=same; raw_299}

raw_299 [label="raw"]


// END RANK prose_279

raw_299 -> leaf_300
leaf_300  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
- Schema fields
"]
// END RANK raw_299

prose_280 -> { raw_301 prespace_302 bold_303 raw_304}
{rank=same; raw_301 prespace_302 bold_303 raw_304}

raw_301 [label="raw"]

prespace_302 [label="prespace"]

bold_303 [label="bold"]

raw_304 [label="raw"]


// END RANK prose_280

raw_301 -> leaf_305
leaf_305  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word_repr :  A"]
// END RANK raw_301

prespace_302 -> leaf_306
leaf_306  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_302

bold_303 -> leaf_307
leaf_307  [color=Gray,shape=rectangle,fontname=Inconsolata,label="string"]
// END RANK bold_303

raw_304 -> leaf_308
leaf_308  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" representing the word.
                  Important because we don't consider zebra and zebras two
                  different words.
"]
// END RANK raw_304

prose_281 -> { raw_309}
{rank=same; raw_309}

raw_309 [label="raw"]


// END RANK prose_281

raw_309 -> leaf_310
leaf_310  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - disp      :  Number of bytes into the document where the codepoint is
                  found.
"]
// END RANK raw_309

prose_282 -> { raw_311}
{rank=same; raw_311}

raw_311 [label="raw"]


// END RANK prose_282

raw_311 -> leaf_312
leaf_312  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - wid       :  Width of the codepoint in bytes.
"]
// END RANK raw_311

prose_283 -> { raw_313}
{rank=same; raw_313}

raw_313 [label="raw"]


// END RANK prose_283

raw_313 -> leaf_314
leaf_314  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - line_num  :  Number of lines into the document.
"]
// END RANK raw_313

prose_284 -> { raw_315}
{rank=same; raw_315}

raw_315 [label="raw"]


// END RANK prose_284

raw_315 -> leaf_316
leaf_316  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - col_num   :  Number of columns into the document.
"]
// END RANK raw_315

prose_285 -> { raw_317}
{rank=same; raw_317}

raw_317 [label="raw"]


// END RANK prose_285

raw_317 -> leaf_318
leaf_318  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - word      :  Foreign key to the word entry.
"]
// END RANK raw_317

prose_286 -> { raw_319}
{rank=same; raw_319}

raw_319 [label="raw"]


// END RANK prose_286

raw_319 -> leaf_320
leaf_320  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - doc       :  Foreign key to the doc (revision).
"]
// END RANK raw_319

prose_287 -> { raw_321}
{rank=same; raw_321}

raw_321 [label="raw"]


// END RANK prose_287

raw_321 -> leaf_322
leaf_322  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
   - document  :  Foreign key to the entire document, all revisions included.

"]
// END RANK raw_321

prose_288 -> { raw_323}
{rank=same; raw_323}

raw_323 [label="raw"]


// END RANK prose_288

raw_323 -> leaf_324
leaf_324  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This table should be deduplicated between editions of documents to save
storage space; adding one word should cause one line's worth of changes.

"]
// END RANK raw_323

section_69 -> { header_325 prose_326}
{rank=same; header_325 prose_326}

header_325 [label="3 : phrase"]

prose_326 [label="prose"]


// END RANK section_69

header_325 -> leaf_327
leaf_327  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase"]
// END RANK header_325

prose_326 -> { raw_328 prespace_329 literal_330 raw_331}
{rank=same; raw_328 prespace_329 literal_330 raw_331}

raw_328 [label="raw"]

prespace_329 [label="prespace"]

literal_330 [label="literal"]

raw_331 [label="raw"]


// END RANK prose_326

raw_328 -> leaf_332
leaf_332  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Unlike"]
// END RANK raw_328

prespace_329 -> leaf_333
leaf_333  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_329

literal_330 -> leaf_334
leaf_334  [color=Gray,shape=rectangle,fontname=Inconsolata,label="word"]
// END RANK literal_330

raw_331 -> leaf_335
leaf_335  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" there's no good or linear algorithm for phrase recognition,
populating this is a matter of natural languag processing and making these
concordances is moderately expensive and should be saved for editions rather
than just any orb run.

"]
// END RANK raw_331

section_70 -> { header_336 prose_337}
{rank=same; header_336 prose_337}

header_336 [label="3 : phrase_in"]

prose_337 [label="prose"]


// END RANK section_70

header_336 -> leaf_338
leaf_338  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** phrase_in"]
// END RANK header_336

prose_337 -> { raw_339}
{rank=same; raw_339}

raw_339 [label="raw"]


// END RANK prose_337

raw_339 -> leaf_340
leaf_340  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_339

section_71 -> { header_341 prose_342}
{rank=same; header_341 prose_342}

header_341 [label="3 : line"]

prose_342 [label="prose"]


// END RANK section_71

header_341 -> leaf_343
leaf_343  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line"]
// END RANK header_341

prose_342 -> { raw_344}
{rank=same; raw_344}

raw_344 [label="raw"]


// END RANK prose_342

raw_344 -> leaf_345
leaf_345  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_344

section_72 -> { header_346 prose_347}
{rank=same; header_346 prose_347}

header_346 [label="3 : line_in"]

prose_347 [label="prose"]


// END RANK section_72

header_346 -> leaf_348
leaf_348  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** line_in"]
// END RANK header_346

prose_347 -> { raw_349}
{rank=same; raw_349}

raw_349 [label="raw"]


// END RANK prose_347

raw_349 -> leaf_350
leaf_350  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_349

section_73 -> { header_351 prose_352}
{rank=same; header_351 prose_352}

header_351 [label="3 : sentence"]

prose_352 [label="prose"]


// END RANK section_73

header_351 -> leaf_353
leaf_353  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence"]
// END RANK header_351

prose_352 -> { raw_354}
{rank=same; raw_354}

raw_354 [label="raw"]


// END RANK prose_352

raw_354 -> leaf_355
leaf_355  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_354

section_74 -> { header_356 prose_357}
{rank=same; header_356 prose_357}

header_356 [label="3 : sentence_in"]

prose_357 [label="prose"]


// END RANK section_74

header_356 -> leaf_358
leaf_358  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** sentence_in"]
// END RANK header_356

prose_357 -> { raw_359}
{rank=same; raw_359}

raw_359 [label="raw"]


// END RANK prose_357

raw_359 -> leaf_360
leaf_360  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_359

section_75 -> { header_361 prose_362}
{rank=same; header_361 prose_362}

header_361 [label="3 : block"]

prose_362 [label="prose"]


// END RANK section_75

header_361 -> leaf_363
leaf_363  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block"]
// END RANK header_361

prose_362 -> { raw_364}
{rank=same; raw_364}

raw_364 [label="raw"]


// END RANK prose_362

raw_364 -> leaf_365
leaf_365  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

"]
// END RANK raw_364

section_76 -> { header_366 prose_367}
{rank=same; header_366 prose_367}

header_366 [label="3 : block_in"]

prose_367 [label="prose"]


// END RANK section_76

header_366 -> leaf_368
leaf_368  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** block_in"]
// END RANK header_366

prose_367 -> { raw_369}
{rank=same; raw_369}

raw_369 [label="raw"]


// END RANK prose_367

raw_369 -> leaf_370
leaf_370  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_369

section_77 -> { header_371 prose_372}
{rank=same; header_371 prose_372}

header_371 [label="3 : section"]

prose_372 [label="prose"]


// END RANK section_77

header_371 -> leaf_373
leaf_373  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section"]
// END RANK header_371

prose_372 -> { raw_374}
{rank=same; raw_374}

raw_374 [label="raw"]


// END RANK prose_372

raw_374 -> leaf_375
leaf_375  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_374

section_78 -> { header_376 prose_377}
{rank=same; header_376 prose_377}

header_376 [label="3 : section_in"]

prose_377 [label="prose"]


// END RANK section_78

header_376 -> leaf_378
leaf_378  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** section_in"]
// END RANK header_376

prose_377 -> { raw_379}
{rank=same; raw_379}

raw_379 [label="raw"]


// END RANK prose_377

raw_379 -> leaf_380
leaf_380  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_379


}
