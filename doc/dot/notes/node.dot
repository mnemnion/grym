digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 60"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-39"]


section_1 -> { header_2 prose_3 section_4 section_5 section_6}
{rank=same; header_2 prose_3 section_4 section_5 section_6}

header_2 [label="1 : Node class"]

prose_3 [label="prose"]

section_4 [label="section: 3-11"]

section_5 [label="section: 12-39"]

section_6 [label="section: 40-55"]


header_2 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Node class"]
prose_3 -> { raw_8}
{rank=same; raw_8}

raw_8 [label="raw"]


raw_8 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
section_4 -> { header_10 prose_11 prose_12}
{rank=same; header_10 prose_11 prose_12}

header_10 [label="2 : THIS FILE IS DEPRECATED"]

prose_11 [label="prose"]

prose_12 [label="prose"]


header_10 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** THIS FILE IS DEPRECATED"]
prose_11 -> { raw_14 prespace_15 interpolated_16 raw_17}
{rank=same; raw_14 prespace_15 interpolated_16 raw_17}

raw_14 [label="raw"]

prespace_15 [label="prespace"]

interpolated_16 [label="interpolated"]

raw_17 [label="raw"]


raw_14 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  The behavior of abstract syntax trees in"]
prespace_15 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_16 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="pegylator"]
raw_17 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is provided by the Node
class.
"]
prose_12 -> { raw_22}
{rank=same; raw_22}

raw_22 [label="raw"]


raw_22 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This is in turn poorly specified and full of exploratory code that is in need
of a few once-overs.

"]
section_5 -> { header_24 prose_25 prose_26 prose_27 prose_28 prose_29 prose_30}
{rank=same; header_24 prose_25 prose_26 prose_27 prose_28 prose_29 prose_30}

header_24 [label="2 : Members"]

prose_25 [label="prose"]

prose_26 [label="prose"]

prose_27 [label="prose"]

prose_28 [label="prose"]

prose_29 [label="prose"]

prose_30 [label="prose"]


header_24 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** Members"]
prose_25 -> { raw_32}
{rank=same; raw_32}

raw_32 [label="raw"]


raw_32 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  To be a Node, all indexed elements of the Array must also be Nodes. 
"]
prose_26 -> { raw_34 prespace_35 interpolated_36 raw_37 prespace_38 interpolated_39 raw_40 prespace_41 interpolated_42 raw_43 prespace_44 interpolated_45 raw_46 prespace_47 interpolated_48 raw_49}
{rank=same; raw_34 prespace_35 interpolated_36 raw_37 prespace_38 interpolated_39 raw_40 prespace_41 interpolated_42 raw_43 prespace_44 interpolated_45 raw_46 prespace_47 interpolated_48 raw_49}

raw_34 [label="raw"]

prespace_35 [label="prespace"]

interpolated_36 [label="interpolated"]

raw_37 [label="raw"]

prespace_38 [label="prespace"]

interpolated_39 [label="interpolated"]

raw_40 [label="raw"]

prespace_41 [label="prespace"]

interpolated_42 [label="interpolated"]

raw_43 [label="raw"]

prespace_44 [label="prespace"]

interpolated_45 [label="interpolated"]

raw_46 [label="raw"]

prespace_47 [label="prespace"]

interpolated_48 [label="interpolated"]

raw_49 [label="raw"]


raw_34 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There are invariant fields a Node is also expected to have, they are:
 
  -"]
prespace_35 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_36 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label="first"]
raw_37 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" :  Index into"]
prespace_38 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_39 -> leaf_55
leaf_55  [color=Gray,shape=rectangle,fontname=Inconsolata,label="str"]
raw_40 -> leaf_56
leaf_56  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" which begins the span.
  -"]
prespace_41 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_42 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label="last"]
raw_43 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label="  :  Index into"]
prespace_44 -> leaf_60
leaf_60  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_45 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label="str"]
raw_46 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" which ends the span.
  -"]
prespace_47 -> leaf_63
leaf_63  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_48 -> leaf_64
leaf_64  [color=Gray,shape=rectangle,fontname=Inconsolata,label="id"]
raw_49 -> leaf_65
leaf_65  [color=Gray,shape=rectangle,fontname=Inconsolata,label="    :  A string naming the Node. 
               This is identical to the name of the pattern that recognizes
               or captures it.

"]
prose_27 -> { raw_66}
{rank=same; raw_66}

raw_66 [label="raw"]


raw_66 -> leaf_67
leaf_67  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There are other fields which are of less obvious value, which still exist:
"]
prose_28 -> { raw_68 prespace_69 interpolated_70 raw_71 prespace_72 interpolated_73 raw_74}
{rank=same; raw_68 prespace_69 interpolated_70 raw_71 prespace_72 interpolated_73 raw_74}

raw_68 [label="raw"]

prespace_69 [label="prespace"]

interpolated_70 [label="interpolated"]

raw_71 [label="raw"]

prespace_72 [label="prespace"]

interpolated_73 [label="interpolated"]

raw_74 [label="raw"]


raw_68 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
  -"]
prespace_69 -> leaf_76
leaf_76  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_70 -> leaf_77
leaf_77  [color=Gray,shape=rectangle,fontname=Inconsolata,label="str"]
raw_71 -> leaf_78
leaf_78  [color=Gray,shape=rectangle,fontname=Inconsolata,label="  : a \"string\" covering the whole abstract syntax tree.
             This is normally found on root for which see:
  -"]
prespace_72 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_73 -> leaf_80
leaf_80  [color=Gray,shape=rectangle,fontname=Inconsolata,label="root"]
raw_74 -> leaf_81
leaf_81  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" : a function which, called, returns the root node.
             I was impressed with this idea when I came up with it.
             Haven't been getting much use out of it.
"]
prose_29 -> { raw_82}
{rank=same; raw_82}

raw_82 [label="raw"]


raw_82 -> leaf_83
leaf_83  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
An important optional field, if a Node has a semantic span (such as a symbol)
then it will have:
"]
prose_30 -> { raw_84 prespace_85 interpolated_86 raw_87}
{rank=same; raw_84 prespace_85 interpolated_86 raw_87}

raw_84 [label="raw"]

prespace_85 [label="prespace"]

interpolated_86 [label="interpolated"]

raw_87 [label="raw"]


raw_84 -> leaf_88
leaf_88  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
  -"]
prespace_85 -> leaf_89
leaf_89  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
interpolated_86 -> leaf_90
leaf_90  [color=Gray,shape=rectangle,fontname=Inconsolata,label="val"]
raw_87 -> leaf_91
leaf_91  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" :  The substring of value to the syntax tree.

"]
section_6 -> { header_92 prose_93 prose_94 section_95 section_96}
{rank=same; header_92 prose_93 prose_94 section_95 section_96}

header_92 [label="2 : Node metatable"]

prose_93 [label="prose"]

prose_94 [label="prose"]

section_95 [label="section: 49-55"]

section_96 [label="section: 56-60"]


header_92 -> leaf_97
leaf_97  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** Node metatable"]
prose_93 -> { raw_98}
{rank=same; raw_98}

raw_98 [label="raw"]


raw_98 -> leaf_99
leaf_99  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  This is currently constructed wildly and piecemeal.  It also does important
work. 
"]
prose_94 -> { raw_100}
{rank=same; raw_100}

raw_100 [label="raw"]


raw_100 -> leaf_101
leaf_101  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Best methods are:

"]
section_95 -> { header_102 prose_103 prose_104}
{rank=same; header_102 prose_103 prose_104}

header_102 [label="3 : dot"]

prose_103 [label="prose"]

prose_104 [label="prose"]


header_102 -> leaf_105
leaf_105  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** dot"]
prose_103 -> { raw_106}
{rank=same; raw_106}

raw_106 [label="raw"]


raw_106 -> leaf_107
leaf_107  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  Some of my most recent code, this prints the AST as a dot file. 
"]
prose_104 -> { raw_108}
{rank=same; raw_108}

raw_108 [label="raw"]


raw_108 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It is now reasonably documented in [[src/peg/transform.lua]].

"]
section_96 -> { header_110 prose_111}
{rank=same; header_110 prose_111}

header_110 [label="3 : select"]

prose_111 [label="prose"]


header_110 -> leaf_112
leaf_112  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** select"]
prose_111 -> { raw_113}
{rank=same; raw_113}

raw_113 [label="raw"]


raw_113 -> leaf_114
leaf_114  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  Select pulls out sub Nodes which fulfill certain predicates.

"]

}
