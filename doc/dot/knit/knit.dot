digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 127"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-38"]


section_1 -> { header_2 block_3 block_4 section_5}
{rank=same; header_2 block_3 block_4 section_5}

header_2 [label="1 : Knit module"]

block_3 [label="block 1-3"]

block_4 [label="block 4-38"]

section_5 [label="section: 39-127"]



block_3 -> leaf_6
leaf_6  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" 
"]
block_4 -> { codeblock_7}
{rank=same; codeblock_7}

codeblock_7 [label="code block 4-36"]



codeblock_7 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local L = require \"lpeg\"

local s = require \"status\"
local a = require \"ansi\"
s.chatty = true

local pl_file = require \"pl.file\"
local pl_dir = require \"pl.dir\"
local pl_path = require \"pl.path\"
local getfiles = pl_dir.getfiles
local getdirectories = pl_dir.getdirectories
local makepath = pl_dir.makepath
local extension = pl_path.extension
local dirname = pl_path.dirname
local basename = pl_path.basename
local read = pl_file.read
local write = pl_file.write
local delete = pl_file.delete
local isdir = pl_path.isdir

local epeg = require \"peg/epeg\"

local knitter = require \"knit/knitter\"

local walk = require \"walk\"
local strHas = walk.strHas
local endsWith = walk.endsWith
local subLastFor = walk.subLastFor

local Doc = require \"grym/doc\"
"]

block_4 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
section_5 -> { header_10 block_11 block_12 block_13}
{rank=same; header_10 block_11 block_12 block_13}

header_10 [label="3 : knit_dir(knitter, pwd, depth)"]

block_11 [label="block 39-43"]

block_12 [label="block 44-46"]

block_13 [label="block 47-127"]



block_11 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
 Walks a given directory, kniting the contents of =/org/=
 into =/src/=. 
"]

block_12 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" - [X] TODO fix up the orb/notes directory so it doesn't explode
       the knit.
"]
block_13 -> { codeblock_16}
{rank=same; codeblock_16}

codeblock_16 [label="code block 47-126"]



codeblock_16 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function knit_dir(knitter, orb_dir, pwd)
    local knits = {}
    for dir in pl_dir.walk(orb_dir, false, false) do
        if not strHas(\".git\", dir) and isdir(dir)
            and not strHas(\"src/lib\", dir) then

            local files = getfiles(dir)
            s:chat(\"  * \" .. dir)
            local subdirs = getdirectories(dir)
            for _, f in ipairs(files) do
                if extension(f) == \".orb\" then
                    -- read and knit
                    local orb_f = read(f)
                    local knitted = knitter:knit(Doc(orb_f))
                    local src_dir = subLastFor(\"/orb\", \"/src\", dirname(f))
                    makepath(src_dir)
                    local bare_name = basename(f):sub(1, -5) -- 4 == #\".orb\"
                    local out_name = src_dir .. \"/\" .. bare_name .. \".lua\"
                    local current_src = read(out_name) or \"\"

                    if knitted ~= \"\" then    
                        if knitted ~= current_src then
                            s:chat(a.green(\"    - \" .. out_name))
                            write(out_name, knitted)
                            -- make a copy of current_src just in case
                            local tmp_dir = \"../tmp\" .. src_dir
                            makepath(tmp_dir)
                            local tmp_out = \"../tmp\" .. out_name

                            write(tmp_out, current_src)
                            knits[#knits + 1] = out_name
                        else
                            s:verb(\"    - \" .. out_name)
                        end
                    elseif current_src ~= \"\" then
                        s:chat(a.red(\"    - \" .. out_name))
                        delete(out_name)
                    end
                end
            end
        end
    end



    -- collect changed files if any
    local grymbacks = \"\"
    for _, v in ipairs(knits) do
        grymbacks = grymbacks .. v .. \"\\n\"
    end
    if grymbacks ~= \"\" then
        s:chat(\"grymbacks: \\n\" .. grymbacks)
    end
    -- if nothing changes, no rollback is needed, empty file
    write(pwd .. \"/.grymback\", grymbacks)
    return true
end

local function knit_all(knitter, pwd)
    local did_knit = false
    for dir in pl_dir.walk(pwd, false, false) do
        if not strHas(\".git\", dir) and isdir(dir) 
            and endsWith(\"orb\", dir) then

            s:chat(a.green(\"Knit: \" .. dir))
            did_knit = knit_dir(knitter, dir, pwd)
        end
    end
    if not did_knit then
        s:chat(\"No orb directory to knit. No action taken.\")
    end
    return did_knit
end

knitter.knit_all = knit_all


return knitter"]

block_13 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]

}
