digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 40"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-40"]


section_1 -> { header_2 block_3 block_4 codeblock_5 block_6 codeblock_7}
{rank=same; header_2 block_3 block_4 codeblock_5 block_6 codeblock_7}

header_2 [label="0 : "]

block_3 [label="block 1-3"]

block_4 [label="block 4-5"]

codeblock_5 [label="code block 6-21"]

block_6 [label="block 23-24"]

codeblock_7 [label="code block 25-40"]


header_2 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
block_3 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" Forest module
"]
block_4 -> leaf_10
leaf_10  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" Provides tools for working with vectors of borrowed Nodes
"]
codeblock_5 -> leaf_11
leaf_11  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function forest_tostring(forest)
   local top_phrase = \"[ \"
   for i,v in ipairs(forest) do 
      top_phrase = top_phrase..v.id..\" \"
   end
   top_phrase = top_phrase..\"]\\n\"
   local node_phrase = \"\"
   for i,v in ipairs(forest) do
      node_phrase = node_phrase..tostring(v)
   end
   return top_phrase..node_phrase
end

local function F ()"]
block_6 -> leaf_12
leaf_12  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" <Forest> metatable
"]
codeblock_7 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="   local meta = {}
   meta[\"__index\"] = meta
   meta[\"__tostring\"] = forest_tostring
     meta[\"isforest\"] = true
     --the below are added to F in ast.lua 
     --meta[\"select\"] = ast.forest.select
     --meta[\"with\"]   = ast.forest.select_with
     --meta[\"pick\"]   = ast.forest.pick
   return meta
end

local F = F()

return F"]

}
