digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 28"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-28"]


section_1 -> { header_2 block_3 codeblock_4}
{rank=same; header_2 block_3 codeblock_4}

header_2 [label="0 : "]

block_3 [label="block 1-3"]

codeblock_4 [label="code block 4-28"]


header_2 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
block_3 -> leaf_6
leaf_6  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" The Node metatable 
"]
codeblock_4 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local ast = require \"peg/ast-node\"
local transform = require \"peg/transform\"


local meta = {}
meta[\"__call\"] = function ()
  io.write \"Cannot call Node without evaluator\"
end
meta[\"__index\"] = meta
meta[\"__tostring\"] = ast.tostring
meta[\"isnode\"] = true
meta[\"root\"] = ast.root
meta[\"range\"] = ast.range
meta[\"copy\"] = ast.copy
meta[\"lift\"]  = ast.lift
meta[\"tokens\"] = ast.tokenize
meta[\"flatten\"] = ast.flatten
meta[\"select\"] = ast.__select_node
meta[\"with\"] = ast.__select_with_node
meta[\"dot\"] = transform.dot
meta[\"dotLabel\"] = ast.dotLabel

return meta"]

}
