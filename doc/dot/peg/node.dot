digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="28  "]

doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="28  "]

section_1 -> { header_2 block_3 block_4}
{rank=same; header_2 block_3 block_4}

header_2 [label=":   "]
block_3 [label="-3  "]
block_4 [label="28  "]


block_3 -> leaf_5
leaf_5  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" The Node metatable 

"]block_4 -> { codeblock_6}
{rank=same; codeblock_6}

codeblock_6 [label="28  "]


codeblock_6 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local ast = require \"peg/ast-node\"
local transform = require \"peg/transform\"


local meta = {}
meta[\"__call\"] = function ()
  io.write \"Cannot call Node without evaluator\"
end
meta[\"__index\"] = meta
meta[\"__tostring\"] = ast.tostring
meta[\"isnode\"] = true
meta[\"root\"] = ast.root
meta[\"range\"] = ast.range
meta[\"copy\"] = ast.copy
meta[\"lift\"]  = ast.lift
meta[\"tokens\"] = ast.tokenize
meta[\"flatten\"] = ast.flatten
meta[\"select\"] = ast.__select_node
meta[\"with\"] = ast.__select_with_node
meta[\"dot\"] = transform.dot
meta[\"dotLabel\"] = ast.dotLabel

return meta
"]
block_4 -> leaf_8
leaf_8  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
}
